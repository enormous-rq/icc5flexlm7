<html><head>
<title>FLEXlm End User Manual</title>
</head><body>
<title>FLEXlm End User Manual</title>
<h1>FLEXlm End User Manual</h1>
<a href="#_IX">Index</a>
<ul>
<li><a href="#Chapter 1">Chapter 1 
Introduction and Overview</a>
<ul>
<li><a href="#1.1">1.1  Introduction to FLEXlm<I></I></a>
<li><a href="#1.2">1.2  Getting Started Checklist</a>
</ul>
<li><a href="#Chapter 2">Chapter 2 <a name="31549: chap head: Chapter 1"></a>
The License File</a>
<ul>
<li><a href="#2.1">2.1  Specifying Location of the License File</a>
<li><a href="#2.2">2.2  License File Format</a>
<li><a href="#2.3">2.3  Sample License File</a>
<li><a href="#2.4">2.4  Types of License Files </a>
<li><a href="#2.5">2.5  Decimal Format</a>
<li><a href="#2.6">2.6  License file order</a>
</ul>
<li><a href="#Chapter 3">Chapter 3 <a name="17416: chap head: Chapter 2"></a>
<a name="_IX_60"></a>Multiple License Files</a>
<ul>
<li><a href="#3.1">3.1  Overview of Combining License Files</a>
<li><a href="#3.2">3.2  Using LM_LICENSE_FILE License File List </a>
</ul>
<li><a href="#Chapter 4">Chapter 4 <a name="15827: chap head: Chapter 4"></a>
Selecting Server Nodes</a>
<ul>
<li><a href="#4.1">4.1  Resources Used by the Server</a>
<li><a href="#4.2">4.2  Remote Mounted Disks</a>
<li><a href="#4.3">4.3  Redundant Servers</a>
<li><a href="#4.4">4.4  Counted vs. Uncounted Licenses</a>
</ul>
<li><a href="#Chapter 5">Chapter 5 <a name="19683: chap head: End-User License Administration"></a>
The <a name="_IX_90"></a>Options File</a>
<ul>
<li><a href="#5.1">5.1  Creating an Options File</a>
<li><a href="#5.2">5.2  Customizing the Options File</a>
<li><a href="#5.3">5.3  TIMEOUTALL</a>
<li><a href="#5.4">5.4  Understanding Options Files</a>
</ul>
<li><a href="#Chapter 6">Chapter 6 <a name="78920: chap head: Chapter 6 License Administration Tools"></a>
License Administration Tools</a>
<ul>
<li><a href="#6.1">6.1  lmcksum</a>
<li><a href="#6.2">6.2  lmdiag</a>
<li><a href="#6.3">6.3  lmdown</a>
<li><a href="#6.4">6.4  lmgrd<I></I></a>
<li><a href="#6.5">6.5  lmhostid</a>
<li><a href="#6.6">6.6  lminstall</a>
<li><a href="#6.7">6.7  lmremove</a>
<li><a href="#6.8">6.8  lmreread</a>
<li><a href="#6.9">6.9  lmstat</a>
<li><a href="#6.10">6.10  lmswitchr</a>
<li><a href="#6.11">6.11  lmver</a>
<li><a href="#6.12">6.12  License Administration Tools for Windows</a>
</ul>
<li><a href="#Appendix A">Appendix A  <a name="88781: AppTitle1: Appendix A Hostids for FLEXlm-Supported Machines"></a>
Hostids for FLEXlm<I></I>-Supported Machines</a>
<ul>
<li><a href="#A.1">A.1  Hostid Table</a>
</ul>
<li><a href="#Appendix B">Appendix B  <a name="23527: apphead: Appendix B"></a>
<a name="_IX_148"></a>Troubleshooting Guide</a>
<ul>
<li><a href="#B.1">B.1  General Debugging Hints</a>
<li><a href="#B.2">B.2  FLEXLM_DIAGNOSTICS</a>
<li><a href="#B.3">B.3  FLEXlm<I></I> Troubleshooting List</a>
<li><a href="#B.4">B.4  Other Client Problems</a>
<li><a href="#B.5">B.5  Other Server Problems</a>
</ul>
<li><a href="#Appendix C">Appendix C  <a name="14667: AppTitle: Appendix C FLEXlm environment variables"></a>
FLEXlm environment variables</a>
<ul>
<li><a href="#C.1">C.1  How to set environment variables</a>
<li><a href="#3.2">3.2  Environment variables</a>
</ul>
<li><a href="#Appendix D">Appendix D  <a name="27042: AppTitle: Appendix C Frequently Asked Questions"></a>
Frequently Asked Questions</a>
<ul>
<li><a href="#D.1">D.1  License File Questions</a>
<li><a href="#D.2">D.2  FLEX<I>lm</I> Versions</a>
<li><a href="#D.3">D.3  Using FLEX<I>lm</I></a>
<li><a href="#D.4">D.4  Windows Questions</a>
</ul>
<li><a href="#Appendix E">Appendix E  
<a name="_IX_182"></a>FLEX<I>lm</I> Error Codes</a>
<ul>
<li><a href="#E.1">E.1  Error Message Format</a>
<li><a href="#E.2">E.2  Error Code Descriptions</a>
</ul>
<li><a href="#Appendix F">Appendix F  <a name="14869: apphead: Appendix A"></a>
The <a name="_IX_184"></a>Debug Log File</a>
<ul>
<li><a href="#F.1">F.1  Informational Messages</a>
<li><a href="#F.2">F.2  Configuration Problem Messages</a>
<li><a href="#F.3">F.3  Daemon Software Error Messages</a>
</ul>
<li><a href="#Appendix G">Appendix G  <a name="23857: AppTitle: Appendix G FLEXlm Versions"></a>
<a name="_IX_188"></a>FLEX<I>lm</I> Versions</a>
<ul>
<li><a href="#G.1">G.1  Version compatibility and components</a>
</ul>
<a href="#_IX">Index</a>
</ul>
<a name="Chapter 1"></a><hr><h1>Chapter 1 
Introduction and Overview</h1>
<p>
This chapter explains the basics of floating (network) licensing, and gives a quick 
overview of the components of 
FLEXlm<I></I>. It explains where license administrators have 
control and where end-users have control. A section called 
<a href="#33030: 1head: 1.2 Getting Started Checklist">`Getting Started Checklist' 
on page 6</a> tells both license administrators and end-users how to start managing 
FLEXlm<I></I>.<p>
<a name="1.1"></a><h2>1.1  Introduction to FLEXlm<I></I></h2>
<p>
FLEXlm<I></I> is the most popular license manager used in the software industry. 
FLEXlm<I></I> 
is best known for its ability to allow software licenses to be available (or float) 
anywhere on a network, instead of being tied to specific machines. Floating licensing 
benefits both users and license administrators. Users can make more efficient use of 
fewer licenses by sharing them on the network. License administrators can control who 
uses the licensed application, and the node(s) where the licenses will be available. See 
<a href="#18841: 1Head: 2.4 Types of License Files">Section 2.4, `Types of License Files,' on page 21</a> for details about the different 
licensing models supported by 
FLEXlm<I></I>.<p>
<h3>1.1.1	 FLEXlm<I></I> Components</h3>
<p>
The four main components of 
FLEXlm<I></I> are:<p>
<ul><li>license manager daemon<li>vendor daemon<li>license file<li>application program</ul><h4>The License Manager Daemon (lmgrd<I></I>)</h4>
<p>
The 
<I>license manager daemon</I> (lmgrd<I></I>) handles the initial contact with the client 
application programs, passing the connection on to the appropriate vendor daemon. It 
also starts and restarts the vendor daemons. 
FLEXlm<I></I> permits multiple redundant 
license manager daemons on three server nodes, allowing you to make your license 
available if any two out of the three server nodes is running. Redundancy can be 
achieved with 3-server redundant servers, or by using a license file list with any 
number of servers.<p>
<p>
lmgrd<I></I> is not present on VMS or Netware systems.<p>
<h4>The Vendor Daemon</h4>
<p>
In 
FLEXlm<I></I>, licenses are granted by running processes (unless they're node locked, 
uncounted, in which case they need only read the license file to run). There is one 
process for each vendor who has a 
FLEXlm<I></I>-licensed product on the network. This 
process is called the 
<I>vendor daemon</I>. The vendor daemon keeps track of how many 
licenses are checked out, and who has them. If the vendor daemon terminates for any 
reason, all users lose their licenses (though this does not mean the applications 
suddenly stop running). Users normally regain their license automatically when 
lmgrd<I></I> 
restarts the vendor daemon, though they may exit if the vendor daemon remains 
unavailable.<p>
<p>
Client programs communicate with the vendor daemon, usually through TCP/IP 
network communications. The client application and the daemon processes (the 
license server) can run on separate nodes on your network, across any size wide-area 
network. Also, the format of the traffic between the client and the vendor daemon is 
machine-independent, allowing for heterogeneous networks. This means the license 
server and the computer running an application can be either different hardware 
platforms or even different operating systems (Windows and Unix, for example).<p>
<h4>The License File</h4>
<p>
Licensing data is stored in a text file called the 
<a name="_IX_1"></a>license file. The 
<a name="_IX_2"></a>license file is created 
by the software vendor, and edited and installed by the license administrator. It contains 
information about the server nodes and vendor daemons, and at least one line of data 
(called 
<a name="_IX_3"></a>FEATURE or INCREMENT lines) for each licensed product. Each FEATURE 
line contains a license key based on the data in that line, the hostids specified in the 
SERVER lines, and other vendor-specific data.<p>
<p>
In some environments, the licensing information for several vendors may be combined 
into a single 
<a name="_IX_4"></a>license file.<p>
<p>
Most applications have an expected location for the license file, documented by that 
application. End-users can usually override this location by setting the environment 
variable 
LM_LICENSE_FILE<TT></TT> to point elsewhere, or by following instructions 
supplied with the licensed application. If your site has software from multiple vendors 
with incompatible license files (due to different sets of servers), you can keep the data 
in separate files and set the 
<a name="_IX_5"></a>LM_LICENSE_FILE<TT></TT> variable to reference multiple files.<p>
<p>
Flexlm provides a default location for license files, which is used only if no other 
location is provided by the application or user, and this is considered rare. The default 
location is:<p>
<pre>	/usr/local/flexlm/licenses/license.dat (Unix)</pre>
<pre>	C:\flexlm\license.dat (Windows, Windows/NT, OS/2)</pre>
<pre>	SYS$COMMON:[SYSMGR]flexlm.dat (VMS)</pre>
<pre>	SYS:\SYSTEM\flexlm\license.dat (Netware)</pre>
</ol></ul><p>
The default location should be used with caution: setting LM_LICENSE_FILE may 
actually cause applications to fail if their license is located in the default location, but 
that location is not included in LM_LICENSE_FILE. This is because setting 
LM_LICENSE_FILE removes the default location from the license file list.<p>
<p>
It's strongly recommended that you keep a copy or link (on Unix) of the license file in 
the vendor's expected license location, so that users will not need to set 
LM_LICENSE_FILE to run their applications. If the licenses are counted (floating) 
this license should have a `USE_SERVER' line directly after the SERVER line. For 
details, see 
<a href="#31549: chap head: Chapter 1">Chapter 2, `The License File' on page 9</a>. See also 
<a href="#41901: 1HeadApp: C.1 How to set environment variables">Appendix C, `How to 
set environment variables' on page 65</a>.<p>
<h4>The Application Program</h4>
<p>
The application program using 
FLEXlm<I></I> is linked with the program module (called the 
FLEXlm<I></I> client library) that provides the communication with the license server. On 
Windows, this module is called LMGR<I>xxx</I>.DLL, where 
<I>xxx</I> indicates the 
FLEXlm<I></I> 
version. During execution, the application program communicates with the vendor 
daemon to request a license.<p>
<h3>1.1.2	 <a name="48645: 2head: 1.1.2 The License Request Process"></a>The License Request Process</h3>
<p>
When you run a `counted' 
<a name="_IX_6"></a>FLEXlm<I></I>-licensed application the following occurs:<p>
<ol><li>The license module in the client application finds the license file, which includes 
the host name of the license server node and port number of the license manager 
daemon, 
lmgrd<I></I>.<li>The client establishes a connection with the license manager daemon (lmgrd<I></I>) and 
tells it what vendor daemon it needs to talk to.<li>lmgrd<I></I> determines which machine and port correspond to the master vendor 
daemon and sends that information back to the client.<li>The client establishes a connection with the specified vendor daemon and sends 
its request for a license.<li>The vendor daemon checks in its memory to see if any licenses are available and 
sends a grant or denial back to the client.<li>The license module in the application grants or denies use of the feature, as 
appropriate.</ol>
<p>
`Uncounted' features (where the number of licenses is '0') do not require a server, and 
the 
FLEXlm<I></I> client library routines in the application grant or deny usage based solely 
upon the license contents.<p>
<h3>1.1.3	 Configuring 
FLEXlm<I></I></h3>
<p>
Most of the parameters of 
FLEXlm<I></I> are configurable by the license administrator. The 
license administrator can set:<p>
<ul><li>the location of the license file (though it's recommended that a copy or link of the 
license remains at the location where the application expects it)<li>the location of all executables<li>the location of all log files<li>the TCP/IP port number used by the license manager process, 
lmgrd<I></I>.</ul><p>
In addition, the license administrator can reserve licenses for specific users, nodes, or 
groups, and control other license-related options. Changing parameters is discussed in 
<a href="#19683: chap head: End-User License Administration">Chapter 5, `The Options File' on page 35</a>.<p>
<p>
Refer to your vendor's documentation before attempting to change file names, 
locations, or contents. 
<p>
<a name="33030: 1head: 1.2 Getting Started Checklist"></a><a name="1.2"></a><h2>1.2  Getting Started Checklist</h2>
<p>
The following sections provide a quick overview of how to set up and use licensing for 
FLEXlm<I></I>-licensed products. By scanning the list, you should be able to quickly find the 
areas of interest. Cross-references point to more details in other parts of this manual.<p>
<h3>1.2.1	 <a name="_IX_7"></a>Installing Licensed Software</h3>
<p>
As a license administrator you are responsible for setting up licensing on your system 
or network. This section tells you how to do that. If you are an end-user of the 
application and you will not be involved in installing it, then go to 
<a href="#16787: 2head: 1.2.2 Notes for the End User">Section 1.2.2, 
`Notes for End-Users,' on page 7</a>.<p>
<p>
Remember that the installation guide for your application software is the final word on 
installing and configuring 
FLEXlm<I></I>.Generally, however, installing 
FLEXlm<I></I> licensing 
requires the following steps:<p>
<ol><li>Select your license server nodes and get their hostids. See 
<a href="#24240: 1HeadApp: A.1 Hostid Table">A.1, `Hostids for 
FLEXlm-Supported Machines'</a>. 
<li>Give the hostids to your software vendor and get a license file (or the data to enter 
in the license file) in return.<li>Consider combining the new license file with any existing license files. See 
<a href="#17416: chap head: Chapter 2">Chapter 3, `Multiple License Files' on page 25</a>.<li>Determine if an options file is desired, and if so, set it up.<li>Determine where to install the 
FLEXlm<I></I> utility programs such as 
<TT>lmgrd</TT><I></I><TT></TT>, and 
<TT>lmutil</TT> (<TT>lmstat</TT>/<TT>lmdown</TT>/etc.) and install them unless the your vendor's 
installation script does so for you.<li>Start 
lmgrd<I></I> (the license daemon) manually; you may also want to set it up to start 
automatically at boot time. See 
<a href="#31889: 2Head: 2.1.1 Setting the Path at Start-Up">Section 2.1.1, `Setting the Path to the License File 
at Start-Up (Unix),' on page 10</a>.</ol>
<p>
These steps are discussed briefly below, with cross-references to the appropriate 
locations for more detail.<p>
<h4>License Servers and Hostids</h4>
<p>
Before running any 
FLEXlm<I></I>-licensed program using floating licenses, you will need 

to set up your license server node (or nodes). You must select which node or nodes to 
run your license servers on, and provide the hostid of those machines to your software 
vendor. For pointers on selecting your server machine, see 
<a href="#15827: chap head: Chapter 4">Chapter 4, `Selecting 
Server Nodes' on page 29</a>. 
<p>
<p>
You can get the hostid of the server machine by running 
FLEXlm<I></I>'s 
<TT>lmhostid</TT> utility 
on that machine. If you don't have 
<TT>lmhostid</TT>, you can get the hostid of your machine 
by using the appropriate command as described in 
<a href="#24240: 1HeadApp: A.1 Hostid Table">A.1, `Hostids for FLEXlm-Supported Machines'</a>.<p>
<p>
Using the hostid of your server machines your vendor will send you a license file that 
enables their application software.<p>
<h4>lmgrd<I></I> and License Files</h4>
<p>
Once you have received a license file from your vendor, you must install it on your 
system and start up the license manager daemon, 
lmgrd<I></I>.<p>
<ul><li>Your software vendor may have selected a default location for your license file. 
If not, you can use any location you wish. For more details, see 
<a href="#31549: chap head: Chapter 1">Chapter 2, `The 
License File' on page 9</a>.<li>To start 
<a name="_IX_8"></a>lmgrd<I></I> automatically at boot time, you will have to modify your system 
files (Unix), or use the 
FLEXlm<I></I> Control Panel (Windows). For details see 
<a href="#31889: 2Head: 2.1.1 Setting the Path at Start-Up">Section 2.1.1, `Setting the Path to the License File at Start-Up (Unix),' on 
page 10</a>.</ul><h4>Administration Tools 
</h4>
<p>
GLOBEtrotter Software<I></I> supplies administration tools to your software vendor. The 
vendor usually includes them with their product. The recommended location for the 
tools is 
<TT>/usr/local/bin 
</TT>(Unix)<TT>, C:\flexlm 
</TT>(Windows)<TT>, 
</TT>or<TT> 
SYS$COMMON:[SYSMGR] 
</TT>(<TT>VMS</TT>), but you can install them in a different location (or 
not at all). See 
<a href="#78920: chap head: Chapter 6 License Administration Tools">Chapter 6, `License Administration Tools' on page 45</a> for more 
information.<p>
<a name="_IX_9"></a><h4>Options Files</h4>
<p>
The options file controls various options such as reservations and timeouts of licenses. 
Most users run without an options file, but you may decide you want to use some 
options. For example, many administrators use an option to limit the quantity and 
content of logged messages. To set up an options file, see 
<a href="#19683: chap head: End-User License Administration">Chapter 5, `The Options 
File' on page 35</a>. 
<p>
<h3>1.2.2	 <a name="16787: 2head: 1.2.2 Notes for the End User"></a>Notes for End-Users</h3>
<p>
As a user of a 
FLEXlm<I></I>-licensed application, you may need to know a few things to use 
the system effectively. The main things you need to know are:<p>
<ul><li>How to tell an application which license file to use.<li>How to query the system to find out who is using a license.</ul><h4>How to Specify a License File</h4>
<p>
The license file determines what features are available to a program. It also contains 
information telling the application how to connect to the license server.<p>
<p>
For information about the standard way of specifying a license file for an application, 
see 
<a href="#31549: chap head: Chapter 1">Chapter 2, `The License File' on page 9</a>.<p>
<h4>Getting Information About Licenses</h4>
<p>
To find out who is using a license run 
<TT>lmstat</TT>, described in 
<a href="#78920: chap head: Chapter 6 License Administration Tools">Chapter 6, `License 
Administration Tools' on page 45</a>.<p>
<a name="Chapter 2"></a><hr><h1>Chapter 2 <a name="31549: chap head: Chapter 1"></a>
The License File</h1>
<p>
The license file contains all site-specific information required by 
FLEXlm<I></I>. This 
information includes:<p>
<ul><li>server names and hostids<li>vendor names and paths to vendor daemon executables<li>feature information</ul><p>
In general, the license file, or a copy of it, must be accessible to every machine that runs 
a 
FLEXlm<I></I>-licensed application, and each machine designated as a license server. If the 
license file contains counted (also called `floating') licenses, before you can use the 
application you have to start the license manager daemon (lmgrd<I></I>) using the following 
syntax:<p>
<pre><TT><a name="_IX_10"></a>lmgrd</TT><I></I><TT></TT> [-c <I>license_file_path</I>] </pre>
<dl><dt>-c 
<I>license_file_path</I> 
<dd>full pathname to the license file. Otherwise, 
LM_LICENSE_FILE or the default location are used.</dl><p>
On VMS and Netware systems there is no 
<a name="_IX_11"></a>lmgrd and the 
<a name="_IX_12"></a>vendor daemon is run directly.<p>
<a name="32236: 1head: 2.1 Location of the License File"></a><a name="2.1"></a><h2>2.1  Specifying Location of the License File</h2>
<p>
Most software vendor recommend a specific location for your license file. If you are 
running the application on multiple nodes, you have these options for making your 
<a name="_IX_13"></a>license available on all the machines:<p>
<ul><li>Place the license file in a partition which is available (via NFS on Unix systems) 
to all nodes in the network that need the license file.<li>Copy the license file to all of the nodes where it is needed.<li>Set 
LM_LICENSE_FILE<TT></TT> to `<I>port@host</I>', where 
<I>host</I> and 
<I>port</I> come from the 
SERVER line in the license file. With v6+, you can use `@<I>host'</I>, if the license 
file SERVER line uses a default port, or specifies a port in the default port range 
(27000-27009).<li>On Windows (v6+), if the application can't find the license, the user is presented 
with a dialog box that asks for the license location or the name of the system 
running the license server, or allows the user to type in the license directly.</ul><p>
Since the vendor daemon keeps track of license usage, and since the license file 
contains encrypted data to protect it against modification, you may move and copy the 
license file as much as necessary.<p>
<p>
For counted licenses, no matter which option you choose, you must first install 
lmgrd<I></I> 
and the vendor daemon.<p>
<p>
With a 
FLEXlm<I></I> v6+ vendor daemon and 
<a name="_IX_14"></a>lmgrd, the license path can be a list of files, 
separated by colons on Unix, or semi-colons on Windows. If there is a directory in this 
list, all files named *.lic in that directory are used.<p>
<p>
You can only start 
lmgrd<I></I> on the server node specified in the license file. 
<p>
<p>
If you are running 
<a name="_IX_15"></a><a name="_IX_16"></a>redundant servers, you should have separate copies of the 
<a name="_IX_17"></a>license 
file (as well as the binaries for 
lmgrd<I></I> and the 
<a name="_IX_18"></a>vendor daemons) on 
<I>each</I> server node. If 
you do not do this, you lose all the advantages of having redundant servers, since the 
file server holding these files becomes a single point of failure.<p>
<h3>2.1.1	 Starting the license server at system Start-Up</h3>
<p>
If any licenses in the license file are counted (count &gt; 0), then the license server must 
be started before the product can be used.<p>
<h4>Unix</h4>
<p>
To start the license manager daemon (<a name="_IX_19"></a>lmgrd<I></I>) execute a command similar to the 
following.<p>
<ul><li>If you are running in the C shell:</ul><pre>% <I>lmgrd_path</I><TT> -c </TT><I>license_file_path</I><TT> </TT>&gt;&amp; <I>log_path</I> &amp;</pre>
<ul><li>If you are using either the Korn or Bourne shell:</ul><pre>$ nohup <I>lmgrd_path</I> -c <I>license_file_path</I> &gt; <I>log_path</I> 2&gt;&amp;1 &amp;</pre>
</ol></ul><p>
On Unix, edit the appropriate boot script, which may be 
<TT>/etc/rc.boot</TT>, 
<TT>/etc/rc.local, /etc/rc2.d/Sxxx, /sbin/rc2.d/Sxxxx, etc.</TT> 
Remember that these scripts are run in /bin/sh, so do not use the 
<I>csh</I> `&gt;&amp;' redirection 
syntax.<p>
<p>
Each Unix operating system can have some quirks in doing this, but the following 
script has been successfully tested for HP700 systems. See the notes following for a 
full explanation.<p>
<pre>	/bin/su daniel -c 'echo starting lmgrd &gt; \
		/home/flexlm/v5.12/hp700_u9/boot.log'
	
	/bin/nohup /bin/su daniel -c 'umask 022; \
		/home/flexlm/v5.12/hp700_u9/lmgrd -c \
		/home/flexlm/v5.12/hp700_u9/license.dat &gt;&gt; \
		/home/flexlm/v5.12/hp700_u9/boot.log'

	/bin/su daniel -c 'echo sleep 5 &gt;&gt; \
		/home/flexlm/v5.12/hp700_u9/boot.log'
	/bin/sleep 5</pre>
<pre> </pre>
<pre>	/bin/su daniel -c 'echo lmdiag &gt;&gt;\
		/home/flexlm/v5.12/hp700_u9/boot.log'

	/bin/su daniel -c '/home/flexlm/v5.12/hp700_u9/lmdiag -n -c\
		/home/flexlm/v5.12/hp700_u9/license.dat &gt;&gt; \
		/home/flexlm/v5.12/hp700_u9/boot.log'
	/bin/su daniel -c 'echo exiting &gt;&gt;\
		/home/flexlm/v5.12/hp700_u9/boot.log'</pre>
</ol></ul><p>
Please note the following about how this script was written:<p>
<ul><li>All paths are specified in full, since no paths can be assumed at boot time.<li>Since no paths are assumed, the vendor daemon must be in the same directory as 
lmgrd, or the 
<a name="_IX_20"></a>VENDOR lines must be edited to include the full path to the vendor-daemon binary file.<li>The `su' command is used to run lmgrd as a non-root user, `daniel'. We 
recommend that lmgrd not be run as root, since it can be a security risk to run any 
program that does not require root permissions, and lmgrd does not require root 
permissions.<li>Daniel has a csh login, so all commands executed as daniel must be in csh syntax. 
All commands not executed as daniel must be in /bin/sh syntax, since that's 
what's used by the boot scripts.<li>The use of `nohup' and `sleep' are required on some operating systems, notably 
HPUX and Digital Unix, for obscure technical reasons. These are not needed on 
Solaris and some other operating systems, but are safe to use on all.<li>lmdiag is used as a diagnostic tool to verify that the server is running and serving 
licenses.</ul><p>
On IBM RS6000 systems, /etc/rc cannot be used, because TCP/IP is not installed when 
this script is run. Instead, /etc/inittab must be used. Add a line like this to /etc/inittab 
after the lines which start networking:
		 
  <TT>     rclocal:2:wait:/etc/rc.local &gt; /dev/console 2&gt;&amp;1</TT><p>
<p>
This will not start the daemon until you reboot your license server machine.<p>
<h4>Windows NT</h4>
<p>
From the Control Panel, use the FLEXlm License Manager to start 
<a name="_IX_21"></a>lmgrd as a service. 
You can optionally indicate that this should be started at system startup.<p>
<h4>Windows 95/<B>98</B></h4>
<p>
Services are not supported on this platform. However, you can start v7+ 
<TT><a name="_IX_22"></a>lmgrd</TT> in the 
autoexec.bat. Be sure to start to give the full path to the lmgrd.exe, the vendor daemons 
must be in the path, and you must include -l 
<I>logfile</I> argument - otherwise, 
<TT>lmgrd</TT> 
attempts to put up console windows.<p>
<h3>2.1.2	 <a name="15416: 2Head: 2.1.2 Setting the Path with an Environment Variable"></a>Setting the Path with an Environment Variable</h3>
<p>
Most applications specify a location where they expect to find the license file. Many 
will automatically install the license. You should rarely, if ever, be required to specify 
where the license file is located with an environment variable. However, you can 
change the license location with $LM_LICENSE_FILE, or if a location is not provided 
by the location, you can set one.<p>
<p>
Use the environment variable 
<a name="_IX_23"></a>LM_LICENSE_FILE<TT></TT> to set the location of the license 
file. For example in the C shell:<p>
<pre>% setenv LM_LICENSE_FILE<TT></TT> <I>license_file_path</I></pre>
</ol></ul><p>
In the Korn and Bourne shells:<p>
<pre># LM_LICENSE_FILE<TT></TT>=<I>license_file_path
</I># export LM_LICENSE_FILE<TT></TT></pre>
</ol></ul><p>
On Windows 3.1 and 95, add the following line to C:\autoexec.bat:<p>
<pre>SET LM_LICENSE_FILE=<I>license_file_path</I></pre>
</ol></ul><p>
On Windows NT, use the System Control Panel to change the global environment, 
adding LM_LICENSE_FILE to 
<I>license_file_path, 
</I><p>
<p>
<p>
<dl><dt><I>license_file_path</I> 
<dd>full pathname to the license file. This can also be a 
<I>port@host</I> setting, where 
<I>port</I> and 
<I>host 
</I>are the port number 
and hostnames from the SERVER line in the license file. 
v6+ applications can use simply @<I>host</I>, if the server uses a 
default port number.</dl><p>
In 
FLEXlm<I></I> v6+, applications will accept an environment variable (or Windows 
Registry) named `<I>VENDOR</I>_LICENSE_FILE', where 
<I>VENDOR</I> is the vendor-daemon name, e.g., GSI_LICENSE_FILE.<p>
<p>
With lmgrd and lmutil (lmstat, lmdown, etc.), the `-c' option overrides the setting of 
the 
LM_LICENSE_FILE<TT></TT> environment variable for. See 
<a href="#15425: 2head: 3.1.2 Using Separate License Files on the Same Server Node">Section 3.1.3, `Using 
Separate License Files on the Same Server Node,' on page 27</a> for more information 
about 
LM_LICENSE_FILE<TT></TT>.<p>
<p>
Some applications do not recognize the 
LM_LICENSE_FILE<TT></TT> environment variable.<p>
<p>
See Also: 
<a href="#41901: 1HeadApp: C.1 How to set environment variables">Appendix C, `How to set environment variables' on page 65</a>.<p>
<a name="94139: 1head: 2.2 License File Format"></a><a name="2.2"></a><h2>2.2  License File Format</h2>
<p>
License files usually begin with a SERVER line (or three lines for redundant servers) 
followed by one or more DAEMON lines, followed by one or more FEATURE or 
INCREMENT lines. In some cases the license file requires no SERVER line and no 
DAEMON line. See 
<a href="#36598: 1Head: 5.4 Counted Vs. Uncounted Licenses">Section 4.4, `Counted vs. Uncounted Licenses,' on page 33</a>, for 
more information. Since 
FLEXlm<I></I> v6.0, the DAEMON line can be called VENDOR. 
Wherever DAEMON appears, VENDOR can be used, if the lmgrd and vendor-daemon 
are both &gt;= 
FLEXlm<I></I> v6.0.<p>
<p>
You can modify these data items in the license file:<p>
<ul><li>node names on the SERVER line(s)<li>port numbers on SERVER line(s)<li>pathnames on the DAEMON line(s)<li>options file pathnames on DAEMON line(s)<li>Optional port numbers on DAEMON line(s) (for firewall support only)<li>USE_SERVER line (FLEXlm<I></I> v5 and later only)<li>values in `<I>name</I>=<I>value</I>' pairs on FEATURE lines, if 
<I>name</I> is all lowercase</ul><p>
Long lines normally use the `\' line continuation character to break up long lines 
(though this is not required with version 7 applications). 
FLEXlm<I></I> version 2 did not 
support the line continuation character, although this rarely matters since optional 
attributes weren't support then either.<p>
<p>
Everything else is used to compute the license key, and should be entered exactly as 
supplied by your software vendor. All data in the license file is case sensitive, unless 
otherwise indicated.<p>
<p>
In the following sections, options modifiable by the license administrator are 
<I>italicized</I>.<p>
<h3>2.2.1	 SERVER Lines</h3>
<p>
The SERVER line specifies the node name and hostid of the license server, and the port 
number of the license manager daemon (lmgrd<I></I>). Normally a license file has one 
SERVER line. Three SERVER lines mean that you are using 
<a name="_IX_24"></a>redundant servers. The 
absence of a SERVER line means every FEATURE or INCREMENT line in the license 
file is uncounted. For more information about uncounted features, see 
<a href="#24398: 2Head: 2.2.3 FEATURE or INCREMENT Lines">Section 2.2.4, 
`FEATURE or INCREMENT Lines,' on page 15</a>. License administrators do not have 
the option of deleting SERVER lines from a license file because the hostids from the 
SERVER lines are computed into the license keys on every FEATURE and 
INCREMENT line. For more information about redundant servers, see 
<a href="#15827: chap head: Chapter 4">Chapter 4, 
`Selecting Server Nodes' on page 29</a>. 
<p>
<p>
The format of the 
<a name="_IX_25"></a>SERVER line is:<p>
<pre>SERVER <I>nodename</I> id <I>port-number</I></pre>
</ol></ul><p>
<p>
<dl><dt><I>nodename (or IP-address)</I><dd>The system hostname. String returned by the 
<I>Unix</I> 
<I>hostname</I> or 
<I>uname -n</I> command. On NT, 
<I>ipconfig /all</I>; on 
Win95, 
<I>winipcfg /all 
</I>return the hostname. If the application 
uses 
FLEXlm<I></I> v5 or higher, this can be an IP-address (in 
<I>nnn.nnn.nnn.nnn</I> format).<dt><I>id</I> 
<dd>Usually the string returned by the 
<TT>lmhostid</TT> command. 
This can only be changed by your software supplier.<dt><I>port-number</I> 
<dd>TCP port number to use. A valid number is any unused port 
number between 0 and 64000. On Unix choose a port 
&gt;1024, since &lt;1024 are privileged port numbers.</dl><p>
Example:<p>
<pre>SERVER enterprise 0122345 21987</pre>
<h3>2.2.2	 <a name="_IX_26"></a>DAEMON (or VENDOR) Lines</h3>
<p>
The DAEMON line specifies the daemon name and path. 
<I><a name="_IX_27"></a>lmgrd</I> uses this line to start 
the vendor daemons, and the 
<a name="_IX_28"></a>vendor daemon reads it to find the 
<a name="_IX_29"></a>options file. The format 
of the DAEMON line is shown below.<p>
<p>
Since 
FLEXlm<I></I> v6.0, the DAEMON line can be called VENDOR. VENDOR can be 
used if the lmgrd and vendor-daemon are both at least 
FLEXlm<I></I> v6.0.<p>
<pre>{DAEMON|VENDOR} <I>daemon_name</I> [<I>daemon_path]</I> [[options=]<I>options_path</I>]\
	[[port=]<I>portnum</I>]</pre>
</ol></ul><p>
<p>
<dl><dt><I>daemon_name</I> 
<dd>name of the vendor daemon used to serve some feature(s) 
in the file. This name cannot be changed by the 
administrator. 
<dt><I>daemon_path</I><dd>pathname to the executable for this daemon. Generally the 
license administrator is free to install the daemon in any 
directory. (It is recommended however, that it be installed 
in a local directory on the license server node.)
If the lmgrd and vendor-daemon are &gt;= 
FLEXlm<I></I> v6.0, this 
path is optional. If left out, lmgrd will look for the vendor-daemon binary in the current directory, the $PATH list, or 
in the directory where lmgrd is located. If the path is blank, 
then the options= and port= strings are required if options 
or port number are specified.<dt><I>options_path</I><dd>full pathname of the end-user specified options file for this 
daemon. (See 
<a href="#19683: chap head: End-User License Administration">Chapter 5, `The Options File' on page 35</a>.) 
FLEXlm<I></I> does not require an options file. The keyword 
`options=' requires a v5+ vendor daemon.
If the vendor daemon is 
FLEXlm<I></I> v6 or later, the options file 
need not be specified on this line. If it is called 
<I>vendor</I>.opt 
(where 
<I>vendor</I> is the vendor-daemon name) and located in 
the same directory as the license file, the vendor daemon 
will automatically find and use it.<dt><I>portnum</I><dd>Vendor daemon port number. NOTE: This is for firewall 
support only, and is otherwise not recommended. This 
requires a v5+ 
<a name="_IX_30"></a>lmgrd.</dl><p>
Examples:<p>
<p>
v6.0:<p>
<pre>VENDOR sampled</pre>
</ol></ul><p>
pre-v6.0:<p>
<pre>DAEMON sampled /usr/local/sampled /usr/local/flexlm/licenses/sampled.opt </pre>
<h3>2.2.3	 <a name="_IX_31"></a>USE_SERVER line (v5+ only)</h3>
<p>
USE_SERVER takes no arguments, and has no impact on the server. When the 
application sees USE_SERVER, it ignores everything in the license file except 
preceding SERVER lines, and the checkout validation occurs at the vendor daemon. 
USE_SERVER is recommended since it improves performance when a license server 
is used. For uncounted features, USE_SERVER can be used to force logging of usage 
by the daemons.<p>
<h3>2.2.4	 <a name="24398: 2Head: 2.2.3 FEATURE or INCREMENT Lines"></a><a name="_IX_32"></a>FEATURE or 
<a name="_IX_33"></a>INCREMENT Lines</h3>
<p>
A FEATURE line describes the license to use a product. An INCREMENT line can be 
used in place of a FEATURE line, as well as to `incrementally' add licenses to a prior 
FEATURE or INCREMENT line in the license file.<p>
<p>
Only the first FEATURE line for a given feature will be processed by the vendor 
daemon. If you want to have additional copies of the same feature (for example, to have 
multiple node locked counted features), then you must use multiple INCREMENT 
lines. INCREMENT lines form license groups based on the feature name, version, and 
node lock hostid. If the feature name, version, and node lock hostid (and optionally, the 
vendor string, if the vendor specified this) match a prior INCREMENT or FEATURE 
line, the new number of licenses is added to the old number. If any of the three do not 
match, a new group of licenses is created in the vendor daemon, and this group is 
counted independently from others with the same feature name (called a `license 
pool'). INCREMENT is not available for pre-v2.61 
FLEXlm<I></I> clients or servers. A 
FEATURE line does not give an additional number of licenses, whereas an 
INCREMENT line ALWAYS gives an additional number of licenses.<p>
<p>
There is a rarely used option in 
FLEXlm<I></I> which causes FEATURE lines to function as 
INCREMENT lines. This option is called 
<TT>ls_use_all_feature_lines</TT>. You 
will have to ask your vendor if they use this option. If they do, then all FEATURE lines 
behave exactly as INCREMENT lines.<p>
<p>
A FEATURE line placed after another FEATURE or INCREMENT line will be 
ignored (unless 
<TT>ls_use_all_feature_lines</TT> is set).<p>
<p>
The format for the FEATURE line changed in 
FLEXlm<I></I> v3.0 and 
FLEXlm<I></I> v6.0. The 
older formats are understood by new clients and servers, but the new formats are more 
flexible.<p>
<p>
v2 format:<p>
<pre><TT>FEATURE|INCREMENT </TT><I>name vendor ver expdate #lic key `vendor_str' [hostid]</I></pre>
</ol></ul><p>
v3+ format:<p>
<pre><TT>FEATURE|INCREMENT </TT><I>name vendor version exp_date #lic key </I>\</pre>
<pre><TT>[HOSTID=</TT><I>hostid</I><TT>][VENDOR_STRING='</TT><I>vendor</I><TT>-</TT><I>string</I><TT>'] \ </TT></pre>
<pre><TT>[vendor_info='...'] [dist_info='...'] [user_info='...'] \</TT></pre>
<pre><TT>[asset_info='...'] [ISSUER='...'] [NOTICE='...'] [ck=</TT><I>nnn</I><TT>] \</TT></pre>
<pre>[OVERDRAFT=<I>nnn</I>] [DUP_GROUP=NONE|SITE|[UHDV]]</pre>
</ol></ul><p>
Nothing in a FEATURE/INCREMENT line is editable, except for values in the 
`<I>name</I>=<I>value</I>' pairs where 
<I>name</I> is all lowercase.<p>
<p>
<p>
<dl><dt><I>name</I> 
<dd>name given to the feature by the vendor.<dt><I>vendor</I><dd>name of the 
<a name="_IX_34"></a>vendor daemon; also found in the DAEMON 
line. The specified daemon serves this feature.<dt><I>version</I><dd>version of this feature that is supported by this license. 
<dt><I>exp_date</I><dd>expiration date, for example, 7-may-1996. Note: If the year 
is 0 (or 00, 000, 0000) then the license never expires. Dates 
before 2000 can be 2- or 4-digit years. After 2000 they must 
be 4-digit years. The expiration date is fully year-2000 
compliant.
FLEXlm<I></I> v6 (or later) applications only: the keyword 
`<I>permanent</I>' can be used instead of the date `1-jan-0'.<dt><I>#lic</I><TT> 
</TT><dd>number of concurrent licenses for this feature. If the 
number of users is set to 0, the licenses for this feature are 
uncounted and no 
lmgrd<I></I> is required but a hostid on the 
FEATURE line is required. See 
<a href="#36598: 1Head: 5.4 Counted Vs. Uncounted Licenses">Section 4.4, `Counted vs. 
Uncounted Licenses,' on page 33</a>.
FLEXlm<I></I> v6 (or later) applications only: the keyword 
`<I>uncounted</I>' can be used instead of a count of 0.<dt><I>key</I><dd>license key for this FEATURE line. Two identical looking 
FEATURE or INCREMENT lines may have different 
license keys if the start dates are different.</dl><p>
The following fields are all optional (except for 
<I>vendor-string</I> in the old format). For 
optional fields of the `name=value' syntax, if the name is lowercase, it can be modified 
and the license will remain valid.<p>
<dl><dt><I>`vendor_string'</I><TT> 
</TT><dd>vendor-defined string, enclosed in double quotes. This 
string can contain any characters except a quote.<dt><I>hostid</I> 
<dd>string returned by 
<TT><a name="_IX_35"></a>lmhostid</TT>. Used only if the feature is 
to be bound to a particular host, whether its use is counted 
or not. (Numeric hostids are case insensitive). See 
<a href="#24240: 1HeadApp: A.1 Hostid Table">Appendix A, `Hostid Table' on page 57</a> for more 
information.<a name="_IX_36"></a><dt>DUP_GROUP=...<TT><dd></TT>Duplicate Grouping parameter can be specified in the 
license in 
FLEXlm<I></I> v4.0 and later. The syntax is:</dl><pre>              			DUP_GROUP=NONE|SITE|[UHDV]</pre>
<pre>        				U = DUP_USER</pre>
<pre>        				H = DUP_HOST</pre>
<pre>        				D = DUP_DISPLAY</pre>
<pre>        				V = DUP_VENDOR_DEF</pre>
<dl><dt><dd>Any combination of UHDV is allowed, and the 
DUP_MASK is the OR of the combination. For example 
`DUP_GROUP=UHD' 
means the duplicate grouping is 
(DUP_USER|DUP_HOST|DUP_DISPLAY), so for a user on 
the same host and display, additional uses of a feature do 
not consume additional licenses.<a name="_IX_37"></a><dt>HOSTID=<I>hostid<dd></I>Same as hostid above, but in the name=value pair syntax 
(FLEXlm<I></I> v3.0 and later).<a name="_IX_38"></a><dt>HOST_BASED[=<I>n</I>]<dd>Hostnames must be specified in INCLUDE statements in 
the end-user 
<a name="_IX_39"></a>options file, and the number of hosts is limited 
to 
<I>#lic</I>, or the number specified in `=<I>n</I>'.<a name="_IX_40"></a><dt>ISSUED=<I>dd-mmm-yyyy</I><TT><dd></TT>Date issued.<a name="_IX_41"></a><dt>ISSUER='...'<TT><dd></TT>Issuer of the license.<a name="_IX_42"></a><dt>NOTICE='...'<TT><dd></TT>A field for intellectual property notices.<a name="_IX_43"></a><dt>OVERDRAFT=<I>nnn</I><TT><dd>FLEXlm</TT><I></I><TT></TT> v4.0 and later. The 
<TT>OVERDRAFT</TT> policy allows 
your vendor to specify a number of additional licenses 
which users will be allowed to use, in addition to the 
licenses they have purchased. This allows your users to not 
be denied service when in a `temporary overdraft' state. 
Usage above the licensed limit will be reported by the 
FLEXadmin<I></I> reporting tool.<dt>PLATFORMS='...'<dd>Usage is limited to the listed platforms. (v5.11+ only).<a name="_IX_44"></a><dt>SN=<I>serial_num<dd></I>Serial number, used to identify INCREMENT lines.<a name="_IX_45"></a><dt>START=dd-mmm-yyyy<dd>Start-date (FLEXlm<I></I> v6 or later only)<a name="_IX_46"></a><dt>SUPERSEDE[='<I>f1 f2</I> ...'<TT> 
</TT><dd>If this appears, all licenses issued before the date specified 
in ISSUED= are 
<I>superseded</I> by this line, and become 
ineffective.<a name="_IX_47"></a><dt>USER_BASED[=<I>n</I>]<dd>Users must be specified in INCLUDE statements in the 
end-user options file, and the number of users are limited to 
<I>#lic</I>, or the number specified in `=<I>n</I>'.<a name="_IX_48"></a><dt>VENDOR_STRING=<I>'...'<dd></I>Same as `vendor_string' above, but in 
<I>name</I>=<I>value</I> pair 
syntax.</dl><p>
The following attributes can be changed or deleted by end-users. This is indicated by 
a lowercase 
<I>name</I>.<p>
<dl><a name="_IX_49"></a><dt>asset_info='...'<TT><dd></TT>Additional information provided by the license 
administrator for asset management.<a name="_IX_50"></a><dt>ck=<I>nnn</I><TT><dd></TT>A checksum, useful with the lmcksum utility, which will 
verify that the license has been entered correctly by the 
end-user.<a name="_IX_51"></a><dt>dist_info='...'<TT><dd></TT>Additional information provided by the software 
distributor.<a name="_IX_52"></a><dt>user_info='...'<TT><dd></TT>Additional information provided by the license 
administrator.<a name="_IX_53"></a><dt>vendor_info='...'<TT><dd></TT>Additional information provided by the software vendor.<dt>Examples:</dl><pre>	FEATURE xyz_app xyzd 2.300 31-dec-1997 20 1234567890 `xyz'</pre>
<pre>	INCREMENT f1 xyzd 1.000 1-jan-0 5 12345678901234567890 		\</pre>
<pre>		HOSTID=INTERNET=195.186.*.* NOTICE='Licensed to XYZ corp'</pre>
<h3>2.2.5	 FEATURESET Lines</h3>
<p>
The FEATURESET line is a rarely used line to prevent FEATURE lines from being 
added to or removed from the license file. The format of the FEATURESET line is 
shown below.<p>
<pre>	FEATURESET daemon_name key</pre>
</ol></ul><p>
Nothing in a FEATURESET line can be edited. Use the FEATURESET line exactly as 
it comes from your vendor. 
<p>
<p>
<p>
<dl><dt><I>daemon_name</I> 
<dd>name of the vendor daemon.<dt><I>key</I><dd>license key for this FEATURESET line. This key encrypts 
the keys of all features this daemon supports, so no 
FEATURE/INCREMENT lines can be removed, added, or 
rearranged in this license file.</dl><p>
Example:<p>
<pre>	FEATURESET sampled <I>12345678</I></pre>
</ol></ul><p>
<p>
<dl><dt>sampled<dd>name of the vendor daemon<dt>12345678<dd>key generated by the vendor</dl><h3>2.2.6	 <a name="_IX_54"></a>PACKAGE Lines</h3>
<p>
The purpose of the PACKAGE line is to support two different licensing needs:<p>
<ul><li>to license a product SUITE, or<li>to provide a more efficient way of distributing a license file that has a large 
number of features, which largely share the same FEATURE line arguments.</ul><p>
A PACKAGE line, by itself, does not license anything - it requires a matching 
FEATURE/INCREMENT line to license the whole PACKAGE. A PACKAGE line can 
be shipped by your software vendor with a product, independent of any licenses. Later, 
when you purchase a license for that package, one or more corresponding 
FEATURE/INCREMENT licenses will enable the PACKAGE.<p>
<p>
Example:<p>
<pre>	PACKAGE <I>pkg_name vendor pkg_version pkg_key</I> COMPONENTS=<I>pkg_list</I> \</pre>
<pre>			[ OPTIONS=<I>pkg_options</I> ]</pre>
</ol></ul><p>
<p>
<dl><dt><I>pkg_name</I><dd>name of the 
PACKAGE. The corresponding 
FEATURE/INCREMENT line must have the same name.<dt><I>vendor</I><dd>name of the vendor daemon that supports this 
PACKAGE.<dt><I>pkg_version</I><dd>version of the 
<TT>PACKAGE</TT>. The enabling 
<TT>FEATURE/INCREMENT</TT> line must have the same version.<dt><I>pkg_key</I><dd>20-character license key.<dt><I>pkg_list</I><dd>list of components. The format is:</dl><pre>			feature[:version[:num_lic]]</pre>
<dl><dt><dd><TT>PACKAGEs</TT> must consist of at least one 
<TT>COMPONENT</TT>. 
Version and count are optional, and if left out, their values 
come from the corresponding 
<TT>FEATURE/INCREMENT</TT> 
line. 
<I>num_lic</I> is only legal if 
<TT>OPTIONS=SUITE</TT> is not 
set - in this case the resulting number of licenses will be 
<I>num_lic</I> on the 
<TT>COMPONENTS</TT> line multiplied by the 
number of licenses in the 
<TT>FEATURE/INCREMENT</TT> line. 
Examples:</dl><pre>			COMPONENTS='comp1 comp2 comp3 comp4'</pre>
<pre>			COMPONENTS='comp1:1.5 comp2 comp3:2.0:4'	</pre>
<dl><dt><TT><a name="_IX_55"></a>OPTIONS=<a name="_IX_56"></a>SUITE</TT> 
<dd>This is what distinguishes a suite 
<TT>PACKAGE</TT> from a 
<TT>PACKAGE 
</TT>used to ease distribution.<dt><dd>With 
<TT>OPTIONS=SUITE</TT>, the corresponding 
<TT>FEATURE</TT> of 
the same name as the package name is checked out in 
addition to the component feature being checked out.<dt><dd>If 
<TT>OPTIONS=SUITE</TT> is not set, then the corresponding 
<TT>FEATURE</TT> of the same name as the package is removed 
once the 
<TT>PACKAGE</TT> is enabled; and it is not checked out 
when a component feature is checked out.</dl><p>
Examples<p>
<pre>	PACKAGE suite xyzd 1.0 3B24B2F508CB697641CC\</pre>
<pre>                        COMPONENTS='comp1 comp2' OPTIONS=SUITE</pre>
<pre>	FEATURE suite xyzd 1.0 1-jan-0 5 4193E6ABCCCB1A3970B3</pre>
</ol></ul><p>
This is a typical SUITE example. There are 2 features: comp1 and comp2, which are 
each version 1.0, with 5, non-expiring licenses available. When comp1 or comp2 are 
checked out, `suite' will also be checked out. 
<p>
<pre>	PACKAGE suite xyzd 1.0 2CBF44FCB9C1E825DC5C COMPONENTS='c1:1.5:2\
		c2:3.0:4'</pre>
<pre>	FEATURE suite xyzd 1.0 1-jan-1999 3 321E78A17EC19AE81A43 SN=123</pre>
</ol></ul><p>
In this example, the component versions override the FEATURE versions, and the 
number of licenses available for any component is the product of the 3 licenses for suite 
and the number of licenses for that component. The result is equivalent to:<p>
<pre>	FEATURE c1 xyzd 1.5 1-jan-1999 6 0D3AD5F26BC868D476EC SN=123</pre>
<pre>	FEATURE c2 xyzd 3.0 1-jan-1999 12 EB16C5AE4A4E0F2961F0 SN=123</pre>
</ol></ul><p>
With 
FLEXlm<I></I> v6 (or later) applications only the PACKAGE lines can be stored in a 
separate file which need never be edited.<p>
<h3>2.2.7	 <a name="57505: 2head: 9.1.4 UPGRADE Line"></a><a name="_IX_57"></a>UPGRADE Lines</h3>
<pre>	UPGRADE <I>name daemon fromversion version</I> <I>exp_date</I> <I>#lic key \</I></pre>
<pre>			`<I>string</I>' [<I>hostid</I>] ck=<I>nnn</I></pre>
</ol></ul><p>
All the data is the same as for a FEATURE or INCREMENT line, with the addition of 
the 
<I>fromversion</I> field. An UPGRADE line removes up to the number of licenses 
specified from any old version (&gt;= fromversion) and creates a new version with that 
same number of licenses.<p>
<p>
For example, the two lines:<p>
<pre>	INCREMENT f1 xyzd 1.000 1-jan-1999 5 9BFAC03164EDB7BC0462 ``</pre>
<pre>	UPGRADE f1 xyzd 1.000 2.000 1-jan-1999 2 1B9A30316207EC8CC0F7 ``</pre>
</ol></ul><p>
would result in 3 licenses of v1.0 of f1 and 2 licenses of v2.0 of f1.<p>
<p>
UPGRADE will operate on the most recent FEATURE or INCREMENT line (i.e., 
closest preceding FEATURE or INCREMENT line) with a version number that is &gt;= 
<I>fromversion</I>, and &lt; 
<I>version</I>.<p>
<p>
Note that UPGRADE does not work for node locked, uncounted licenses before 
version 6.<p>
<a name="2.3"></a><h2>2.3  Sample License File</h2>
<p>
This is an example of a license file for a single vendor with two features.<p>
<pre>	SERVER excellent_server		 17007ea8 	1700</pre>
<pre>	DAEMON xyzd /etc/xyzd</pre>
<pre>	FEATURE xyz_app1 xyzd 1.000 01-jan-1999 10 1EF890030EABF324""</pre>
<pre>	FEATURE xyz_app2 xyzd 1.000 01-jan-1999 10 0784561FE98BA073""</pre>
</ol></ul><p>
The license file above would allow the license server 
<TT>excellent_server</TT> with the 
hostid 
<TT>17007ea8</TT> to serve 10 floating licenses for 
<TT>xyz_app1</TT> and 
<TT>xyz_app2</TT> to any 
user on the network.<p>
<a name="18841: 1Head: 2.4 Types of License Files"></a><a name="2.4"></a><h2>2.4  Types of License Files </h2>
<p>
License files are created by the software vendor. License files can specify floating 
(concurrent) usage, node locked (both `counted' and `uncounted'), and any 
combination of floating, counted and uncounted.<p>
<h3>2.4.1	 <a name="14841: 2head: 2.4.1 Concurrent (Floating) Usage"></a>Floating (Concurrent) Licenses</h3>
<p>
A 
<I>floating license 
</I>means anyone on the network can use the licensed software, up to 
the limit specified in the license file. (Also referred to as 
<I>concurrent</I> 
<I>usage</I> or 
<I>network 
licensing</I>.) Floating licenses have no hostids on the individual FEATURE lines. 
Floating licenses requires an 
lmgrd<I></I> and a vendor daemon to be running to count the 
concurrent usage of the licenses.<p>
<p>
An example of a license file that provides floating licenses is:<p>
<pre>	SERVER lulu 17001234 1700</pre>
<pre>	DAEMON xyzd /etc/xyzd</pre>
<pre>	FEATURE f1 xyzd 1.00 1-jan-99 2 <I>key1</I>"" </pre>
<pre>	FEATURE f2 xyzd 1.00 1-jan-99 6 <I>key2</I>""</pre>
<pre>	FEATURE f3 xyzd 1.00 1-jan-99 1 <I>key3</I>"" </pre>
</ol></ul><p>
This license file specifies that two licenses for feature `f1', six licenses for feature 
`f2', and one license for feature `f3' are available anywhere on the network that can 
access the license server `lulu'.<p>
<h3>2.4.2	 <a name="_IX_58"></a><a name="31616: 2head: 2.4.2 Node Locking"></a>Node Locked Licenses</h3>
<p>
Node locking means the licensed software can only be used on one node. A node 
<a name="_IX_59"></a>locked license has a hostid on any FEATURE line that is node locked to a particular 
host. There are two types of node locked licenses; 
<I>uncounted</I> and 
<I>counted</I>.<p>
<p>
If the number of licenses is set to 0, then the license is 
<I>uncounted</I> and 
<I>unlimited</I> use is 
permitted on the specified node. This configuration does not require an 
lmgrd<I></I> or a 
vendor daemon because it is not going to count the concurrent usage of the features.<p>
<p>
The following license file allows unlimited usage of feature `f1' on the nodes with 
hostids of 12001234 and 1700ab12:<p>
<pre>	FEATURE f1 xyzd 1.000 1-jan-99 0 <I>key1</I>"" 12001234</pre>
<pre>	FEATURE f1 xyzd 1.000 1-jan-99 0 <I>key2</I>"" 1700ab12</pre>
</ol></ul><p>
Alternately, in 
FLEXlm<I></I> v5.0 or later, these 2 FEATURE lines could have been issued 
by your software vendor with a 
<I>hostid list</I>:<p>
<pre>	FEATURE f1 xyzd 1.000 1-jan-99 0 <I>key</I> HOSTID='12001234 1700ab12'</pre>
</ol></ul><p>
If these were the only FEATURE lines in this license file, no 
lmgrd<I></I> daemon would be 
necessary and you should not start one. 
<p>
<p>
The following license file allows three licenses for feature `f1' to be run, but only on 
the node with hostid 1300ab43. (In this case, the daemons should be run on the same 
node that runs the software, since there is no reason to run the daemons on another 
node.)<p>
<pre>	SERVER lulu 1300ab43 1700</pre>
<pre>	DAEMON xyzd /etc/xyzy</pre>
<pre>	FEATURE f1 zyzd 1.00 1-jan-99 3 <I>key</I>"" 1300ab43</pre>
<h3>2.4.3	 Mixed Node Locked and Floating Licenses</h3>
<p>
Uncounted node locked and concurrent usage licenses can be mixed in the same 
license file. 
<p>
<p>
The following license file allows unlimited use of feature `f1' on nodes 17001111 and 
17002222, while allowing two other licenses for feature `f1' to be used anywhere else 
on the network:<p>
<pre>	SERVER lulu 17001234 1700</pre>
<pre>	DAEMON xyzd C:\flexlmyzd.exe</pre>
<pre>	FEATURE f1 xyzd 1.00 1-jan-1999 0 <I>key1</I>"" 17001111</pre>
<pre>	FEATURE f1 xyzd 1.00 1-jan-1999 0 <I>key2</I>"" 17002222</pre>
<pre>	FEATURE f1 xyzd 1.00 1-jan-1999 2 <I>key3</I>""<a name="23230: 1head: 1.2 Combining License Files"></a><a name="18092: 1head: 1.3 Overriding Extended Hostid Checking"></a></pre>
</ol></ul><p>
This configuration requires an 
lmgrd<I></I> and a vendor daemon because the concurrent 
usage of the two licenses on the third FEATURE line are counted.<p>
<a name="2.5"></a><h2>2.5  Decimal Format</h2>
<p>
The decimal format was introduced in v6. Users with older products can still use the 
decimal format, but they will require a copy of the lminstall command (which is part 
of 
<I>lmutil</I>). The lminstall utility allows the user to type in a decimal line, which is then 
converted to the readable format, and saved in the specified location. The mixed node-locked floating example above looks as follows in decimal format:<p>
<pre>xyzd-f1-01761-55296-37046-04544-00017-06551-18072-57346-18754-136</pre>
<pre>xyzd-f1-01761-55296-37046-08896-00034-235</pre>
<pre>xyzd-f1-00481-55296-17590-2</pre>
</ol></ul><p>
A simple demo license in readable format<p>
<pre>	FEATURE f1 xyzd 1.00 1-jan-1999 0 key1 HOSTID=DEMO</pre>
</ol></ul><p>
converted to decimal:<p>
<pre>	xyzd-f1-00737-55296-1825</pre>
</ol></ul><p>
Note that by default lminstall converts to v6 format. It can convert to a format 
compatible with older versions by using lminstall -overfmt 2 (or 3, 4, 5 depending on 
the 
FLEXlm<I></I> version).<p>
<a name="2.6"></a><h2>2.6  License file order</h2>
<p>
In some cases, the ordering of lines in a license file can be crucial. Version 7 vendor 
daemons and clients automatically internally sort the lines so that in most cases the 
optimal result is achieved. For earlier versions of FLEXlm, note the following 
suggestions, which are all based on the fact the checkouts are attempted on lines in the 
order they appear in the license file:<p>
<ol><li><B>Place FEATURE lines before INCREMENT lines for the same feature.</B> The 
rule regarding FEATURE lines is that only the first counted FEATURE line is 
observed by the license server, and that if there is a FEATURE line and 
INCREMENT lines, the FEATURE line must appear first. (A few large, older 
FLEXlm<I></I>-licensed companies have FEATURE lines that behave identically to 
INCREMENT lines, and only the rules applying to INCREMENT apply to them.)<li><B>Where multiple counted FEATURE lines exist for the same feature, make 
sure the desired FEATURE line appears first</B>, because the others are ignored.<li>Place node-locked, uncounted lines before floating lines for the same 
FEATURE. 
Otherwise, the floating license may be consumed when a node-locked would have been used, resulting in denial for other users.<li>USE_SERVER. The USE_SERVER line is recommended. 
<B>Normally, the 
USE_SERVER line is placed immediately after the SERVER line</B>. However, if 
there are uncounted licenses which you don't want to fail if the server is 
unavailable, these should be placed at the top of the file, with the USE_SERVER 
line following them. This only works, however, if each user that needs the 
uncounted license has direct access to a current copy of the file. The advantage to 
placing USE_SERVER right after the SERVER line is users don't need up-to-date 
copies of the license file.</ol>
<a name="Chapter 3"></a><hr><h1>Chapter 3 <a name="17416: chap head: Chapter 2"></a>
<a name="_IX_60"></a>Multiple License Files</h1>
<p>
Since more than 1500 vendors have chosen 
FLEXlm<I></I> as their license manager, chances 
are good that you will have to administer licenses from more than one vendor or 
multiple products from the same vendor.<p>
<a name="33199: 1Head: 3.1 Overview of Combining License Files"></a><a name="3.1"></a><h2>3.1  Overview of Combining License Files</h2>
<p>
When you are running 
FLEXlm<I></I>-licensed products from multiple vendors, you may 
need to take steps to prevent licensing conflicts during installation. There are three 
ways you can accomplish this:<p>
<ul><li>Multiple license server nodes; each running one 
lmgrd<I></I> and one license file<li>One license server node running one 
lmgrd<I></I> and several license files<li>One license server node running multiple 
lmgrd<I></I>s and multiple license files</ul><p>
Note that before version 6, each 
lmgrd<I></I> could read only a single license file. In the first 
option mentioned above, you will have more license servers to monitor; in the third 
option you have only one server but multiple 
lmgrd<I></I>s to administer. 
<p>
<p>
If all applications and vendor daemons are 
FLEXlm<I></I> v6+, 
<a name="_IX_61"></a>lmgrd can process multiple 
license files, even when the hostids are different, so long as they refer to the same node.<p>
<p>
Your product's license file(s) define the license server(s) by hostname and hostid in the 
SERVER line(s) in the 
<a name="_IX_62"></a>license file. If the license files for two or more products contain 
identical hostids on the SERVER line(s), then these files can be combined. If the 
license files for two products contain different hostids on a SERVER line, then the 
license servers for those products will be running on different nodes and the license 
files cannot be combined.<p>
<p>
If you have two or more products whose license servers run on the same node (as 
specified by the SERVER lines in the license files), you may be able to combine the 
license files into a single license file. If the SERVER lines in those files have identical 
hostids, then you can combine the files into a single file. If the SERVER lines have 
different hostids, then you must keep the license files separate. 
<p>
<p>
More precisely, you can combine two license files under the following conditions:<p>
<ol><li>The number of SERVER lines in each file is the same. 
<li>The hostid field of each SERVER line in one file exactly matches the hostid field 
of each SERVER line in the other file. 
</ol>
<p>
 Some possible reasons license files may not be compatible are: 
<p>
<ul><li>License files are set up to run on different server nodes, so hostids are different. 
<li>One file is set up for single server (has only one SERVER line), the other is set 
up for redundant servers (has multiple SERVER lines).<li>One vendor uses a custom hostid algorithm, so the hostids on the SERVER lines 
are different even though the files are for the same machine. 
</ul><p>
If your license files are compatible as described above, then you have the option of 
combining license files and running a single 
lmgrd<I></I>, as described below in 
<a href="#42205: 2head: 3.1.1 Combining License Files for Multiple Vendors">Section 3.1.1, `Combining License Files from Multiple Vendors,' on page 26</a>. If the 
license files are not compatible, then you must keep the license files separate and run 
separate copies of 
lmgrd<I></I> for each license file, as described in 
<a href="#15425: 2head: 3.1.2 Using Separate License Files on the Same Server Node">Section 3.1.3, `Using 
Separate License Files on the Same Server Node,' on page 27</a>. 
<p>
<p>
Note that you are not required to combine compatible license files; you always have 
the option of running separate 
lmgrd<I></I><I>s</I>, and there is virtually no performance or system-load penalty for running separate 
<a name="_IX_63"></a>lmgrd processes.<p>
<h3>3.1.1	 <a name="42205: 2head: 3.1.1 Combining License Files for Multiple Vendors"></a>Combining License Files from Multiple Vendors</h3>
<p>
If your license files are compatible, you can combine them with any text editor. To 
combine license files, read all of the 
<a name="_IX_64"></a>compatible license files into one file, then edit out 
the extra 
<a name="_IX_65"></a>SERVER lines so that only one set of SERVER lines remains. Write out this 
data, and you have your combined license file. If you combine license files from 
multiple vendors, it is a good idea to keep a copy of the combined license file in each 
vendor's default license file location. This way, users can avoid having to set 
LM_LICENSE_FILE, because each package finds it's license information in the 
default place. On UNIX, you can do this with a symbolic link from each default 
location to the location of the combined license file.<p>
<h3>3.1.2	 FLEXlm<I></I> Version Component Compatibility</h3>
<p>
When you combine license files for two different 
FLEXlm<I></I>-licensed products, it may 
be the case that those products do not use the same version of 
FLEXlm<I></I>. 
FLEXlm<I></I> is 
designed to handle this situation. There are two basic compatibility rules for 
FLEXlm<I></I>:<p>
<ol><li>A newer 
lmgrd<I></I> can be used with an older 
<a name="_IX_66"></a>vendor daemon, but a newer vendor 
daemon might not work properly with an older 
lmgrd<I></I>.<li>A newer vendor daemon (or 
lmgrd<I></I>) can be used with an older client program, but 
a newer client program might not work properly with an older vendor daemon. 
</ol>
<p>
From these two compatibility rules come the simple rules for selecting which version 
of administration tools to use: 
<p>
<ol><li>Always use the newest version of 
<a name="_IX_67"></a>lmgrd<I></I> and the newest version of each vendor 
daemon.<li>Use the newest 
FLEXlm<I></I> utilities.</ol>
<p>
For specific application programs, you can use either the new or the old version (of 
course the vendor daemon for that application must be at least as new as the application 
itself).<p>
<h4>See also</h4>
<ul><li><a href="#26060: 1HeadApp: G.1 Version compatibility and components">Section G.1, `Version compatibility and components,' on page 83</a></ul><h3>3.1.3	 <a name="15425: 2head: 3.1.2 Using Separate License Files on the Same Server Node"></a><a name="_IX_68"></a>Using Separate License Files on the Same Server Node</h3>
<p>
You must run a separate copy of 
lmgrd<I></I> for each license file. When you run multiple 
copies of 
lmgrd<I></I>, there are two details to remember:<p>
<ol><li>The port number on the SERVER line of each license file must be unique. You can 
use a standard text editor to change the port number in each license file so that they 
are all different. 
<li>You must make sure that you are using a compatible version of 
lmgrd<I></I> when you 
start it up for a particular license file. This can be done by using an explicit path 
to 
lmgrd<I></I>.</ol>
<p>
When running client programs (such as a licensed application), you can set the 
LM_LICENSE_FILE<TT></TT> environment variable to point to multiple license files. For 
example, you may have a license file from vendor ABC and a license file from vendor 
XYZ with incompatible servers. You can place the license file from vendor ABC into:<p>
<pre>/usr/flexlm/abc.dat</pre>
</ol></ul><p>
and the license file from vendor XYZ into:<p>
<pre>/usr/flexlm/xyz.dat</pre>
</ol></ul><p>
then set the 
LM_LICENSE_FILE<TT></TT> environment variable to point to both of them. Each 
name in 
LM_LICENSE_FILE<TT></TT> should be separated by a colon (`:') on Unix systems, a 
semicolon (`;') on Windows and Windows/NT systems (in 
FLEXlm<I></I> v4.1, a comma 
was used on Windows and NT), and a space ("") on VMS systems.
In the C shell:<p>
<pre>% setenv LM_LICENSE_FILE<TT></TT> /usr/flexlm/abc.dat:/usr/flexlm/xyz.dat</pre>
</ol></ul><p>
In the Korn and Bourne shells:<p>
<pre># LM_LICENSE_FILE<TT></TT>=/usr/flexlm/abc.dat:/usr/flexlm/xyz.dat
# export LM_LICENSE_FILE<TT></TT> </pre>
<a name="_IX_69"></a><a name="30407: 1Head: 3.2 Using LM_LICENSE_FILE License File List"></a><a name="_IX_70"></a><a name="_IX_71"></a><a name="3.2"></a><h2>3.2  Using LM_LICENSE_FILE License File List </h2>
<p>
If products use different license server nodes, each set of license servers requires 
separate license files. (When multiple software vendors use the same set of license 
server nodes, the technique described above in 
<a href="#33199: 1Head: 3.1 Overview of Combining License Files">Section 3.1, `Overview of Combining 
License Files,' on page 25</a> can be used to combine license files.) The resulting 
(multiple) license files can be installed in convenient locations. On Unix you would set 
the 
LM_LICENSE_FILE<TT></TT> environment variable as follows:<p>
<pre>% setenv LM_LICENSE_FILE<TT></TT> <I>lfpath1</I>:<I>lfpath2</I>:....:<I>lfpathN</I></pre>
</ol></ul><p>
Use a colon (":") to separate the license file names on Unix, on Windows and 
Windows/NT use a semicolon (";"), and on VMS use a space ("").<p>
<p>
<p>
<dl><dt>lfpath1<dd>path to the first license file 
<dd><dd><dd><dt>lfpath2<dd>path to the second license file.</dl><pre>.</pre>
<pre>.</pre>
<pre>.</pre>
<dl><dt>lfpathN<dd>path to the last (Nth) license file 
<dd><dd><dd></dl><p>
Each application queries each license file in the order it is listed in the 
LM_LICENSE_FILE<TT></TT> path. If the license server serving the license file listed in 
<TT>lfpath1</TT> is unreachable, the other files listed in 
LM_LICENSE_FILE<TT></TT> allow a user 
to obtain a license from another server. 
<I>lfpath</I> can also be `<I>port@host'</I>, using the port-number and hostname from the SERVER line in the license file.<p>
<h4>See also 
</h4>
<ul><li><a href="#21471: 2Head: 4.3.2 Redundancy via License File List in $LM_LICENSE_FILE">Section 4.3.2, `Redundancy via License File List in $LM_LICENSE_FILE,' on 
page 32</a><li>.<a href="#41901: 1HeadApp: C.1 How to set environment variables">Appendix C, `How to set environment variables' on page 65</a><li><a href="#15416: 2Head: 2.1.2 Setting the Path with an Environment Variable">Section 2.1.2, `Setting the Path with an Environment Variable,' on page 12</a></ul><a name="Chapter 4"></a><hr><h1>Chapter 4 <a name="15827: chap head: Chapter 4"></a>
Selecting Server Nodes</h1>
<p>
This chapter helps you decide which nodes to use as 
<a name="_IX_72"></a>license server nodes. 
<p>
<a name="31675: 1Head: 5.1 Resources Used by the Server"></a><a name="4.1"></a><h2>4.1  Resources Used by the Server</h2>
<p>
This section discusses the resources used by the license server. When you select a 
server node, you may need to take into account the system limits on these resources. 
For small numbers of licenses (under about 100), most of these items should not be a 
problem on any workstation.<p>
<h3>4.1.1	 Sockets</h3>
<p>
When using TCP, a single 
<a name="_IX_73"></a>vendor daemon can support as many users as the per-process 
system limit for file descriptors, which ranges from 256 on SunOS 4.x to 4000 on DEC 
Alpha. When no more file descriptors are available to a daemon, additional vendor 
daemons are spawned to allow for extra file descriptors, though this is not 
recommended. When using UDP, there is no limit to the number of end-users per 
vendor daemon process, since they can share a single socket in the vendor daemon 
(UDP has other drawbacks, and TCP is normally preferred). If there are more than 250 
concurrent clients from a SunOS vendor daemon, it may be a good idea to move the 
server to a different OS, since all other OSs support more file descriptors. If there are 
more than 1000 concurrent clients being supported by a single vendor daemon, then 
it's probably good to split the license file into more than one file, from different servers, 
to lighten the networking traffic (which will require the ISV to agree to issue new 
licenses). Clients can checkout licenses from multiple servers using a license-file list 
via LM_LICENSE_FILE.<p>
<p>
Each client connected to a license server uses one socket. The total number of 
<a name="_IX_74"></a>sockets 
used by the license server programs is slightly larger than the total number of 
simultaneous clients.<p>
<p>
On older SCO systems, the default number of 
<a name="_IX_75"></a>sockets may be set fairly low; if you 
choose to run a server on such a machine, you may need to reconfigure your kernel to 
have more sockets.<p>
<h4>Windows 95</h4>
<p>
The number of sockets available for clients is about 60. In general, NT is preferred for 
server systems, where there is no such limit, and the operating system is better 
designed for server processes.<p>
<h3>4.1.2	 <a name="21683: 2head: 4.1.3 Cpu Time"></a>CPU Time</h3>
<p>
For small numbers of clients, the license servers use very little CPU time. The servers 
might have only a few seconds of CPU time after many days.<p>
<p>
For a large number of clients (who are each exchanging heartbeat messages with the 
server), or for high checkout/checkin activity levels (hundreds per second), the amount 
of CPU time consumed by the server may start to become significant although, even 
here, CPU usage is normally not high. In this case, you may need to ensure that the 
server machine you select will have enough CPU cycles to spare.<p>
<p>
GLOBEtrotter Software<I></I> has rarely encountered a situation where CPU cycles were an 
issue.<p>
<h3>4.1.3	 Disk Space</h3>
<p>
The only output files created by the license 
<a name="_IX_76"></a>servers are the debug and 
<a name="_IX_77"></a>report 
<a name="_IX_78"></a>log files. 
The report log files are used to generate accurate usage reports by 
FLEXadmin<I></I>. These 
log files contain one line for each checkout and one line for each checkin. If you have 
a lot of license activity, these log files will grow very large. You will need to consider 
where to put these files and how often to delete or prune them. The license 
administrator can opt not to log messages to the debug log file if disk space is at a 
premium. See 
<a href="#17761: 2Head: 6.2.15 NOLOG">Section 5.2.10, `NOLOG,' on page 39</a> and 
<a href="#37654: 2Head: 6.2.17 REPORTLOG">Section 5.2.11, 
`REPORTLOG,' on page 39</a>.<p>
<p>
Note that the log files should be local files on the server machine(s) to avoid 
networking dependencies.<p>
<h4>Switching output of the 
<a name="_IX_79"></a>debug log file on Unix systems</h4>
<p>
On Unix, the debug log file output can be switched after the daemons are running. The 
technique to do this involves piping the 
<I>stdout</I> of 
lmgrd<I></I> to a shell script that appends to 
the file for each line. 
<p>
<p>
This is done as follows:<p>
<p>
Instead of the `normal' startup:<p>
<pre>	% <a name="_IX_80"></a>lmgrd&gt; LOG</pre>
</ol></ul><p>
Start 
lmgrd<I></I> this way:<p>
<pre>	% <TT>lmgrd </TT>| sh -c 'while read line; do echo"$line" &gt;&gt; LOG ; done'</pre>
</ol></ul><p>
With this startup method, the output file `LOG' can be renamed and a new log file will 
be created. You could even make `LOG' a symbolic link and change the value of the 
link to switch the log file.<p>
<p>
This technique applies to Unix systems only.<p>
<h3>4.1.4	 <a name="12289: 2head: 4.1.4 Disk Space"></a>Memory</h3>
<p>
The 
FLEXlm<I></I> daemons use little memory. On SunOS, 
lmgrd<I></I> uses 
approximately160 kB and the vendor daemons use approximately 180 kB each, 
although memory usage increases in the 
<a name="_IX_81"></a>vendor daemon with the size of the license file 
and the number of concurrent users.<p>
<h3>4.1.5	 Network Bandwidth</h3>
<p>
FLEXlm<I></I> sends relatively small amounts of data across the 
<a name="_IX_82"></a>network. Each transaction, 
such as a checkout or checkin, is typically satisfied with less than 1Kbyte of data 
transferred. This means that 
FLEXlm<I></I> licensing can be effectively run over slow 
networks (such as dial-up SLIP lines) for small numbers of clients.<p>
<p>
For a large number of clients (hundreds), each of which will be exchanging heartbeat 
messages with the vendor daemon, the network bandwidth used may start to become 
significant. In this case you should run client and server on the same local area 
network, which may require splitting licenses between 2 files for 2 servers. Users can 
use a license file list in LM_LICENSE_FILE to have effective access to both servers.<p>
<p>
In high-traffic networks, with 
FLEXlm<I></I> clients older than v5, you may also want to 
avoid setting 
LM_LICENSE_FILE<TT></TT> to a 
<TT>port@host</TT> address. Instead, the license 
administrator should place a copy of the license file in a filesystem local to the 
application. See 
<a href="#32236: 1head: 2.1 Location of the License File">Section 2.1, `Specifying Location of the License File,' on page 9</a>. 
<p>
<a name="4.2"></a><h2>4.2  Remote Mounted Disks</h2>
<p>
GLOBEtrotter Software<I></I> recommends that you do not use 
<a name="_IX_83"></a>remote mounted disks when 
you run the license server. In other words, we recommend that 
lmgrd<I></I>, the vendor 
daemons, the license file, and the debug and report log files are all on locally mounted 
disks. If any of these files is on a remote mounted disk, you double the points of failure 
which could lead to a temporary loss of all of your licenses. When all files are mounted 
locally, the licenses will be available as long as the server machine is up; but when the 
files are on a different machine, then the loss of either the license server machine or the 
file server machine will cause the licenses to be unavailable.<p>
<a name="41289: 1Head: 5.3 Redundant Servers"></a><a name="_IX_84"></a><a name="4.3"></a><h2>4.3  Redundant Servers</h2>
<p>
FLEXlm<I></I> supports two methods of redundancy: A set of three redundant license 
servers, and redundancy via a license file list in the $LM_LICENSE_FILE setting.<p>
<p>
With three-server redundancy, if any two of the three license servers are up and 
running, the system is functional and hands out its total complement of licenses (Two 
out of three license servers is referred to as a `quorum').<p>
<p>
With $LM_LICENSE_FILE list redundancy, each one of a group of license servers 
serves a subset of the total licenses. The end-user sets LM_LICENSE_FILE to a list of 
license files, where each license file refers to one of the license servers. The application 
then tries each server in the list, in order, until it succeeds or gets to the end of the list.<p>
<h4>See Also</h4>
<ul><li><a href="#30407: 1Head: 3.2 Using LM_LICENSE_FILE License File List">Section 3.2, `Using LM_LICENSE_FILE License File List,' on page 27</a></ul><h3>4.3.1	 Three-Server redundancy</h3>
<h4>Selecting Server Nodes</h4>
<a name="_IX_85"></a><a name="_IX_86"></a><p>
If all the end-user data is on a single file server, then there is no need for 
<a name="_IX_87"></a>redundant 
servers, and 
GLOBEtrotter Software<I></I> recommends the use of a single server node for 
the 
FLEXlm<I></I> daemons. If the end-user's data is split among two or more server nodes 
and work is still possible when one of these nodes goes down or off the network, then 
multiple server nodes can be employed. In all cases, an effort should be made to select 
stable systems as server nodes; in other words, do not pick systems that are frequently 
rebooted or shut down for one reason or another. The three server nodes can be any 
supported server nodes 
 -  it is not required that they be the same architecture or 
operating system.<p>
<p>
Three-server redundancy does not provide load-balancing. Use $LM_LICENSE_FILE 
list instead for this type of redundancy. This is because with three-server redundancy, 
only one of the three servers is `master', capable of issuing licenses. Since all clients 
must contact the `master', all clients must have reliable networking to a single node.<p>
<p>
These three-server redundant servers should have excellent communications, and 
should be on the same subnet. Often this means that the three-servers should be located 
physically close to each other. This form of redundancy requires that the servers 
exchange heartbeats periodically, and poor communications can cause poor 
performance. You should never configure redundant servers with slow 
communications or dialup links.<p>
<h3>4.3.2	 <a name="21471: 2Head: 4.3.2 Redundancy via License File List in $LM_LICENSE_FILE"></a>Redundancy via License File List in $<a name="_IX_88"></a>LM_LICENSE_FILE</h3>
<p>
This is best explained by example. If 10 licenses are desired for both f1 and f2, the ISV 
would issue 2 sets of licenses with a count of 5 for each of f1 and f2. The server nodes 
(unlike three-server redundancy) can be physically distant. The license files would 
look like:<p>
<ul><li>License 1 for chicago</ul><pre>	SERVER chicago 17007ea8 1700</pre>
<pre>	DAEMON xyzd /etc/mydaemon</pre>
<pre>	FEATURE f1 xyzd 1.000 01-jan-99 5 26C7DD9CD665B8270186""</pre>
<pre>	FEATURE f2 xyzd 1.000 01-jan-99 5 0739D2F78CE46C57041D""</pre>
<ul><li>License 2 for tokyo</ul><pre>	SERVER tokyo 17007ea8 1700</pre>
<pre>	DAEMON xyzd /etc/mydaemon</pre>
<pre>	FEATURE f1 xyzd 1.000 01-jan-99 5 16BE40E1DAEEEDA8798D""</pre>
<pre>	FEATURE f2 xyzd 1.000 01-jan-99 5 6DB6F3E40E61885712DF""</pre>
</ol></ul><p>
The user in Chicago could set $LM_LICENSE_FILE to 
<p>
<pre>1700@chicago:1700@tokyo </pre>
</ol></ul><p>
the user in Tokyo could set $LM_LICENSE_FILE to 
<p>
<pre>1700@tokyo:1700@chicago</pre>
</ol></ul><p>
The application attempts the first server in the list, and if that fails for any reason, the 
second server is tried.<p>
<h3>4.3.3	 Comparing Three-Server to License File List</h3>
<h4>Are there any drawbacks to using the license file list for redundancy?</h4>
<p>
Yes. By default, once a 
<I>license job</I> has successfully checked out a license from one 
host, all subsequent checkouts must be satisfied from the same host. If the application 
requires more than one FEATURE, this could result in a license denial when the license 
is available on another server. An application can bypass this restriction if it is coded 
with the use of multiple 
FLEXlm<I></I> 
<I>license jobs</I>. Only your application vendor can tell 
you if their application is programmed in this manner.<p>
<p>
If the application supports license queueing, all licenses are only queued from the first 
host on the list.<p>
<p>
Finally, if one server becomes unavailable, some licenses will be unavailable.<p>
<h4>When is it recommended to use a license file list for redundancy rather 
than true redundant servers? 
</h4>
<ul><li>When there's less system administration available to monitor license servers. 
<li>When load-balancing is needed: when clients are located far apart, e.g., London 
and Tokyo. You can make servers available locally, with remote servers available 
as backup.<li>License-file list is more forgiving if you lose quorum<li>It's not limited to 3 servers (any number will work); and for wide-area networks, 
you can make servers available locally, with remote servers available as backup.<li>Clients do not require reliable networking to a single node with license-file list, 
so this is recommended where networking itself requires redundancy.</ul><a name="36598: 1Head: 5.4 Counted Vs. Uncounted Licenses"></a><a name="4.4"></a><h2>4.4  Counted vs. Uncounted Licenses</h2>
<p>
The license file determines whether a license server is needed. If all the FEATURE (or 
INCREMENT) lines have a license-count of 0 (unlimited) or `uncounted' 
(FLEXlm<I></I> v6 or later only), then no server is needed. This type of license is called 
<I>uncounted</I>. Alternatively, if any FEATURE lines have a non-zero license-count, then a 
server is required to count those licenses. If a vendor wants to use 
FLEXlm<I></I> without a 
server, they must issue 
<I>uncounted</I> licenses.<p>
<p>
With 
FLEXlm<I></I> v5 or later, the license server can serve uncounted licenses as well. This 
is done so that the REPORTLOG file will include transactions for all license requests, 
which can then be reported on by 
FLEXadmin<I></I>. To do this, include a SERVER line in 
the license file, and put the USE_SERVER line immediately after the SERVER line. 
The 
<a name="_IX_89"></a>vendor daemon will service the uncounted licenses, and the USE_SERVER line 
indicates to applications that they will be authorized by the server.<p>
<a name="Chapter 5"></a><hr><h1>Chapter 5 <a name="19683: chap head: End-User License Administration"></a>
The <a name="_IX_90"></a>Options File</h1>
<p>
The options file allows the license administrator to control various operating 
parameters of 
FLEXlm<I></I>. Specifically the license administrator can:<p>
<ul><li>Allow the use of features based on user, hostname, display name, or IP-address.<li>Deny the use of features based on user, hostname, display name, or IP-address.<li>Reserve licenses based on user, hostname, display name, or IP-address.<li>Control the amount of information logged about license usage.</ul><p>
Options files allow you, as the license administrator, to be as secure or open with 
licenses as you like.<p>
<p>
Lines in the options file were limited to 200 characters prior to 
FLEXlm<I></I> v3.0. In v3.0 
and later, the line length is 2048 characters. 
FLEXlm<I></I> v4.0 allows the `\' character as a 
continuation character in options file lines.<p>
<a name="5.1"></a><h2>5.1  Creating an Options File</h2>
<p>
To create an options file:<p>
<ol><li>Use the appropriate options listed in 
<a href="#49364: 1head: 5.2 Customizing the Options File">Section 5.2, `Customizing the Options File,' 
on page 35</a> to create the options file using any text editor. You can put the options 
file anywhere; however, we recommend that the options file for vendor 
<I>xyz</I> be 
placed in 
<pre><TT>	/usr/local/flexlm/options/xyz.opt</TT> (Unix)</pre>
<pre>	C:\flexlm\optionsyz.opt	 	(Windows/NT)</pre>
<li>Add the pathname to the options file in the license file as the fourth field on the 
DAEMON line for the application's vendor daemon. For example, 
<pre>	DAEMON xyzd /etc/xyzd /usr/local/flexlm/options/xyz.opt</pre>
<ul><li>would enable the xyzd vendor daemon to look at the specified options file.<li>In 
FLEXlm<I></I> v5 or later, you can put `options=' before the path.<li>In 
FLEXlm<I></I> v6 or later, adding the options path to the license file is optional. 
Instead, name the file 
<I>vendor</I>.opt, where vendor is the 
<a name="_IX_91"></a>vendor daemon name, and 
place it in the same directory as the license used by 
<li>, and it will automatically be used at server startup.</ul><a name="49364: 1head: 5.2 Customizing the Options File"></a><a name="5.2"></a><h2>5.2  Customizing the Options File</h2>
<p>
Below is an overview of the options file syntax. See 
<a href="#94657: 1head: 5.2 Understanding Options Files">Section 5.4, `Understanding 
Options Files,' on page 41</a> for examples and additional information. 
<p>
<p>
Each line of the file controls one option. The options are:<p>
<dl><dt>EXCLUDE 
<dd>deny a user access to a feature.<dt>EXCLUDEALL<dd>deny a user access to 
<I>all</I> features served by this vendor 
daemon.<dt>GROUP 
<dd>define a group of users for use with any options.<dt>HOST_GROUP 
<dd>define a group of hosts for use with any options.<dt>INCLUDE 
<dd>allow a user to use a feature.<dt>INCLUDEALL<dd>allow a user to use 
<I>all</I> features served by this vendor 
daemon.<dt>LINGER<dd>cause licenses to be held by the vendor daemon for a 

period after the application checks them in or exits.<dt>MAX<dd>limit usage for a particular feature/group - prioritizes 
usage among users.<dt>MAX_OVERDRAFT<dd>limit overdraft usage to less than the amount specified in 
the license.<dt>NOLOG 
<dd>turn off logging certain items.<dt>REPORTLOG<dd>specify that a logfile be written suitable for use by the 

FLEXadmin<I></I> End-User Administration Tool.<dt>RESERVE 
<dd>reserve licenses for a user.<dt>TIMEOUT 
<dd>specify idle timeout for a feature, returning it to the free 
pool for use by another user.<dt>TIMEOUTALL<dd>Set timeout on all features.</dl><p>
You can include comments in your options file by starting each comment line with a 
pound sign `#'. Everything in an options file is case sensitive. Be sure that user names 
and feature names, for example, are entered correctly.<p>
<h4>Featurename specification</h4>
<p>
Starting with 
FLEXlm<I></I> v5, you can select a particular line of a given featurename, as 
follows:<p>
<pre><I>	featurename</I>:<I>name</I>=<I>value</I></pre>
</ol></ul><p>
For example:<p>
<pre>	f1:VERSION=2.0</pre>
</ol></ul><p>
You can specify a feature by any of the following fields:<p>
<pre>	VERSION HOSTID EXPDATE KEY VENDOR_STRING ISSUER NOTICE dist_info
	user_info asset_info</pre>
</ol></ul><p>
In 
FLEXlm<I></I> v5.11 or later, you can use a PACKAGE name in place of a feature name, 
and the option will apply to the whole package.<p>
<h3>5.2.1	 <a name="_IX_92"></a>EXCLUDE</h3>
<pre>EXCLUDE <I>featurename type name</I></pre>
</ol></ul><p>
Excludes a user, host, display, or group from the list of who is allowed to use the 
feature. Excluded users will not be allowed to use the feature.<p>
<ul><li><I>featurename</I> - name of the feature being affected<li><I>type</I> - one of 
<a name="_IX_93"></a>USER, 
<a name="_IX_94"></a>HOST, 
<a name="_IX_95"></a>DISPLAY, GROUP, HOST_GROUP, or 
<a name="_IX_96"></a>INTERNET 
(see 
<a href="#54729: 2head: 5.2.7 Group">Section 5.2.3, `GROUP</a>' and 
<a href="#16409: 2Head: 6.2.2 HOST_GROUP">Section 5.2.4, `HOST_GROUP,' on page 37</a><li><I>name</I> - name of the user or group to exclude</ul><p>
To exclude the user `hank' from the list of users able to use feature f1:<p>
<pre>	EXCLUDE f1 USER hank</pre>
<h3>5.2.2	 <a name="_IX_97"></a>EXCLUDEALL 
</h3>
<pre>EXCLUDEALL <I>type</I> <I>name</I></pre>
</ol></ul><p>
Excludes a user, host, display, or group from the list of who is allowed to use all 
features served by this vendor daemon.<p>
<ul><li><I>type</I> - one of USER, HOST, DISPLAY, GROUP, HOST_GROUP or INTERNET 
(see 
<a href="#54729: 2head: 5.2.7 Group">Section 5.2.3, `GROUP</a>' and 
<a href="#16409: 2Head: 6.2.2 HOST_GROUP">Section 5.2.4, `HOST_GROUP,' on page 37</a><li><I>name</I> - name of the user or group to exclude</ul><p>
To exclude any user on the machine `chaos' from using all features served by this 
vendor daemon:<p>
<pre>	EXCLUDEALL HOST chaos</pre>
<h3>5.2.3	 <a name="54729: 2head: 5.2.7 Group"></a>GROUP</h3>
<pre>GROUP <I>groupname usernamelist</I></pre>
</ol></ul><p>
Defines a group of users for use in INCLUDE, INCLUDEALL, EXCLUDE, 
EXCLUDEALL, and RESERVE option lines.<p>
<ul><li><I>groupname</I> - name of the group being defined<li><I>usernamelist</I> - list of user names in that group</ul><p>
To define the group Hackers consisting of bob, howard, and james:<p>
<pre>	GROUP Hackers bob howard james</pre>
</ol></ul><p>
In 
FLEXlm<I></I> v3.0 multiple GROUP lines will add all the users specified into the group. 
Pre-v3.0 
FLEXlm<I></I> daemons do not allow multiple GROUP lines to concatenate. In fact, 
the second GROUP line would re-define the GROUP.<p>
<p>
In 
FLEXlm<I></I> v4.0 or later, USER_GROUP is an alias for GROUP.<p>
<h3>5.2.4	 <a name="16409: 2Head: 6.2.2 HOST_GROUP"></a>HOST_GROUP</h3>
<pre>HOST_GROUP <I>groupname hostnamelist</I></pre>
</ol></ul><p>
Defines a group of hosts for use in INCLUDE, INCLUDEALL, EXCLUDE, 
EXCLUDEALL, and RESERVE option lines.<p>
<ul><li><I>groupname</I> - name of the group being defined<li><I>hostnamelist</I> - list of host names in that group</ul><h3>5.2.5	 <a name="_IX_98"></a>INCLUDE</h3>
<pre>INCLUDE <I>featurename type name</I></pre>
</ol></ul><p>
Includes a user, host, display, or group in the list of who is allowed to use the feature. 
Anyone not in an INCLUDE statement will not be allowed to use that feature.<p>
<ul><li><I>featurename</I> - name of the feature being affected<li><I>type</I> - one of USER, HOST, DISPLAY, GROUP, HOST_GROUP or INTERNET 
(see 
<a href="#54729: 2head: 5.2.7 Group">Section 5.2.3, `GROUP</a>' and 
<a href="#16409: 2Head: 6.2.2 HOST_GROUP">Section 5.2.4, `HOST_GROUP,' on page 37</a><li><I>name</I> - name of the user or group to include</ul><p>
To include user `bob' in the list of users able to use feature f1:<p>
<pre>	INCLUDE f1 USER bob</pre>
</ol></ul><p>
INCLUDE is required for USER_BASED or HOST_BASED features. The system 
administrator specifies which users are allowed to use the product, via INCLUDE, and 
the license limits the number of users that can be INCLUDEd.<p>
<h3>5.2.6	 <a name="_IX_99"></a>INCLUDEALL 
</h3>
<pre>INCLUDEALL <I>type</I> <I>name</I></pre>
</ol></ul><p>
Includes a user, host, display, or group in the list of who is allowed to use all features 
served by this vendor daemon. Anyone not in an INCLUDEALL statement will not be 
allowed to use these features.<p>
<ul><li><I>type</I> - one of USER, HOST, DISPLAY, GROUP, HOST_GROUP or INTERNET 
(see 
<a href="#54729: 2head: 5.2.7 Group">Section 5.2.3, `GROUP</a>' and 
<a href="#16409: 2Head: 6.2.2 HOST_GROUP">Section 5.2.4, `HOST_GROUP,' on page 37</a><li><I>name</I> - name of the user or group to include</ul><p>
To allow the user `jane' to use all features served by this vendor daemon:<p>
<pre>	INCLUDEALL USER jane</pre>
<h3>5.2.7	 <a name="_IX_100"></a>LINGER</h3>
<pre>LINGER <I>featurename interval</I></pre>
</ol></ul><p>
Rarely used. This causes the daemon to `hold on' to the license for 
<I>featurename 
</I>for<I> 
interval 
</I>seconds after the application checks the license in or exits. This could be 
useful for short-duration programs which will be used many times in a row by the same 
user, to ensure that the user will be able to re-acquire the license repeatedly. On the 
other hand, other users have to wait until the first user is completely finished, plus a 
linger interval. This is only useful if the application uses duplicate grouping. 
Otherwise, LINGER will cause you to use extra licenses. Contact your software vendor 
for information about how they implemented duplicate grouping in their product. 
<p>
<h3>5.2.8	 <a name="_IX_101"></a>MAX 
</h3>
<p>
(v5.11+ vendor daemon only).<p>
<pre>MAX <I>numlic</I> <I>featurename</I> <I>type name</I></pre>
</ol></ul><p>
Limits usage for a group or user.<p>
<ul><li><I>numlic</I> - usage limit for this user or group<li><I>featurename</I> - feature this limit applies to<li><I>type</I> - USER, HOST, DISPLAY, GROUP, HOST_GROUP or INTERNET.<li><I>name</I> - name of the user or group to limit</ul><h3>5.2.9	 <a name="_IX_102"></a>MAX_OVERDRAFT</h3>
<pre>MAX_OVERDRAFT <I>featurename</I> <I>numlic</I></pre>
</ol></ul><p>
Limits usage below the OVERDRAFT allowed by the license file.<p>
<h3>5.2.10	 <a name="17761: 2Head: 6.2.15 NOLOG"></a><a name="_IX_103"></a>NOLOG</h3>
<pre>NOLOG <I>what</I></pre>
</ol></ul><p>
Turns off logging of specific events by the 
FLEXlm<I></I> daemons.<p>
<ul><li><I>what</I> - what to turn off; one of IN, OUT, DENIED, or QUEUED</ul><p>
To turn off logging of checkins:<p>
<pre>NOLOG IN	</pre>
</ol></ul><p>
To turn off logging of checkouts and queued requests two separate NOLOG lines are 
required:<p>
<pre>	NOLOG DENIED</pre>
<pre>	NOLOG QUEUED</pre>
</ol></ul><p>
License administrators might use this option to reduce the size of the 
lmgrd<I></I> or `debug' 
log file. 
<p>
<h3>5.2.11	 <a name="37654: 2Head: 6.2.17 REPORTLOG"></a><a name="_IX_104"></a>REPORTLOG</h3>
<pre>REPORTLOG filename</pre>
</ol></ul><p>
REPORTLOG specifies the file which will contain the report-writer log for this vendor 
daemon. If 
<I>filename 
</I>begins with a '+' character, the file will be opened for append, 
otherwise the file will be overwritten each time the daemon is started. 
<I>FLEXadmin</I><TT>'</TT>, 
a separate product available from Globetrotter, can be used to read and report on 
REPORTLOG files.<p>
<p>
This file is only useful with the 
FLEXadmin<I></I> license administration utility. 
<p>
<a name="_IX_105"></a><h4>LM_PROJECT</h4>
<p>
The 
FLEXadmin<I></I> report writer can report on `projects.' A project is set up by having 
all users working on a project set their LM_PROJECT environment variable (or 
registry on Windows) to a string that describes the project. 
FLEXadmin<I></I> can then group 
usage by project, as defined by what LM_PROJECT was set to when the application 
was run.<p>
<h3>5.2.12	 <a name="_IX_106"></a>RESERVE</h3>
<pre>RESERVE <I>numlic featurename type name</I></pre>
</ol></ul><p>
Reserves licenses for a specific user.<p>
<ul><li><I>numlic</I> - number of licenses to reserve<li><I>featurename</I> - name of feature to reserve<li><I>type</I> - one of USER, HOST, DISPLAY, GROUP, HOST_GROUP or INTERNET 
(see 
<a href="#54729: 2head: 5.2.7 Group">Section 5.2.3, `GROUP</a>' and 
<a href="#16409: 2Head: 6.2.2 HOST_GROUP">Section 5.2.4, `HOST_GROUP,' on page 37</a><li><I>name</I> - name of the user or group to reserve licenses for.</ul><p>
To reserve one license of feature f1 for user `mel':<p>
<pre>	RESERVE 1 f1 USER mel</pre>
</ol></ul><p>
Any licenses reserved for a user are dedicated to that user. Even when that user is not 
actively using the license it will be unavailable to other users. However, a RESERVED 
license will not cause an overdraft to be reported by 
FLEXadmin<I></I> if the license is not 
actually in use.<p>
<h3>5.2.13	 <a name="_IX_107"></a>TIMEOUT</h3>
<pre>TIMEOUT <I>featurename seconds</I></pre>
</ol></ul><p>
Sets the time after which an inactive license is reclaimed by the vendor daemon.<p>
<ul><li><I>featurename</I> - name of the feature<li><I>seconds</I>- number of seconds after which inactive license is reclaimed</ul><p>
To set the timeout for feature f1 to one hour (3600 seconds):<p>
<pre>	TIMEOUT f1 3600</pre>
</ol></ul><p>
TIMEOUT checks in the licenses if the process has been `idle' for a period longer than 
the specified time period, and someone else wants the license. The daemon declares a 
process idle when it has not heard from the process (the client sends heartbeats). The 
application must explicitly declare itself idle for this to work, or (on Unix) the 
application must be stopped (^Z). That is, unless the application explicitly supports this 
feature, it will not work. Contact your software vendor for information about how they 
implemented this feature in their product. 
<p>
<p>
The application vendor can also disable the timeout feature, in which case the 
TIMEOUT option has no effect. The vendor can set a minimum value for the timeout. 
If you specify a timeout value smaller than the minimum, the minimum is used. The 
default minimum value is 900 seconds (15 minutes).<p>
<p>
If you do not specify a timeout value in your options file, then there will be no timeout 
for that feature. With a pre-v5 
<a name="_IX_108"></a>vendor daemon, licenses are only freed by TIMEOUT 
when a new request for a license would require a license that can be freed with 
TIMEOUT. With v5, licenses are freed when they time out.<p>
<a name="_IX_109"></a><a name="5.3"></a><h2>5.3  TIMEOUTALL</h2>
<p>
(v5.11+ vendor daemon only)<p>
<pre>TIMEOUTALL <I>seconds</I></pre>
</ol></ul><p>
Same as TIMEOUT, but applies to all features.<p>
<a name="94657: 1head: 5.2 Understanding Options Files"></a><a name="_IX_110"></a><a name="5.4"></a><h2>5.4  Understanding Options Files</h2>
<p>
The following information gives an overview of the syntax of a complete options file, 
and some samples intended to illustrate ways to effectively control access to your 
licenses.<p>
<h3>5.4.1	 How the Vendor Daemon Uses the Options File</h3>
<p>
When the vendor daemon is started by 
<a name="_IX_111"></a>lmgrd<I></I>, it is passed the location of the options 
file. If you modify the options file while the server is running, you must use lmreread 
to have the vendor daemon reread the options file (though pre-v7 vendor daemons do 
not support this and require that the server be stopped and restarted). There can only 
be one options file per vendor daemon and each vendor needs a separate options file.<p>
<h3>5.4.2	 Rules of Precedence in Options Files</h3>
<p>
Before you can use options to utilize licenses effectively you must understand the 
options file precedence. INCLUDE and EXCLUDE statements can be combined in the 
same options file and control access to the same features. When doing so, keep in mind 
the following:<p>
<ul><li>If there is only an EXCLUDE list, everyone who is not on the list will be allowed 
to use the feature. 
<li>If there is only an INCLUDE list, only those users on the list will be allowed to 
use the feature. 
<li>If neither list exists, everyone is allowed to use the feature. 
<li>The EXCLUDE list is checked before the INCLUDE list; someone who is on 
both lists will not be allowed to use the feature.</ul><p>
Once you create an INCLUDE or EXCLUDE list everyone else is 
<I>implicitly</I> `outside' 
the group. This feature allows you, as an administrator, the ability to control licenses 
without having to 
<I>explicitly</I> list each user that you wish to allow or deny access to. In 
other words there are two approaches; you can either:<p>
<ul><li>Give most users access and list only the exceptions or<li>Severely limit access and list only the those users that have access privileges. 
</ul><h3>5.4.3	 Simple 
<a name="_IX_112"></a>Options File Example</h3>
<pre>RESERVE	 1 compile 	USER robert</pre>
<pre>RESERVE	 3 compile 	HOST mainline</pre>
<pre>EXCLUDE compile USER lori</pre>
<pre>NOLOG QUEUED</pre>
</ol></ul><p>
This options file would:<p>
<ul><li>Reserve one license for the feature `compile' for the user `robert.'<li>Reserve three licenses for the feature `compile' for anyone on a computer with 
the hostname `mainline.'<li>Prevent the user `lori' from using the `compile' feature on any node on the 
network.<li>Cause QUEUED messages to be omitted from the debug log file.</ul><p>
The sum total of the licenses reserved must be less than or equal to the number of 
licenses specified in the FEATURE line. In the example above, there must be a 
minimum of four licenses on the `compile' FEATURE line. If fewer licenses are 
available, only the first set of reservations (up to the license limit) is used. 
<p>
<p>
If this data were in file 
<TT>/usr/local/flexlm/options/local.options</TT>, 
then you would modify the license file DAEMON line as follows:<p>
<pre><TT>DAEMON xyzd /usr/local/xyzd /usr/local/flexlm/options/local.options</TT></pre>
<h3>5.4.4	 Limiting Access for Multiple Users</h3>
<p>
Each INCLUDE, INCLUDEALL, EXCLUDE, EXCLUDEALL, and RESERVE line 
must have a single user name (or group) listed. To affect more than one user name 
create a GROUP. For example to exclude `bob,' `howard,' and `james' from using the 
feature called `toothbrush' we could create the following options file:<p>
<pre>EXCLUDE toothbrush USER bob</pre>
<pre>EXCLUDE toothbrush USER howard</pre>
<pre>EXCLUDE toothbrush USER james</pre>
</ol></ul><p>
There is an easier way though. Create a GROUP and exclude the list of users from 
using the feature. Like the previous example, the following options file would exclude 
`bob', `howard' and `james' from using the feature called `toothbrush':<p>
<pre># First define the group"Hackers"</pre>
<pre>GROUP Hackers bob howard james</pre>
<pre># Then exclude the group</pre>
<pre>EXCLUDE toothbrush GROUP Hackers</pre>
</ol></ul><p>
Now when you want to allow or deny access to any feature to that group, you have an 
`alias' list to make it simple.<p>
<p>
The GROUP function works for a list of user names prior to 
FLEXlm<I></I> v4.0. To control 
access to multiple displays (and hosts in pre-v4.0 
FLEXlm<I></I>) you must use multiple 
option lines in your options file. For example, in pre-v4.0 
FLEXlm<I></I> to exclude all users 
logged in on the hosts `fred' and `barney' from using a feature called `f1' add these 
lines to your options file:<p>
<pre>EXCLUDE f1 USER fred</pre>
<pre>EXCLUDE f1 USER barney</pre>
</ol></ul><p>
With a 
FLEXlm<I></I> v4+ vendor daemon, you can use HOST_GROUP to allow, deny or 
reserve licenses for multiple hosts. For example, to exclude all users logged in on the 
hosts `fred' and `barney' from using a feature called `f1' add these lines to your 
options file:<p>
<pre>HOST_GROUP writers fred barney</pre>
<pre>EXCLUDE f1 HOST_GROUP writers</pre>
</ol></ul><p>
See 
<a href="#54729: 2head: 5.2.7 Group">Section 5.2.3, `GROUP</a>' and 
<a href="#16409: 2Head: 6.2.2 HOST_GROUP">Section 5.2.4, `HOST_GROUP,' on page 37</a> for 
more information about defining groups.<p>
<h3>5.4.5	 <a name="_IX_113"></a>EXCLUDE Example</h3>
<pre>#First Define the group"painters"</pre>
<pre>GROUP painters picasso mondrian klee</pre>
<pre>EXCLUDE spell GROUP painters</pre>
<pre>EXCLUDE spell USER bob</pre>
<pre>EXCLUDE spell INTERNET 123.123.123.*</pre>
</ol></ul><p>
This options file would:<p>
<ul><li>Prevent the users `picasso,' `mondrian,' and `klee' from using the feature 
`spell' on any machine on the network.<li>Prevent the user `bob' from using the feature `spell' on any machine on the 
network.<li>Prevent any user logged into a host with an IP-Address in the range 
123.123.123.0 through 123.123.123.255 from using the feature `spell'<li>Allow any other user, as long as they are not on the excluded IP-Addresses, 
<I>and</I> 
they are not a member of the `painters' GROUP 
<I>and</I> they are not `bob' to use 
feature `spell' (By implication.)</ul><p>
Note that `bob' could have been added to the group painters. However, `painters' 
might be used for some other purpose in the future so the license administrator chose 
to handle `bob' as a special case here. In this case, the two EXCLUDE statements 
concatenate to create a list of four users. 
<p>
<h3>5.4.6	 <a name="_IX_114"></a>INCLUDE Example</h3>
<pre>INCLUDE paint USER picasso</pre>
<pre>INCLUDE paint USER mondrain</pre>
<pre>INCLUDE paint HOST bigbrush</pre>
</ol></ul><p>
This options file would:<p>
<ul><li>Allow the user `picasso' to use the feature `paint' on any machine on the 
network.<li>Allow the user `mondrain' to use the feature `paint' on any machine on the 
network.<li>Allow any user, as long as they are on the host `bigbrush', to use feature `paint'<li>Deny access to the feature `paint' to anyone except `picasso', `mondrain' or 
anyone from the host `bigbrush' (By implication.)</ul><a name="Chapter 6"></a><hr><h1>Chapter 6 <a name="78920: chap head: Chapter 6 License Administration Tools"></a>
License Administration Tools</h1>
<p>
FLEXlm<I></I> provides utilities for the license administrator to help manage the licensing 
activities on the network. These utilities are:<p>
<ul><li><I><a href="#28319: 2head: 11.2.1 lmborrow">lmcksum</a></I> (v2.4 or later) - prints license checksums. (<I><a href="#28319: 2head: 11.2.1 lmborrow">page 46</a></I>)<li><I><a href="#36648: 1head: 8.4 lmdiag">lmdiag</a></I> (v4.0 or later) - diagnoses license checkout problems. (<I><a href="#36648: 1head: 8.4 lmdiag">page 46</a></I>)<li><I><a href="#24678: 1Head: 7.3 lmdown">lmdown</a></I> - gracefully shuts down all license daemons (both 
lmgrd<I></I> and all vendor 
daemons) on the license server node (or on all three nodes in the case of 
redundant servers). (<I><a href="#24678: 1Head: 7.3 lmdown">page 47</a></I>)<li><I><a href="#14947: 1head: 6.1 lmgrd">lmgrd</a></I> - the main daemon program for 
FLEXlm<I></I>. (<I><a href="#14947: 1head: 6.1 lmgrd">page 48</a></I>)<li><I><a href="#77046: 1head: 6.7 lmhostid">lmhostid</a></I> - reports the hostid of a system. (<I><a href="#77046: 1head: 6.7 lmhostid">page 48</a></I>)<li><I>lminstall</I> - install a decimal format license. (<a href="#40007: 1Head: 6.6 lminstall">page 49</a>)<li><I><a href="#39835: 1Head: 7.6 lmremove">lmremove</a></I> - removes a single user's license for a specified feature. (<I><a href="#39835: 1Head: 7.6 lmremove">page 50</a></I>)<li><I><a href="#20570: 1Head: 7.7 lmreread">lmreread</a></I> - causes the license daemon to reread the license file and start any new 
vendor daemons. (<I><a href="#20570: 1Head: 7.7 lmreread">page 51</a></I>)<li><I><a href="#18622: 1Head: 7.8 lmstat">lmstat</a></I> - helps you monitor the status of all network licensing activities. (<I><a href="#18622: 1Head: 7.8 lmstat">page 51</a></I>)<li><I><a href="#10694: 1Head: 7.9 lmswitch">lmswitch</a></I> (VMS only) -switches the debug logfile. (<I><a href="#10694: 1Head: 7.9 lmswitch">page 52</a></I>)<li><I><a href="#18044: 1Head: 7.10 lmswitchr">lmswitchr</a></I> - switches the report log file. (<I><a href="#18044: 1Head: 7.10 lmswitchr">page 52</a></I>)<li><I><a href="#19215: 1Head: 7.11 lmver">lmver</a></I> - reports the 
FLEXlm<I></I> version of a library or binary file. (<I><a href="#19215: 1Head: 7.11 lmver">page 52</a></I>)</ul><p>
Beginning in 
FLEXlm<I></I> v2.4, all 
FLEXlm<I></I> utility programs (except 
lmgrd<I></I>) are packaged 
as a single executable called 
<I>lmutil</I>. lmutil can either be installed as the individual 
commands (either by creating links to the individual command names, or making 
copies of lmutil as the individual command names), or the commands can be run as 
`lmutil command', e.g. `lmutil lmstat', or `lmutil lmdown'. On Windows or 
Windows/NT systems, the `lmutil command_name' form of the commands are 
available. There is also a Windows version of these commands - see 
<a href="#29049: 1Head: 7.12 License Administration Toolsd1 LMUTIL for Windows">Section 6.12.1, 
`License Administration Tools - LMTOOLS for Windows,' on page 53</a>.<p>
<h4>Arguments valid for all lmutil utilities</h4>
<dl><dt>-c 
<I>license_file</I><dd>Most 
<I>lmutil</I> utilities need to know the path to the license 
file. This can be specified with a `-c 
<I>license_file</I>' argument, 
or by setting the LM_LICENSE_FILE environment 
variable. Otherwise, the default location is used. Version 7+ 
utilities also honor all 
<I>VENDOR</I>_LICENSE_FILE 
environment variables.<dt>-verbose<dd>Prints longer description for all errors found. The output 
from the utilities may be harder to read with this option, but 
is useful for diagnostics. (version 6+ only)</dl><h4>See Also</h4>
<ul><li><a href="#41901: 1HeadApp: C.1 How to set environment variables">Section C.1, `How to set environment variables,' on page 65</a></ul><a name="28319: 2head: 11.2.1 lmborrow"></a><a name="_IX_115"></a><a name="_IX_116"></a><a name="6.1"></a><h2>6.1  lmcksum</h2>
<p>
The 
<TT><a name="_IX_117"></a>lmcksum</TT> program (FLEXlm<I></I> v2.4 or later) will perform a checksum of a license 
file. This is useful to verify data entry errors at your location. 
<TT>lmcksum</TT> will print a line-by-line checksum for the file as well as an overall file checksum. 
<TT>lmcksum</TT> takes the `-k' switch to force the encryption key checksum to be case-sensitive. 
<p>
<p>
<TT>lmcksum</TT> will ignore all fields that do not enter into the encryption key computation; 
thus the server node name and port number, as well as the daemon pathname and 
options file names are not checksummed. In addition, 
<TT>lmcksum</TT> will treat non-case 
sensitive fields correctly (in general, 
<TT>lmcksum</TT> is not case-sensitive).<p>
<p>
<TT>lmcksum</TT> takes an optional daemon name; if specified, only license file lines for the 
selected daemon are used to compute the checksums.<p>
<p>
For FEATURE lines that contain 
<I>ck=nnn</I>, lmcksum prints simply OK or BAD.<p>
<p>
Usage is:<p>
<pre>lmcksum [-c <I>license_file</I>]</pre>
</ol></ul><p>
<p>
<dl><dt>-c 
<I>license_file</I><dd>path to the file to checksum. By default lmcksum uses 
`license.dat' in the current directory (unlike other 
<I>lmutil</I> 
commands).</dl><p>
Example output is:<p>
<pre>lmcksum - Copyright (C) 1989, 1997 GLOBEtrotter Software<I></I>, Inc.
lmcksum: using license file"/usr/local/flexlm/licenses/license.dat"

	189: SERVER speedy 08002b32b161 2837
	166: DAEMON xyzd C:\flexlmyzd.exe 
	  8: FEATURE f1 xyzd 1.000 01-jan-99 0 3B2BC33CE4E1B8F3A0BF""
OK:  	231: FEATURE f2 xyzd 1.0 01-jan-0 1 8B1C30015351B7737F5E \
		DUP_GROUP=HD ck=231
	109: (overall file checksum)</pre>
<a name="36648: 1head: 8.4 lmdiag"></a><a name="_IX_118"></a><a name="_IX_119"></a><a name="6.2"></a><h2>6.2  lmdiag</h2>
<p>
<TT>lmdiag</TT> (FLEXlm<I></I> v4.0 or later) allows 
	you to diagnose problems when you cannot 
check out a license.<p>
<p>
Usage is:<p>
<pre>lmdiag [-c <I>license_file</I>] [-n] [<I>feature</I>]</pre>
</ol></ul><p>
<p>
<dl><dt>-c 
<I>license_file</I><dd>path to the file to diagnose.<dt>-n 
<dd>run in non-interactive mode; 
<TT>lmdiag</TT> will not prompt for 
any input in this mode. In this mode, extended connection 
diagnostics are not available. 
<dt><I>feature</I><dd>diagnose this feature only. 
</dl><p>
If no 
<I>feature</I> is specified, 
<TT>lmdiag</TT> will operate on all features in the license file(s) 
in your path. 
<TT>lmdiag</TT> will first print information about the license, then attempt to 
check out each license. If the checkout succeeds, 
<TT>lmdiag</TT> will indicate this. If the 
checkout fails, 
<TT>lmdiag</TT> will give you the reason for the failure. If the checkout fails 
because 
<TT>lmdiag</TT> cannot connect to the license server, then you have the option of 
running `extended connection diagnostics'. 
<p>
<p>
These extended diagnostics attempt to connect to each port on the license server node, 
and can detect if the port number in the license file is incorrect. 
<TT>lmdiag</TT> will indicate 
each port number that is listening, and if it is an 
lmgrd<I></I> process, 
<TT>lmdiag</TT> will indicate 
this as well. If 
<TT>lmdiag</TT> finds the vendor daemon for the feature being tested, then it 
will indicate the correct port number for the license file to correct the problem. 
<p>
<p>
See Also: 
<a href="#33814: 1HeadApp: B.2 FLEXLM_DIAGNOSTICS">Appendix B, `FLEXLM_DIAGNOSTICS' on page 60</a>.<p>
<a name="24678: 1Head: 7.3 lmdown"></a><a name="_IX_120"></a><a name="6.3"></a><h2>6.3  lmdown</h2>
<p>
The 
<TT>lmdown</TT> utility allows for the graceful shutdown of all license daemons (both 
<a name="_IX_121"></a>lmgrd<I></I> and all vendor daemons) on all nodes. 
<p>
<p>
Usage is:<p>
<pre><TT>lmdown [-c </TT><I>license_file</I><TT>] [-vendor </TT><TT>name</TT><TT>] [-q] [-all]</TT></pre>
</ol></ul><p>
<p>
<dl><dt>-c 
<I>license_file</I><dd>Use the specified license file.<dt>-vendor 
<I>name</I><dd>Only shutdown this one vendor daemon. 
<TT><a name="_IX_122"></a>lmgrd</TT> will 
always continue running if this option is specified. 
Requires v6.0 
<TT>lmdown</TT> and 
<TT>lmgrd</TT> (the vendor daemon 
can be any version).<dt>-q<dd>Don't prompt or print a header. Otherwise 
<TT>lmdown</TT> asks 
`Are you sure? [y/n]: `.<dt>-all<dd>If multiple servers are specified, automatically shuts down 
all of them. Otherwise, only 1 is shutdown. [v7+]</dl><p>
You may want to protect the execution of<B> 
</B><TT>lmdown</TT>, since shutting down the servers 
causes users to lose their licenses. See the `<TT>-p</TT>' or the `-x' options in 
<a href="#14947: 1head: 6.1 lmgrd">Section 6.4, 
`lmgrd,' on page 48</a> for details about securing access to 
<TT>lmdown</TT>.<p>
<p>
If lmdown encounters more than one server (for example if -c specifies a directory with 
many *.lic files) a choice of servers to shutdown is presented.<p>
<p>
To stop and restart a single 
<a name="_IX_123"></a>vendor daemon, use<TT> lmdown -vendor 
</TT><TT>name</TT>, then use 
<TT>lmreread -vendor 
</TT><TT>name</TT>, which restarts the vendor daemon.<p>
<p>
When shutting down redundant servers, there is a one-minute delay before the servers 
shut down. Do 
<B>not</B> use `kill -9' to shut down the license servers.<p>
<p>
See Also: 
<a href="#20570: 1Head: 7.7 lmreread">Section 6.8, `lmreread,' on page 51</a>.<p>
<a name="14947: 1head: 6.1 lmgrd"></a><a name="_IX_124"></a><a name="6.4"></a><h2>6.4  lmgrd<I></I></h2>
<p>
<TT>lmgrd</TT><I></I><TT></TT> is the main daemon program for 
FLEXlm<I></I>. When you invoke 
lmgrd<I></I>, it looks for 
the license file which contains the information about vendors and features. On Unix 
systems, it is strongly recommended that 
<a name="_IX_125"></a>lmgrd be run as a non-privileged user (not 
<I>root</I>).<p>
<p>
Usage is:<p>
<pre>lmgrd<I></I>	[ -c <I>license_file</I> ] [ -l <I>logfile </I>] [ -s <I>timestamp_interval</I> ] 
	[ -2 -p ] [ -x lmdown ] [ -x lmremove ] [ -z ] [ -v ]</pre>
</ol></ul><p>
<p>
<dl><dt>-c 
<I>license_file</I><dd>Use the license file named.<dt>-l 
<I>logfile</I><dd>Write the debug log to 
<I>logfile</I>.<dt> -s 
<I>timestamp_interval</I><dd>Specifies the logfile timestamp interval, in minutes. The 
default is 360 minutes.<dt>-2 -p<dd>Restricts usage of 
<TT>lmdown</TT>, 
<TT>lmreread</TT>, and 
<TT>lmremove 
</TT>to a 
FLEXlm<I></I> administrator who is by default root. If there 
a 
<I>Unix</I> group called `lmadmin' then use is restricted to 
only members of that group. If root is not a member of this 
group, then root does not have permission to use any of the 
above utilities. The `<TT>-p</TT>' option is available in 
FLEXlm<I></I> 
v2.4 and later. Windows clients are unaffected by this 
restriction.<dt>-x lmdown<dd>Disallow the lmdown command (no user can run lmdown). 
If lmdown is disabled, you will need to stop lmgrd via 
`<TT>kill 
</TT><I>pid</I>' (Unix) or CTRL-ALT-DEL and stop the 
lmgrd and vendor daemon processes (Windows 95). On 
Unix, be sure the kill command does not have a -9 
argument. v4+ lmgrd<dt>-x lmremove<dd>Disallow the lmremove command (no user can run 
lmremove). v4+ lmgrd.<dt>-z<dd>Run in foreground. The default behavior is to run in the 
background. Windows: pre-v7, lmgrd always runs in the 
foreground. In v7+, lmgrd runs in the background by 
default. If -l logfile is present, then no windows are used, 
but if no -l argument specified, separate windows are used 
for lmgrd and each vendor daemon.<dt>-v<dd>Prints 
lmgrd<I></I>'s version number and copyright and exits.</dl><p>
Pre-v6 lmgrd on Windows required `-app' argument when not run as a service.<p>
<a name="77046: 1head: 6.7 lmhostid"></a><a name="_IX_126"></a><a name="6.5"></a><h2>6.5  lmhostid</h2>
<p>
The 
<TT>lmhostid</TT> utility reports the hostid of a system.<p>
<p>
Usage is:<p>
<pre><TT>lmhostid [-n]</TT></pre>
<pre>	[-vsn] [-flexid]				<I>Windows</I></pre>
<pre>	[-ether]				<I>HP</I></pre>
</ol></ul><p>
The output of this command looks as follows:<p>
<pre><TT>lmhostid - Copyright (c) 1989, 1997 Globetrotter Software, Inc.
The </TT>FLEXlm<I></I><TT> hostid of this machine is"69021c89"</TT></pre>
</ol></ul><p>
With the `-n' argument, no header is printed; only the hostid. 
<p>
<p>
On Windows and HP, optional hostids are available<p>
<p>
<p>
<dl><dt>-vsn<dd>Volume Serial Number of the C: drive<dt>-flexid<dd>Globetrotter dongle-based hostids<dt>-ether<dd>Ethernet hostid. On HP, the default hostid is the true system 
hostid, and is recommended, but, partly for historic 
reasons, the ethernet address is also available as a hostid.</dl><p>
See 
<a href="#24240: 1HeadApp: A.1 Hostid Table">A.1, `Hostids for FLEXlm-Supported Machines'</a>.<p>
<a name="40007: 1Head: 6.6 lminstall"></a><a name="_IX_127"></a><a name="6.6"></a><h2>6.6  lminstall</h2>
<p>
Introduced in v6.0, 
lminstall is designed primarily for typing in 
<a name="_IX_128"></a>decimal format 
licenses to generate a readable format license file.<p>
<p>
Usage is:<p>
<pre>	lminstall [-i {<I>infile</I> | -}] [-o <I>outfile</I>] \
		[-overfmt {2 | 3 | 4 | 5 | 5.1 | 6}] [-odecimal]</pre>
</ol></ul><p>
Normally, lminstall is used with no arguments; you are prompted for the name of the 
output license file. The default name is today's date in 
<I>yyyyddmm</I>.lic format. The file 
should be moved to the application's default license file directory, if specified by the 
software vendor. Otherwise, use LM_LICENSE_FILE or 
<I>VENDOR</I>_LICENSE_FILE 
to specify the directory where the *.lic files are located.<p>
<p>
Decimal format input is verified by checksum of each line.<p>
<p>
To finish entering, type `q' on a line by itself, or enter 2 blank lines.<p>
<p>
If 
<I>infile</I> is a dash ('-'), it takes input from stdin.When '-i' is used, default output is 
stdout; otherwise if -o is not specified, lminstall prompts the user for an output file 
name.<p>
<h4>lminstall As A Conversion Tool:</h4>
<p>
lminstall can alternatively be used to convert licenses between decimal and readable 
format, and between different versions of 
FLEXlm<I></I> license formats.<p>
<p>
To convert from readable to decimal:<p>
<pre>	% lminstall -i infile -o outfile -odecimal</pre>
</ol></ul><p>
To convert to 
FLEXlm<I></I> Version 2 format:<p>
<pre>	% lminstall -i infile -o outfile -verfmt 2</pre>
</ol></ul><p>
Conversion errors are reported as necessary. lminstall has a limit of 1000 lines of input.<p>
<a name="39835: 1Head: 7.6 lmremove"></a><a name="_IX_129"></a><a name="6.7"></a><h2>6.7  lmremove</h2>
<p>
The 
<TT>lmremove</TT> utility allows you to remove a single user's license for a specified 
feature. This is only needed when a client node crashes, since that's the only condition 
where a license is not automatically freed. If the application is active, it will re-checkout the license after it is freed by lmremove.<p>
<p>
Usage is:<p>
<pre>lmremove [ -c <I>file</I> ] <I>feature</I> <I>user</I> <I>host</I> <I>display</I></pre>
<pre>	or</pre>
<pre>lmremove [ -c file ] -h <I>feature host port handle</I></pre>
</ol></ul><p>
<p>
<dl><dt>-c 
<I>license_file</I><dd>license file<dt><I>feature</I><dd>name of the feature checked out by the user.<dt><I>user</I><dd>name of the user whose license you are removing (from 
lmstat -a).<dt><I>host</I><dd>name of the host the user is logged in to (from lmstat -a).<dt><I>display</I><dd>name of the display where the user is working (from lmstat 
-a).<dt><I>port</I><dd>port, as reported by lmstat -a<dt><I>handle</I><dd>handle, as reported by lmstat -a</dl><p>
The 
<I>user host display port and handle 
</I>information must be obtained from the output 
of 
<TT>lmstat -a</TT>.<p>
<p>
<I>lmremove</I> removes all instances of 
<I>user</I> on 
<I>host</I> on 
<I>display</I> from usage of 
<I>feature</I>. If the 
optional `-c 
<I>file</I>' is specified, the indicated file is used as the license file.You should 
protect the execution of 
<TT>lmremove</TT><B>, 
</B>since removing a user's license can be disruptive. 
See the `<TT>-p</TT>' or the `-x' options in 
<a href="#14947: 1head: 6.1 lmgrd">Section 6.4, `lmgrd,' on page 48</a> for details about 
securing access to 
<TT>lmremove</TT>.<p>
<p>
The 
<TT>-h</TT> variation uses the serverhost, port, and license handle, as reported by 
<TT>lmstat -a</TT>. Consider this example 
<TT>lmstat 
-a</TT> output:<p>
<pre>joe cloud7 /dev/ttyp5 (v1.000) (cloud9/7654 102), start Fri 10/29 18:40</pre>
</ol></ul><p>
In this example, the serverhost is `cloud9', the port is `7654' and the license handle is 
102. To remove this license, issue the following command:<p>
<pre>lmremove -h f1 cloud9 7654 102</pre>
</ol></ul><p>
or<p>
<pre>lmremove f1 joe cloud7 /dev/ttyp5</pre>
</ol></ul><p>
When removing by handle, if licenses are grouped as duplicates, all duplicate licenses 
will also be removed.<p>
<a name="20570: 1Head: 7.7 lmreread"></a><a name="_IX_130"></a><a name="6.8"></a><h2>6.8  lmreread</h2>
<p>
The<B> 
</B><TT>lmreread</TT> utility causes the license daemon to reread the 
<a name="_IX_131"></a>license file and start 
any new 
<a name="_IX_132"></a>vendor daemons that have been added. In addition, all running daemons will 
be signaled to reread the license file for changes in feature licensing information. 
Version 7+ vendor daemons will also reread the options file.<p>
<p>
Usage is:<p>
<pre>lmreread [-c <I>license_file</I>] [-vendor <I>name</I>] [-all]</pre>
</ol></ul><p>
<p>
<dl><dt>-c 
<I>license_file</I><dd>Use the specified license file.<dt>-vendor 
<I>name</I><dd>Only this one vendor daemon should reread the license file. 
<a name="_IX_133"></a>lmgrd will restart the vendor daemon if necessary. Requires 
v6+ lmreread and lmgrd (the vendor daemon can be any 
version).<dt>-all<dd>If more than one lmgrd is specified, instructs all lmgrds to 
reread. [v7+]</dl><p>
The license administrator may want to protect the execution of 
<TT>lmreread</TT>. See the `<TT>-p</TT>' and `-x' 
<a name="_IX_134"></a>options in 
<a href="#14947: 1head: 6.1 lmgrd">Section 6.4, `lmgrd,' on page 48</a> for details about securing 
access to 
<TT>lmreread</TT>.<p>
<p>
To stop and restart a single vendor daemon, use 
<TT>lmdown</TT> -vendor 
<I>name</I>, then use 
<TT>lmreread</TT> -vendor 
<I>name</I>, which restarts the vendor daemon.<p>
<p>
If you use the `<TT>-c</TT>' option, the license file specified will be read by 
<TT>lmreread</TT>, not 
by 
lmgrd<I></I>; 
lmgrd<I></I> rereads the file it read originally. Also, 
<TT>lmreread</TT> cannot be used to 
change server node names or port numbers. 
<p>
<p>
Vendor daemons older than version 7 will not reread their option files as a result of 
<TT>lmreread</TT>.<p>
<a name="18622: 1Head: 7.8 lmstat"></a><a name="_IX_135"></a><a name="6.9"></a><h2>6.9  lmstat</h2>
<p>
The 
<TT>lmstat</TT> utility helps you monitor the status of all network licensing activities.<p>
<p>
Usage is:<p>
<pre>lmstat 	[-a] [ -A ] [-c <I>license_file</I>] [-f <I>feature</I>] [-i <I>[feature]]
</I>	[-S <I>vendor</I>] [-s <I>hostname</I>] [-t <I>value</I>]</pre>
</ol></ul><p>
<p>
<dl><dt>-a<dd>Display all information<dt>-A<dd>List all active licenses<dt>-c 
<I>license_file</I><dd>Use the license file named. 
<dt>-f 
<I>feature_name</I><dd><a name="_IX_136"></a>List users of 
<I>feature_name</I>.<dt>-i [<I>feature_name</I>]<dd>Print information about the named 
<I>feature</I>, or all 
features if no 
<I>feature_name</I> is given. This option is usually 
not recommended, since the information does not come 
from the license server, and may not reflect what the server 
actually supports.<dt>-S [<I>vendor</I>]<dd>List all users of 
<I>vendor</I>'s features.<dt>-s 
<I>hostname</I><dd>Display status of clients running on 
<I>hostname</I>.<dt>-t 
<I>value</I><dd>Set 
<TT>lmstat</TT> timeout to `value'.</dl><a name="18044: 1Head: 7.10 lmswitchr"></a><a name="_IX_137"></a><a name="6.10"></a><h2>6.10  lmswitchr</h2>
<p>
The<B> 
</B><TT>lmswitchr</TT> utility switches the report writer (REPORTLOG) log file. It will also 
start a new REPORTLOG file if one does not already exist.<p>
<p>
Usage is:<p>
<pre>lmswitchr [-c license_file] <I>feature new-file
</I>lmswitchr [-c license_file] <I>vendor</I> <I>new-file</I> [v5.0+ <a name="_IX_138"></a>vendor daemon only]</pre>
</ol></ul><p>
<p>
<dl><dt>-c<dd>license file path<dt><I>feature</I><dd>any feature this daemon supports<dt><I>new-file</I><dd>new file path</dl><p>
lmswitchr does not work with 
FLEXlm<I></I> v3.0 vendor daemons. Ask your vendor for a 
later version of their vendor daemon.<p>
<a name="19215: 1Head: 7.11 lmver"></a><a name="_IX_139"></a><a name="6.11"></a><h2>6.11  lmver</h2>
<p>
The 
<TT>lmver</TT> utility reports the 
FLEXlm<I></I> version of a library or binary file.<p>
<p>
Usage is:<p>
<pre><TT>lmver </TT><I>filename</I></pre>
</ol></ul><p>
<p>
<dl><dt><I>filename</I><dd> name of the executable of the product. 
</dl><p>
For example if you have an application called `spell' type:<p>
<pre>	% lmver spell</pre>
</ol></ul><p>
Alternatively, on Unix systems, you can use the following commands to get the 
FLEXlm<I></I> version of a binary:<p>
<pre>	strings <I>file</I> | grep Copy</pre>
<a name="_IX_140"></a><a name="6.12"></a><h2>6.12  License Administration Tools for Windows</h2>
<h3>6.12.1	 <a name="29049: 1Head: 7.12 License Administration Toolsd1 LMUTIL for Windows"></a>License Administration Tools - <a name="_IX_141"></a>LMTOOLS for Windows</h3>
<p>
For the 32 Bit Windows Platforms, an 
LMTOOLS.EXE Windows program is 
provided. It has the same functionality as listed in the previous sections but is 
graphically-oriented. Simply run the program and choose a button for the functionality 
required. Refer to the previous sections for information about the options of each 
feature. The command line interface is replaced by pop-up dialogs that can be filled 
out. The central EDIT field is where the license file path is placed. This will be used 
for all other functions and replaces the `-c 
<I>license_file</I>' argument in lmutil.<p>
<p>
The HOSTID button displays the hostid's for the computer on which the program is 
running. The TIME button prints out the system's internal time settings, intended to 
diagnose any time zone problems. The TCP Settings button is intended to fix a bug in 
the Microsoft TCP protocol stack which has a symptom of very slow connections to 
computers. After pressing this button, the system will need to be rebooted for the 
settings to become effective.<p>
<h3>6.12.2	 <a name="12312: 2Head: 6.12.2 The FLEXlm Control Panel"></a>The 
FLEXlm<I></I> 
<a name="_IX_142"></a>Control Panel</h3>
<p>
The 
FLEXlm<I></I> control panel, FLEXLM.CPL, is an applet that installs into the Control 
Panel of Windows and is used to control the execution of the 
FLEXlm<I></I> license manager. 
If the software you are installing includes the Control Panel, it will be installed in your 
Windows System Directory.<p>
<p>
The library LMGR325B.DLL needs to be available for FLEXLM.CPL. In this 
example it is placed in the same directory, but it could be placed anywhere in the 
system search path.<p>
<h3>6.12.3	 <a name="28088: 1Head: 9.6 Controlling LMGRD with the Windows Control Panel"></a>Controlling 
<a name="_IX_143"></a>lmgrd with the Windows Control Panel</h3>
<p>
lmgrd.exe can be run manually or using the Control Panel. 
FLEXlm<I></I> for Windows 
comes with a Control Panel applet for controlling lmgrd.exe without using the DOS 
prompt.<p>
<h3>6.12.4	 Using The Control Panel on 
<a name="_IX_144"></a>NT</h3>
<p>
To start the 
FLEXlm<I></I> Control Panel, open the Control Panel and double-click on the 
FLEXlm<I></I> License Manager icon<B><img src="2.0 internal inset">.</B><p>
<p>
From the Control tab you can start, stop, and check the status of your license server. 
Select the Setup tab to enter information about your license server.<img src="2.0 internal inset"><p>
<p>
The Service Name of `FLEXlm<I></I> License Manager' is the default (for backwards 
compatibility). You should change this to a name that your vendor recommends. 
Complete the form to configure 
<I>lmgrd</I> to serve licenses.<p>
<p>
The information you enter is stored in the registry under the service name you created:<p>
<pre>HKEY_LOCAL_MACHINE\SOFTWARE\FLEXlm License Manager\<B>Se</B><B>rvice-Name</B><I>\..</I>.</pre>
</ol></ul><p>
Select the 
<I>Control</I> tab and click the 
<I>Start</I> button to turn on your license server. 
lmgrd.exe will be launched as a background application with the license file and debug 
log file locations passed as parameters.<p>
<p>
If you want lmgrd.exe to start automatically, select the `Use NT Services' box and 
lmgrd.exe will be installed as an NT service. You can then use the NT's Services 
control panel to adjust the start/stop behavior of lmgrd.exe. Since NT services do not 
have command line parameters, lmgrd.exe, when started as a service, locates its service 
name under `FLEXlm<I></I> License Manager' in the registry and from there recovers the 
license file and log file locations. Multiple instances of lmgrd.exe can be run as 
services provided each occurrence has a different service name.<p>
<p>
You can switch back and forth between different instances of lmgrd.exe by using the 
<I>Setup</I> tab and changing the selection in `Service Name'. This is only necessary if you 
have more than one product licensed with 
FLEXlm<I></I>.<p>
<p>
The remaining tabs in the control panel allow you a subset of control similar to the 
LMUTIL.EXE program. The Licenses tab provides information about the license file 
and the Advanced tab allows you to perform diagnostics and check versions.<p>
<h3>6.12.5	 Using the 
<a name="_IX_145"></a>Control Panel on 
<a name="_IX_146"></a>Windows 95</h3>
<p>
The behavior of the control panel applet FLEXLM.CPL is almost identical under 
Windows 95 and NT. FLEXLM.CPL is located in the Windows\System directory. If 
you are starting lmgrd.exe manually from the 
<I>Control</I> tab, there is no difference 
between the two. But, since services are not available on Windows 95, the 
<I>Use NT 
Service</I> check box is not available.   Instead a 
<I>Start Server at Power-UP</I> check box 
gives you the option to start the server when the system is booted.<p>
<p>
On Windows 95, 
FLEXlm<I></I> makes use of a registry feature that launches programs 
automatically. The `Microsoft\Windows\CurrentVersion\RunServices' registry is 
used to launch the program LMGRD95.EXE at power-on. This program scans the 
`FLEXlm<I></I> License Manager' area of the registry and launches an instance of lmgrd.exe 
for each service-name it finds.<p>
<p>
If someone switches users (i.e. selects `shutdown' and chooses `close all programs 
and log on as a different user') on Windows 95, all instances of lmgrd.exe will be 
terminated (see Microsoft documentation). This is one of the reasons we do not 
recommend using Windows 95 as a license server.<p>
<a name="Appendix A"></a><hr><h1>Appendix A  <a name="88781: AppTitle1: Appendix A Hostids for FLEXlm-Supported Machines"></a>
Hostids for FLEXlm<I></I>-Supported Machines</h1>
<p>
FLEXlm<I></I> uses different machine identifications for different machine architectures. For 
example, all Sun Microsystems, Inc. machines have a unique 
<a name="_IX_147"></a>hostid, whereas all DEC 
machines do not. For this reason, the ethernet address is used on some machine 
architectures as the `hostid'. An ethernet address is a 6-byte quantity, with each byte 
specified as two hexadecimal digits. Specify all 12 hex digits when using an ethernet 
address as a hostid. For example, if the ethernet address is 8:0:20:0:5:ac, you would 
specify `0800200005ac' as the hostid.<p>
<p>
The program 
<TT>lmhostid</TT> will print the exact hostid that 
FLEXlm<I></I> expects to use on any 
given machine. The following table lists alternate methods to obtain the required hostid 
for each machine architecture<p>
<p>
Numeric, 32-bit hostids are normally used in hexadecimal format. On some systems, 
including HP and SGI, the system command returns the number in decimal format. 
Since v3.0 of 
FLEXlm<I></I>, a '#' before the hostid, indicates to 
FLEXlm<I></I> that this is a 
decimal number. For example, if the HP uname -i command returns `2005771344', 
FLEXlm<I></I> will accept `#2005771344'. Or it can be converted to hexadecimal. On Unix 
system, you can convert to hex with the following script:<p>
<pre>% echo 2005771344 16o p | dc</pre>
<pre>778DA450</pre>
<a name="24240: 1HeadApp: A.1 Hostid Table"></a><a name="A.1"></a><h2>A.1  Hostid Table</h2>

<table border>

<tr><td align=left>AIX (RS/6000, 
PPC)<td align=left>32-bit hostid<td align=left><TT>uname -m</TT> (returns 
000276513100), then 
remove last 2 digits, and use 
remaining last 8 digits<td align=left>02765131
<tr><td align=left>DEC Alpha<td align=left>ethernet 
address<td align=left><TT>netstat -i</TT><td align=left> 080020005532
<tr><td align=left>HP<td align=left>32-bit hostid<td align=left><TT>uname -i 
</TT>and convert to 
hex, or prepend with #<td align=left>778DA450 or 
#2005771344
<tr><td align=left><td align=left>ethernet 
address 
<td align=left><TT>lanscan 
</TT>(station address 
without leading `0x')<td align=left>0000F0050185
<tr><td align=left>Linux<td align=left>ethernet 
address<td align=left><TT>/sbin/ifconfig eth0 
</TT>and remove colons from 
HWaddr 00:40:05:16:E5:25<td align=left>00400516E525
<tr><td align=left>SCO<td align=left>Hostid String<td align=left><TT>uname -x 
</TT>(Serial is 
SCO00354), then prefix 
with `ID_STRING='<td align=left>ID_STRING=SCO00354
<tr><td align=left>SGI<td align=left>32-bit hostid<td align=left><TT>/etc/sysinfo -s</TT>, 
convert to hex, or prefix '#'<td align=left>69064C3C or 
#1762020412
<tr><td align=left>SUN<td align=left>32-bit hostid<td align=left><TT>hostid</TT><td align=left>170a3472
<tr><td align=left>VAX/VMSAlpha/OpenVMS<td align=left>ethernet 
address<td align=left><TT>ncp</TT><td align=left>0800200055327
<tr><td align=left>Windows<td align=left>ethernet<td align=left>lmutil lmhostid<td align=left>0800200055327
<tr><td align=left><td align=left>Disk serial 
number<td align=left>DIR C: (look for `Volume 
Serial Number is', and 
remove `-')<td align=left>DISK_SERIAL_NUM=
1CA25283
<tr><td align=left><td align=left>Dongle - parallel port 
hardware key<td align=left>lmhostid -flexid<td align=left>FLEXID=72850003
</table>
<a name="Appendix B"></a><hr><h1>Appendix B  <a name="23527: apphead: Appendix B"></a>
<a name="_IX_148"></a>Troubleshooting Guide</h1>
<p>
This appendix documents areas of 
FLEXlm<I></I> that have given customers difficulty in the 
past. We hope it helps you debug any problems you might experience at your site.<p>
<a name="11869: 1HeadApp: B.1 General Debugging Hints"></a><a name="B.1"></a><h2>B.1  General Debugging Hints</h2>
<p>
The following are tips for debugging:<p>
<ul><li>When you start the license server (lmgrd<I></I>) be sure that you direct the output into 
a log file where you can examine it. The log file often contains useful 
information. You should examine it when you have a problem, and be prepared 
to answer questions about it when you talk to a support person.<li>If the license server appears to have started correctly (which you should be able 
to determine from the log file), try running 
<TT><a name="_IX_149"></a>lmstat -a</TT> and 
<TT><a name="_IX_150"></a>lmdiag</TT> to see if 
that program has the same problem as your application.<li>If your application is 
FLEXlm<I></I> v4.1 or later (v5 or later on Windows), you can use 
the FLEXLM_DIAGNOSTICS environment variable. Set 
FLEXLM_DIAGNOSTICS to 1 or 2. (2 gives more information than 1, in 
particular, the feature name that was denied.)</ul><p>
When you talk to a support person, you should be prepared to answer the following 
questions:<p>
<ul><li>What kind of machine is your license server running on? What version of the 
operating system? What machine and operating system is the application running 
on?<li>What version of 
FLEXlm<I></I> does the program use? Use the 
<TT>lmver</TT> script, or, on 
Unix, execute the following command on your 
lmgrd<I></I>, vendor daemon, and 
application</ul><pre><TT>	strings </TT><TT>program</TT><TT> | grep Copy</TT></pre>
Alternatively, 
<I>lmgrd -v</I> gives the lmgrd version, and this works with the vendor 
daemon also.<ul><li>What error or warning messages appear in the log file? Did the server start 
correctly? Look for a message such as: 
</ul><pre><TT>	server xyz started for: feature1 feature2</TT>.</pre>
<ul><li>What is the output from running 
<TT>lmstat -a</TT>?<li>Are you running other products which are also licensed by 
FLEXlm<I></I>? Are you 
using a combined license file or separate license files?<li>Are you using redundant servers (multiple SERVER lines in your license file)?</ul><a name="_IX_151"></a><a name="33814: 1HeadApp: B.2 FLEXLM_DIAGNOSTICS"></a><a name="B.2"></a><h2>B.2  FLEXLM_DIAGNOSTICS</h2>
<p>
Available only with applications using 
FLEXlm<I></I> v4.1 or higher for Unix, and v5.0 or 
higher with Windows. Also, applications may choose not to provide this functionality.<p>
<p>
FLEXLM_DIAGNOSTICS is an environment variable that will cause the application 
to produce diagnostic information when a checkout is denied. The format of the 
diagnostic information may change over time.<p>
<p>
To set FLEXLM_DIAGNOSTICS, on Unix:<p>
<pre>(csh): % setenv FLEXLM_DIAGNOSTICS 1</pre>
<pre>(sh): $ FLEXLM_DIAGNOSTICS=1; export FLEXLM_DIAGNOSTICS</pre>
</ol></ul><p>
On Windows 3.1 and 95, add the following line to C:\autoexec.bat:<p>
<pre>SET FLEXLM_DIAGNOSTICS=1</pre>
</ol></ul><p>
On NT, use the System Control Panel applet to change the global environment, adding 

FLEXLM_DIAGNOSTICS to 1.<p>
<p>
On Unix, the diagnostic output goes to 
<I>stderr</I>.<p>
<p>
On Windows, if the application is v5.11 or higher, the output is a file in the current 
directory called 
<TT>flex</TT><I>nnn</I><TT>.log</TT>, where 
<I>nnn</I> is the application's process ID. If the 
application is v5.0, the output file is called 
<TT>flex_err.log</TT>.<p>
<h3>B.2.1	 Level 1 Content</h3>
<p>
If FLEXLM_DIAGNOSTICS is set to 1, then the standard 
FLEXlm<I></I> error message will 
be presented, plus a complete list of license files that the application tried to use. For 
example:<p>
<pre>% setenv FLEXLM_DIAGNOSTICS 1
FLEXlm checkout error: Cannot find license file (-1,73:2) No such file or directory
license file(s):  /usr/myproduct/licenses/testing.dat license.dat</pre>
<h3>B.2.2	 Level 2 Content</h3>
<p>
If FLEXLM_DIAGNOSTICS is set to 2, then, in addition to level 1 output, the 
checkout arguments are presented. For example:<p>
<pre>% setenv FLEXLM_DIAGNOSTICS 2
FLEXlm checkout error: No such feature exists (-5,116:2) No such file or directory
license file(s):  /usr/myproduct/licenses/testing.dat license.dat
lm_checkout("f1", 1.0, 1, 0x0, ..., 0x4000)</pre>
</ol></ul><p>
Note that the error message actually contains 2 separate problems, which both occurred 
during the checkout: there's no such feature in the license it did find, and it was unable 
to find the other license file, which is what produces the message `No such file or 
directory'.<p>
<p>
Following is a description of the arguments to 
<I>lm_checkout()</I><p>
<pre>lm_checkout(<I>feature_name</I>, <I>version</I>, <I>nlic</I>, <I>queue_flag</I>, ..., <I>dupgroup_mask</I>)</pre>
</ol></ul><p>
<p>
<dl><dt><I>feature_name</I><dd>the requested feature<dt><I>version</I><dd>requested version. The license file must contain a version 
&gt;= the requested version.<dt><I>nlic</I><dd>number of licenses requested. Usually 1.<dt><I>queue_flag</I><dd>If 0, no queueing
If 1, queue for license (`blocking' queue)
If 2, queue for licenses, but return to application (`non-blocking' queue)<dt><I>dupgroup_mask</I><dd>Indicates duplicate grouping, also called license sharing. 
User, host and display are as shown by lmstat -a.</dl><h3>B.2.3	 Level 3 Content (FLEXlm<I></I> v6+ only)</h3>
<p>
If FLEXLM_DIAGNOSTICS is set to 3, then, in addition to level 1 and 2 output, if a 
checkout is successful, information is printed explaining how the license was granted:<p>
<pre>% setenv FLEXLM_DIAGNOSTICS 3
% application
Checkout succeeded: f0/14263EAEA8E0
License file: ./servtest.lic
No server used
% application2
Checkout succeeded: f1/BC64A7B120AE
License file: @localhost
License Server: @localhost
% application3
Checkout succeeded: f1/BC64A7B120AE
License file: servtest.lic
License Server: @speedy</pre>
</ol></ul><p>
Note that the feature name and license key are printed, along with the license file 
location (or hostname if @host were used) and hostname of the server, where 
applicable.<p>
<a name="_IX_152"></a><a name="B.3"></a><h2>B.3  FLEXlm<I></I> Troubleshooting List</h2>
<h3>B.3.1	 Problem Description Format</h3>
<p>
Each problem is presented in three parts:<p>
<p>
A description of the problem.<p>
<p>
A discussion of what causes the problem described in the `Symptom' 
section.<p>
<p>
 Instructions on how to solve the problem.<p>
<p>
You can scan through the list of problems to find any which appear to relate to your 
concerns. In order to solve your problem, you may have to use all or some of the 
solutions listed here.<p>
<h3>B.3.2	 Hostid Problems</h3>
<p>
When I run the license manager on my machine, it tells me it 

is the wrong hostid.<p>
<p>
The vendor daemon checks the hostid listed on the SERVER line in the 
license file; if it does not match the hostid of the machine it is running on, 
this message will be printed. Possible causes include 1) you are trying to 
run the license server on a different machine from the machine the file 
was made for; 2) the hostid of the machine you are running on changed 
(for example, the dongle hostid was moved (Windows), or the CPU 
board was replaced); 3) the hostid in the license file was modified.<p>
<p>
Verify that the hostid of the machine on which the vendor daemon (or 
node locked client program) is being run matches the hostid specified in 
the license file (on the SERVER line for the vendor, or on the FEATURE 
line for a node locked client). You can run the 
<TT>lmhostid</TT> program to 
see what 
FLEXlm<I></I> thinks the hostid is. You may not modify the hostid in 
the license file. If the hostid of your server machine changes, you will 
have to get a new license file from your software vendor.<p>
<h3>B.3.3	 Connection Problems</h3>
<p>
The application program (or 
<I>lmstat</I>) can't connect to the server to check 
out a license.<p>
<p>
The 
FLEXlm<I></I> routines in the application are unable to make a TCP 
connection to the server and port specified in the license file. Possible 
reasons for this are: 1) the wrong license file is being referenced by the 
application program; 2) the server machine specified in the license file is 
down; 3) the vendor daemon specified in the license file is not running; 
4) the hostname in the license file is not recognized by the system; 5) the 
network between the client machine and the server machine is down; 6) 
You are mixing 
FLEXlm<I></I> v1.5 (or earlier) and v2.1 (or later) vendor 
daemons in one license file, and have run 
lmgrd<I></I> without the -b command 
line option; 7) TCP is not running on your machine.<p>
<p>
The 
<a name="_IX_153"></a><a name="_IX_154"></a>lmdiag utility is designed primarily to debug this problem, so first, 
try lmdiag. Verify that the application is using the proper license file. 
Verify that specified server machine is up and reachable by executing 
another command that uses TCP, such as 
<TT>telnet</TT>, from the client to the 
server. Verify that the vendor daemon is running (you can use 
<TT>ps</TT> on the 
server to look for it). Examine the license log file to see if any problems 
are reported, particularly messages indicating that the vendor daemon 
has quit. Run 
<TT>lmstat -a</TT> from the server machine to verify that the 
vendor daemon is alive. Run 
<TT>lmstat -a</TT> from the client machine to 
verify the connection from client to vendor daemon across the network. 
Try using 
<TT>telnet &lt;hostname&gt; &lt;portnum&gt;</TT> where 
<TT>hostname</TT> 
and 
<TT>portnum</TT> are the same as on the SERVER line in your license file.<p>
<a name="B.4"></a><h2>B.4  Other Client Problems</h2>
<p>
When I run my application program (or vendor daemon), I get the error 
<TT>bad code</TT> or 
<TT>inconsistent encryption code</TT>. 
<p>
<p>
Possible causes for this are 1) the license file was modified (either the 
hostid on a SERVER line or anything on the FEATURE line was 
changed); 2) the vendor used the wrong version of his license creation 
program to generate your license file (or there is a bug in that process).<p>
<p>
You may not modify the license file (except for specific fields, see 
<a href="#31549: chap head: Chapter 1">Chapter 2, `The License File' on page 9</a>). If you need to change 
something in your license file, you must get a new license file from your 
software vendor.<p>
<p>
When the second user tries to check out a license, the vendor daemon 
prints an error concerning 
<TT>Parameter mismatch</TT> in the log file and 
refuses the license.<p>
<p>
The most likely cause of this problem is that you are simultaneously 
trying to run two different versions of the application program, and the 
software vendor has not specifically set up the new version for this kind 
of compatibility. Check the license server log file for a 
<TT>comm version 
mismatch</TT> warning message; this indicates that someone is running an 
older client than the license server daemon, 
lmgrd<I></I>.<p>
<p>
Run only the new version of the application (or only the old version).<p>
<a name="B.5"></a><h2>B.5  Other Server Problems</h2>
<p>
When I run the vendor daemon on my VMS system, I get the error 
message 
<TT>socket bind: permission denied (13)</TT>.<p>
<p>
The daemon needs to bind the socket address in order to be able to listen 
for connections from clients. This is done in the system name table, so it 
requires the SYSNAM privilege.<p>
<p>
Run the daemon in a process with the SYSNAM privilege set.<p>
<p>
When I start up 
lmgrd<I></I>, it says 
<TT>execl failed</TT> on my vendor daemon.<p>
<p>
lmgrd<I></I> uses 
<TT>execl</TT> to start each vendor daemon running. If there is a 
problem starting the vendor daemon, this message is output to the log 
file. This error is typically caused by one of the following: 1) there is no 
executable at the location referred to by the license file (and printed out 
in the log file); 2) the executable does not have the proper permissions to 
be run (the file does not have the `x' bit set, or one of the directories in 
the path is not readable); 3) there was an error building the executable, 
and it can not be run; 4) the executable is for a different machine 
architecture.<p>
<p>
Verify that the path to the vendor daemon is absolute (i.e. starts with a 
slash character, and that it points to the executable program itself, not the 
containing directory (for 
FLEXlm<I></I> v1.5). Ensure that the file exists by 
doing an 
<TT>ls -l</TT> of the vendor daemon filename(s) specified in the log 
file. Make sure you do this as the same user that started 
lmgrd<I></I>. Verify that 
the file is executable. Note that if you are running as root and using an 
NFS-mounted filesystem, the relevant protection bits are the `other' bits 
(<I>not</I> the `user' bits), even if the file is owned by root. Do a 
<TT>whatis</TT> on 
the file (if your system has that program). 
<TT>whatis</TT> should tell you the 
file is an executable for the machine you are trying to run it on. Run the 
vendor daemon directly from the command line. If the vendor daemon is 
properly linked, it will tell you that it must be run from 
lmgrd<I></I>; if it crashes 
or fails to execute, then it is not properly linked.<p>
<p>
The license server keeps reporting `lost lock' errors in the log file and 
exiting.<p>
<p>
The lockfile (normally placed in 
<TT>/usr/tmp 
</TT>on Unix, 
<TT>C:\flexlm</TT> on 
Windows/NT, 
<TT>SYS:\SYSTEM\FLEXLM</TT> on Netware) is being removed 
by someone else. There could be another daemon running, or the license 
administrator (or a script he set up) could have deleted the file.<p>
<p>
Check to see if there is more than one copy of the daemon running. On 
Unix use a command like 
<TT>ps -aux | grep vendorname</TT> to search 
for it. Check for more than one 
lmgrd<I></I> running as well, since it will restart 
your vendor daemon when it is killed. If more than one 
lmgrd<I></I> is running, 
kill them all (using the 
<TT>kill</TT> command, not 
<TT>kill -9 
</TT>on Unix or the 
Control Panel Services dialog on Windows/NT), then kill any remaining 
vendor daemons (on Unix, try a simple kill, if that fails then try 
<TT>kill -9 the lmgrd</TT> and all vendor daemons) and start one fresh copy of 
lmgrd<I></I>. On Unix, check to see if there is a shell script running that cleans 
out 
<TT>/tmp</TT> (or 
<TT>/usr/tmp</TT>). If so, try modifying it so that it does not 
delete zero length files.<p>
<a name="Appendix C"></a><hr><h1>Appendix C  <a name="14667: AppTitle: Appendix C FLEXlm environment variables"></a>
FLEXlm environment variables</h1>
<p>
Environment variables should never be required to use 
FLEXlm<I></I> licensed applications. 
Environment variables are normally used for debugging or for changing license default 
location.<p>
<a name="41901: 1HeadApp: C.1 How to set environment variables"></a><a name="C.1"></a><h2>C.1  How to set environment variables</h2>
<p>
FLEXlm environment variables are set in 2 different ways: 
<p>
<ul><li>The normal set or setenv commands (or the System Control Panel on Windows 
NT)<li>The registry (Windows), or in $HOME/.flexlmrc (Unix), which functions like the 
registry for FLEXlm on Unix. Version 6 required, and $HOME/.flexlmrc requires 
version 7.</ul><h3>C.1.1	 Registry</h3>
<p>
On Windows, the FLEXlm registry location is:<p>
<pre>HKEY_LOCAL_MACHINE-&gt;SOFTWARE-&gt;FLEXlm License Manager.</pre>
<pre>On Unix, the equivalent information is stored in $HOME/.flexlmrc. In this file, the syntax is <I>variable</I>=<I>value</I>.</pre>
<h3>C.1.2	 Precedence</h3>
<p>
If the variable is $LM_LICENSE_FILE or $<I>VENDOR</I>_LICENSE_FILE, then both the 
environment and the registry are used, with the environment used first, and the registry 
appended to the path.<p>
<p>
If it's a different variable, then if the environment set, only that is used, otherwise the 
registry is used. That is, the registry is only used if the environment is not set.<p>
<a name="3.2"></a><h2>3.2  Environment variables</h2>
Variable	Meaning (FLEXlm version introduced)FLEXLM_BATCH	Windows only: prevents interactive popups from 
appearing. Set to 1 if a batch application. (Version 
7+ clients)FLEXLM_DIAGNOSTICS	Used for debugging, where applications don't 
print 
FLEXlm<I></I> error message text. Set to 1, 2, or 3, 
depending on the amount of diagnostic 
information desired. (Version 5+ clients)LM_LICENSE_FILE 
 -    <I>VENDOR</I>_LICENSE_FILE	Reset path to license file. Can be a license file list, 
separated by ':' on Unix and ';' on Windows. If 
<I>VENDOR</I>_LICENSE_FILE used, 
<I>VENDOR 
</I>is 
the 
<a name="_IX_155"></a>vendor daemon name used by this application. 
For example, 
GLOBEtrotter Software<I></I> products 
use GSI_LICENSE_FILE. (Version 6 client 
required for 
<I>VENDOR</I>_LICENSE_FILE). Can be 
a filename, or 
<I>port</I>@<I>host</I>. See also 
<a href="#15416: 2Head: 2.1.2 Setting the Path with an Environment Variable">Section 2.1.2, 
`Setting the Path with an Environment Variable,' 
on page 12</a>. ($<I>VENDOR</I>_LICENSE_FILE 
requires v6+ clients)LM_PROJECT	LM_PROJECT's value is logged in 
REPORTLOG, and later reported on by 
SAMreport. Limited to 30 characters. (Version 5+ 
client required)<a name="Appendix D"></a><hr><h1>Appendix D  <a name="27042: AppTitle: Appendix C Frequently Asked Questions"></a>
Frequently Asked Questions</h1>
<a name="_IX_156"></a><a name="31052: 1HeadApp: D.1 License File Questions"></a><a name="D.1"></a><h2>D.1  License File Questions</h2>
<h3>D.1.1	 I've received 
FLEXlm<I></I> license files from 2 different companies. Do I have to 
combine them? 
</h3>
<p>
You don't have to combine license files. Each license file that has any `counted' lines 
(the `number of licenses' field is &gt;0) requires a server. It's perfectly OK to have any 
number of separate license files, with different 
<a name="_IX_157"></a>lmgrd server processes supporting each 
file. Moreover, since lmgrd is a lightweight process, for sites without system 
administrators, this is often the simplest (and therefore recommended) way to proceed. 
With v6+ lmgrd/lmdown/lmreread, you can stop/reread/restart a single vendor daemon 
(of any 
FLEXlm<I></I> version). This makes combining licenses more attractive than 
previously. Also, if the application is v6+, using dir/*.lic for license file management 
behaves like combining licenses without physically combining them.<p>
<h3>D.1.2	 When is it recommended to combine license files?</h3>
<p>
Many system administrators, especially for larger sites, prefer to combine license files 
to ease administration of 
FLEXlm<I></I> licenses. It's purely a matter of preference. 
<p>
<h3>D.1.3	 Does 
FLEXlm<I></I> handle dates in the 
<a name="_IX_158"></a>year 2000 and beyond?</h3>
<p>
Yes. The 
FLEXlm<I></I> date format uses a 4-digit year. Dates in the 20th century (19xx) can 
be abbreviated to the last 2 digits of the year (xx), and use of this feature is quite 
widespread. Dates in the year 2000 and beyond must specify all 4 year digits. 
<p>
<a name="_IX_159"></a><a name="D.2"></a><h2>D.2  FLEX<I>lm</I> Versions</h2>
<h3>D.2.1	 I have products from several companies at various 
FLEXlm<I></I> version levels. Do 
I have to worry about how these versions work together? 
</h3>
<p>
If you're not combining license files from different vendors, the simplest thing to do is 
make sure you use the tools that are shipped by each vendor. 
<p>
<p>
lmgrd will always correctly support older versions of vendor daemons and 
applications, so it's 
<I>always</I> safe to use the latest version of lmgrd and the lmutil/lmtools 
utilities. If you've combined license files from 2 vendors, you<I> must 
</I>use the latest 
version of lmgrd.<p>
<p>
If you've received 2 versions of a product from the same vendor, you 
<I>must</I> use the latest 
vendor daemon they send you. An older vendor daemon with a newer client will cause 
communication errors.<p>
<p>
Please ignore letters appended to 
FLEXlm<I></I> versions, i.e., v2.4d. The appended letter 
indicates a patch, and does NOT indicate any compatibility differences. In particular, 
some elements of 
FLEXlm<I></I> didn't require certain patches, so a 2.4 lmgrd will work 
successfully with a 2.4b vendor daemon. See also 
<a href="#26060: 1HeadApp: G.1 Version compatibility and components">Appendix G, `Version compatibility 
and components' on page 83</a>.<p>
<h3>D.2.2	 I've received a new copy of a product from a vendor, and it uses a new version 
of 
FLEXlm<I></I>. Is my old license file still valid?</h3>
<p>
Yes. Older 
FLEXlm<I></I> license files are always valid with newer versions of 
FLEXlm<I></I>. 
<p>
<h3>D.2.3	 I've received a new license file, and the format is different from the old one I 
had from the same vendor? Why? Are they compatible?</h3>
<p>
As of v3.0, 
FLEXlm<I></I> has an optional new format for license files. 
FLEXlm<I></I> products 
always understand older versions; therefore, the pre-v3.0 files are understood by every 
FLEXlm<I></I> version. However, your old applications (pre-FLEXlm<I></I> v3.0) will not be able 
to use the new license file. See Also: 
<a href="#94139: 1head: 2.2 License File Format">Section 2.2, `License File Format,' on page 12</a>.<p>
<a name="D.3"></a><h2>D.3  Using FLEX<I>lm</I></h2>
<h3>D.3.1	 Does FLEX<I>lm</I> work across the 
<a name="_IX_160"></a>internet?</h3>
<p>
Yes. A server on the internet will serve licenses to anyone else on the internet. This can 
be limited with the INTERNET= attribute on the FEATURE line, which limits access 
to a range of internet addresses. You can also use the INCLUDE and EXCLUDE 
options in the daemon option file to allow (or deny) access to clients running on a range 
of internet addresses.<p>
<h3>D.3.2	 Does FLEX<I>lm</I> work with Internet 
<a name="_IX_161"></a>firewalls?</h3>
<p>
Many firewalls require that port numbers be specified to the firewall. 
FLEXlm<I></I> v5 
<a name="_IX_162"></a>lmgrd supports this.<p>
<h3>D.3.3	 If my client dies, does the server free the license? 
</h3>
<p>
Yes, unless the client's whole system crashes, or becomes disconnected from the 
network. Assuming communications is TCP, the license is automatically freed 
immediately. If communications are UDP, then the license is freed after the UDP 
timeout, which is set by each vendor, but defaults to 45 minutes. UDP communications 
is normally only set by the end-user, so TCP should be assumed. If the whole system 
crashes, then the license is not freed, and you should use lmremove to free the license.<p>
<h3>D.3.4	 What happens when the license server dies? 
</h3>
<p>
FLEXlm<I></I> applications send periodic heartbeats to the server to discover if it has died. 
What happens when the server dies is then up to the application. Some will simply 
continue periodically attempting to re-checkout the license when the server comes 
back up. Some will attempt to re-checkout a license a few times, and then, presumably 
with some warning, exit. Some GUI applications will present pop-ups to the user 
periodically letting them know the server is down and needs to be re-started. 
<p>
<h3>D.3.5	 How do you tell if a port is already in use? 
</h3>
<p>
99.44% of the time, if it's in use, it's because 
<a name="_IX_163"></a>lmgrd is already running on the port - or 
was recently killed, and the port isn't freed yet. Assuming this is not the case, then use 
'telnet host port' -  if it says `can't connect', it's a free port. 
<p>
<h3>D.3.6	 Does FLEX<I>lm</I> require root permissions?</h3>
<p>
No. There is no part of 
FLEXlm<I></I>, 
<a name="_IX_164"></a>lmgrd, vendor daemon or application, that requires 
root permissions. In fact, it is 
strongly recommended that you do not run the license 
server (lmgrd) as root, since root processes can introduce security risks. If lmgrd must 
be started from the root user (for example, in a system boot script), we recommend that 
you use the 
su command to run lmgrd as a non-privileged user:<p>
<pre>su username -c"/path/lmgrd -c /path/license.dat -l /path/log"</pre>
</ol></ul><p>
where 
username is a non-privileged user, and 
<I>path</I> is the correct paths to lmgrd, 
license.dat and debug log file. You will have to ensure that the vendor daemons listed 
in 
/path-to-license/license.dat have execute permissions for 
username. The paths to all 
the vendor daemons in the license file are listed on each DAEMON line.<p>
<h3>D.3.7	 Is it ok to run 
<a name="_IX_165"></a>lmgrd as `root' (<a name="_IX_166"></a>Unix only)?</h3>
<p>
It is not prudent to run any command, particularly a daemon, as root on Unix, as it may 
pose a security risk to the Operating System. Therefore, we recommend that 
<I>lmgrd</I> be 
run as a non-privileged user (not `root'). If you are starting lmgrd from a boot script, 
we recommend that you use 
<p>
<pre>	su <I>username</I> -c"umask 022; <I>lmgrd...</I>"</pre>
</ol></ul><p>
to run 
<I>lmgrd</I> as a non-privileged user.<p>
<h3>D.3.8	 Does 
FLEX<I>lm 
</I>licensing impose a heavy load on the 
<a name="_IX_167"></a>network. 
</h3>
<p>
No, but partly this depends on the application, and end-user's use. A typical checkout 
request requires 5 messages and responses between client and server, and each 
message is &lt; 150 bytes. 
<p>
<p>
When a server is not receiving requests, it requires virtually no CPU time. 
<p>
<p>
When an application, or lmstat, requests the list of current users, this can significantly 
increase the amount of networking 
FLEXlm<I></I> uses, depending on the number of current 
users. 
<p>
<p>
Also, prior to 
FLEXlm<I></I> v5, use of `port@host' can increase network load, since the 
license file is down-loaded from the server to the client. port@host should be, if 
possible, limited to small license files (say &lt; 50 features). In v5, port@host actually 
improves performance.<p>
<h3>D.3.9	 Does FLEX<I>lm</I> work with 
<a name="_IX_168"></a>NFS?</h3>
<p>
Yes. 
FLEXlm<I></I> has no direct interaction with NFS. 
FLEXlm<I></I> uses an NFS-mounted file 
like any other application. 
<p>
<h3>D.3.10	 Does FLEX<I>lm</I> work with 
<a name="_IX_169"></a>ATM, 
<a name="_IX_170"></a>ISDN, Token-Ring, etc.</h3>
<p>
In general, these have no impact on 
FLEXlm<I></I>. 
FLEXlm<I></I> requires TCP/IP or SPX 
(Novell Netware). So long as TCP/IP works, 
FLEXlm<I></I> will work.<p>
<h3>D.3.11	 Does FLEX<I>lm</I> work with 
<a name="_IX_171"></a>subnets, fully-qualified names, multiple 
<a name="_IX_172"></a>domains, 
etc.?</h3>
<p>
Yes, although this behavior was improved in v3.0, and v6.0.<p>
<p>
When a license server and a client are located in different domains, fully-qualified host 
names have to be used. A `fully-qualified hostname' is of the form: node.domain, 
where `node' is the local hostname (usually returned by the 'hostname' command or 
'uname -n') `domain' is the internet domain name, e.g., `globes.com'.<p>
<p>
To ensure success with 
FLEXlm<I></I> across domains, do the following: 
<p>
<ol><li>Make the sure the fully-qualified hostname is the name on the SERVER line of the 
license file 
<li>Make sure ALL client nodes, as well as the server node, are able to 'telnet' to that 
fully-qualified hostname. For example, if the host is locally called `speedy', and 
the domain name is `corp.com', local systems will be able to logon to speedy via 
'telnet speedy'. But very often, 'telnet speedy.corp.com' will fail, locally. Note 
that this telnet command will always succeed on hosts in other domains (assuming 
everything is configured correctly), since the network will resolve 
speedy.corp.com automatically. 
<li>Finally, there must be an `alias' for speedy so it's also known locally as 
speedy.corp.com. This alias is added to the /etc/hosts file, or if NIS/Yellow Pages 
are being used, then it will have to be added to the NIS database. This requirement 
goes away in version 3.0 of 
FLEXlm<I></I>.</ol>
<p>
If all components (application, 
<a name="_IX_173"></a>lmgrd and vendor daemon) are v6.0 or higher, no 
aliases are required; the only requirement is that the fully-qualified domain name, or 
ip-address, is used as a hostname on the SERVER, or as a hostname in 
$LM_LICENSE_FILE 
<I>port@host,</I> or 
<I>@host</I>.<p>
<h3>D.3.12	 Does FLEX<I>lm</I> work with 
<a name="_IX_174"></a>NIS and 
<a name="_IX_175"></a>DNS?</h3>
<p>
Yes. However, some sites have broken NIS or DNS, which will cause 
FLEXlm<I></I> to fail. 
In v5 of 
FLEXlm<I></I>, NIS and DNS can be avoided to solve this problem. In particular, 
sometimes DNS is configured for a server that's not current available (e.g., a dial-up 
connection from a PC). Again, if DNS is configured, but the server is not available, 
FLEXlm<I></I> will fail.<p>
<p>
In addition, some systems, particularly Sun, SGI, HP, require that applications be 
linked dynamically to support NIS or DNS. If a vendor links statically, this can cause 
the application to fail at a site that uses NIS or DNS. In these situations, the vendor will 
have to relink, or recompile with v5 
FLEXlm<I></I> (when it becomes available in Q1 of 96). 
Vendors are strongly encouraged to use dynamic libraries for libc and networking 
libraries, since this tends to improve quality in general, as well as making NIS/DNS 
work.<p>
<p>
On PCs, if a checkout seems to take 3 minutes and then fails, this is usually because 
the system is configured for a dial-up DNS server which is not currently available. The 
solution here is to turn off DNS.<p>
<p>
Finally, hostnames must NOT have periods in the name. These are not legal hostnames, 
although PCs will allow you to enter them, and they will not work with DNS.<p>
<h3>D.3.13	 Is the FLEX<I>lm</I> `display' the same as an 
<a name="_IX_176"></a>X-Display?</h3>
<p>
Not by default. The default 
FLEXlm<I></I> display is what is returned by the ttyname() 
function call (or the 'tty' command), and is usually something like `/dev/ttyp4'. 
However, the application developer can change this default to the X-Display. A paper 
is available on this topic to 
FLEXlm<I></I> developers from 
GLOBEtrotter Software<I></I>.<p>
<h3>D.3.14	 We're using FLEX<I>lm</I> over a 
<a name="_IX_177"></a>wide-area network. What can we do to improve 
performance? 
</h3>
<p>
FLEXlm<I></I> network traffic should be minimized. With the most common uses of 
FLEXlm<I></I>, traffic is negligible. In particular, checkout, checkin and heartbeats use very 
little networking traffic. There are two items, however, which can send considerably 
more data and should be avoided or used sparingly:<p>
<ul><li>`lmstat -a' should be used sparingly. lmstat -a should not be used more than, 
say, once every 15 minutes, and should be particularly avoided when there's 
a lot of features, or concurrent users, and therefore a lot of data to transmit; 
say, more than 20 concurrent users or features. 
<li>prior to 
FLEXlm<I></I> v5, the `port@host' mode of the LM_LICENSE_FILE 
environment variable should be avoided, especially when the license file has 
many features, or there are a lot of license files included in 
$LM_LICENSE_FILE. The license file information is sent via the network, 
and can place a heavy load. Failures due to `port@host' will generate the 
error LM_SERVNOREADLIC (-61). 
</ul><a name="_IX_178"></a><a name="D.4"></a><h2>D.4  Windows Questions</h2>
<h3>D.4.1	 What PC Platforms are supported?</h3>
<p>
FLEXlm<I></I> supports Windows 3.1,Windows for Workgroup 3.11, Windows 95/98, 
Windows NT 3.5, 3.51 and 4.0 on Intel Mips and Alpha, Netware 3.12 and 4.X, OS/2 
3.0.<p>
<p>
	Networking is required on all 32-bit versions<p>
<h3>D.4.2	 What is 
<a name="_IX_179"></a>WINSOCKX.DLL?</h3>
<p>
Winsockx.dll is a DLL provided by 
GLOBEtrotter Software<I></I> that is used by 16 bit 
applications to interface between 
FLEXlm<I></I> and other networking software provided by 
networking ISV's. It allows node locked applications to not require networking 
software. It also interfaces between winsock.dll for TCP/IP, and the Novell DLLs that 
provide IPX/SPX on 16 bit operating systems.<p>
<h3>D.4.3	 Why do I need to include NWlink IPX/SPX NT and Win 95?</h3>
<p>
This is necessary for either obtaining the Ethernet card address, or to provide 
connectivity with a Netware License server. Version 6.1+ applications will not require 
this on NT.<p>
<h3>D.4.4	 Will the Server run on 
<a name="_IX_180"></a>Windows 95?</h3>
<p>
Yes. If available, NT systems are preferred, since it can be run as an NT `service'. A 
version 7+ 
<a name="_IX_181"></a>lmgrd will run the background on Windows 95.<p>
<a name="Appendix E"></a><hr><h1>Appendix E  
<a name="_IX_182"></a>FLEX<I>lm</I> Error Codes</h1>
<a name="E.1"></a><h2>E.1  Error Message Format</h2>
<p>
FLEXlm<I></I> error messages presented by applications have the following components<p>
<ul><li>FLEXlm Error Number - a negative number starting with -1<li>FLEXlm Error Text - short sentence (&lt; 80 characters) summarizing problem.<li>FLEXlm Error Explanation (optional) - short paragraph (3-5 lines) explaining 
problem and possible solutions or workarounds.<li>FLEXlm Minor Error Number, a positive number starting with 1. These numbers 
are unique error identifiers, and are used by FLEXlm-license ISVs for more 
advanced support assistance. Their meaning is not documented.<li>System error code (optional) - This is a Unix or Windows OS error code last set 
by the operating system.<li>System error code explanation (optional) - A short sentence (&lt; 80 characters) 
explaining the system error code.<li>Other supporting information (optional)</ul><p>
Error messages were improved in v6. FLEXlm error explanation, and supporting 
information are only available in applications using v6.0+.<p>
<p>
These error messages may occur in two formats available with FLEXlm, or may appear 
in a format customized by the application:<p>
<h3>E.1.1	 Format 1 (short):</h3>
<pre> FLEXlm error text (-lm_errno, minor_num[:sys_errno]) [sys error text]</pre>
</ol></ul><p>
The system error information may be missing.<p>
<p>
Example:<p>
<pre>Can't connect to license server (-15,12:61) Connection refused</pre>
<h3>E.1.2	 Format 2 (long - version 6+):</h3>
<pre>FLEXlm error text
 FLEXlm error explanation
[Optional Supporting information]
FLEXlm error: -lm_errno, minor_num[, sys_errno] [`system error text']</pre>
</ol></ul><p>
Example:<p>
<pre>Cannot connect to license server
 The server (lmgrd) has not been started yet, or
 the wrong port@host or license file is being used, or the
 port or hostname in the license file has been changed.
Feature:       f1
Server name:   localhost
License path: @localhost:license.dat:./*.lic
FLEXlm error:  -15,12.  System Error: 61 `Connection refused'</pre>
<a name="_IX_183"></a><a name="E.2"></a><h2>E.2  Error Code Descriptions</h2>
<p>
Errors marked with an '*' indicates errors which should not appear in shipping 
software. These are errors intended to help the programmer incorporate FLEXlm in 
their product, and should be fixed before shipping.<p>
<p>
Errors marked with '+' indicate errors due to an operating system failure.<p>
<dl><dt>Error<dd>Description<dt>-1<dd>Cannot find license file<dt>-2<dd>Invalid license file syntax<dt>-3<dd>No server for this feature<dt>-4<dd>Licensed number of users already reached<dt>-5<dd>No such feature exists<dt>-6<dd>No port number in license file and FLEXlm service does not exist [pre-v6 
only]<dt>-7<dd>No socket connection to license manager server<dt>-8<dd>Invalid (inconsistent) license key.
 The license-key and data for the feature do no match.
 This usually happens when a license file has been altered<dt>-9<dd>Invalid host.
 The hostid of this system does not match the hostid
 specified in the license file<dt>-10<dd>Feature has expired<dt>-11<dd>Invalid date format in license file<dt>-12<dd>Invalid returned data from license server<dt>-13<dd>No SERVER lines in license file<dt>-14<dd>Cannot find SERVER hostname in network database.
 The lookup for the hostname on the SERVER line in the
 license file failed. This often happens when NIS or DNS
 or the hosts file is incorrect. Workaround: Use IP-Address
 (e.g., 123.456.789.123) instead of hostname<dt>-15<dd>Cannot connect to license server.
 The server (lmgrd) has not been started yet, or
 the wrong port@host or license file is being used, or the
 port or hostname in the license file has been changed.<dt>-16<dd>Cannot read data from license server<dt>-17<dd>Cannot write data to license server<dt>-18<dd>License server does not support this feature<dt>-19<dd>Error in select system call<dt>-20<dd>[Obsolete]<dt>-21<dd>License file does not support this version<dt>-22<dd>Feature checkin failure detected at license server<dt>-23<dd>License server temporarily busy (new server connecting)<dt>-24<dd>Users are queued for this feature<dt>-25<dd>License server does not support this version of this feature<dt>-26<dd>Request for more licenses than this feature supports<dt>-27<dd>[Obsolete]<dt>-28<dd>[Obsolete]<dt>-29<dd>Cannot find ethernet device<dt>-30<dd>Cannot read license file<dt>-31<dd>Feature start date is in the future<dt>-32<dd>No such attribute<dt>-33<dd>Bad encryption handshake with daemon<dt>-34<dd>Clock difference too large between client and server<dt>-35<dd>In the queue for this feature<dt>-36<dd>Feature database corrupted in daemon<dt>-37<dd>Duplicate selection mismatch for this feature<dt>-38<dd>User/host on EXCLUDE list for feature<dt>-39<dd>User/host not on INCLUDE list for feature<dt>-40<dd>Cannot allocate dynamic memory<dt>-41<dd>Feature was never checked out<dt>-42<dd>Invalid parameter<dt>-43<dd>*No FLEXlm key data supplied in initializing call<dt>-44<dd>*Invalid FLEXlm key data supplied<dt>-45<dd>*FLEXlm function not available in this version<dt>-46<dd>[Obsolete]<dt>-47<dd>Clock setting check not available in daemon<dt>-48<dd>*FLEXlm platform not enabled<dt>-49<dd>*Date invalid for binary format<dt>-50<dd>*FLEXlm key data has expired<dt>-51<dd>*FLEXlm not initialized<dt>-52<dd>FLEXlm vendor daemon did not respond within timeout interval<dt>-53<dd>Checkout request rejected by vendor-defined checkout filter<dt>-54<dd>No FEATURESET line in license file<dt>-55<dd>Incorrect FEATURESET line in license file<dt>-56<dd>Cannot compute FEATURESET data from license file<dt>-57<dd>+socket() call failed<dt>-58<dd>[Obsolete]<dt>-59<dd>Message checksum failure<dt>-60<dd>Server message checksum failure<dt>-61<dd>Cannot read license file data from server<dt>-62<dd>Network software (tcp/ip) not available<dt>-63<dd>You are not a license administrator<dt>-64<dd>lmremove request before the minimum lmremove interval<dt>-65<dd>*Unknown VENDORCODE struct type passed to lm_init()<dt>-66<dd>*FLEXlm include file/library version mismatch<dt>-67<dd>[Obsolete]<dt>-68<dd>[Obsolete]<dt>-69<dd>[Obsolete]<dt>-70<dd>[Obsolete]<dt>-71<dd>Invalid TZ environment variable<dt>-72<dd>*Old VENDORCODE (3-word) struct type passed to lm_init()<dt>-73<dd>Local checkout filter rejected request<dt>-74<dd>Attempt to read beyond end of license file path<dt>-75<dd>+SYS$SETIMR call failed (VMS)<dt>-76<dd>Internal FLEXlm Error - Please report to Globetrotter Software<dt>-77<dd>Bad version number - must be floating point number, with no letters<dt>-78<dd>*FLEXadmin API functions not available<dt>-79<dd>FLEXlm internal error -79<dt>-80<dd>FLEXlm internal error -80<dt>-81<dd>FLEXlm internal error -81<dt>-82<dd>Invalid PACKAGE line in license file<dt>-83<dd>FLEXlm version of client newer than server<dt>-84<dd>USER_BASED license has no specified users -- see server log<dt>-85<dd>License server doesn't support this request<dt>-86<dd>License object already in use (Java only)<dt>-87<dd>Checkout exceeds MAX specified in options file<dt>-88<dd>System clock has been set back<dt>-89<dd>This platform not authorized by license<dt>-90<dd>Future license file format or misspelling in license file.
 The file was issued for a later version of FLEXlm than this
 program understands.<dt>-91<dd>ENCRYPTION_SEEDs are non-unique<dt>-92<dd>feature removed during lmreread, or wrong SERVER line hostid<dt>-93<dd>This feature is available in a different license pool.
 This is a warning condition. The server has pooled one or more
 INCREMENT lines into a single pool, and the request was made on
 an INCREMENT line that has been pooled.<dt>-94<dd>Attempt to generate license with incompatible attributes<dt>-95<dd>Network connect to THIS_HOST failed.
 The license file indicates THIS_HOST, and the server is 

 not running on this host. If it's running on a different host,
 THIS_HOST should be changed to the correct host.<dt>-96<dd>Server node is down or not responding. 

 See the system administrator about starting the server, or make 

 sure the you're referring to the right host (see LM_LICENSE_FILE).<dt>-97<dd>The desired vendor daemon is down.
 1) Check the lmgrd log file, or 2) Try lmreread.<dt>-98<dd>This FEATURE line can't be converted to decimal format<dt>-99<dd>The decimal format license is typed incorrectly<dt>-100<dd>Cannot remove a linger license<dt>-101<dd>All licenses are reserved for others.
 The system administrator has reserved all the licenses for others.
 Reservations are made in the options file. The server must be restarted 

 for options file changes to take effect.<dt>-102-105<dd>Unused<dt>-106<dd>License server out of network connections
The vendor daemon can't handle any more users.
See the lmgrd debug log for further information.<dt>-107-109<dd>Unused<dt>-110<dd>Dongle not attached, or can't read dongle
Either the hardware dongle is unattached, or the necessary
software drivers for this dongle type is not installed.<dt>-111<dd>lmgr.res, Windows Resource file, not linked<dt>-112<dd>Missing Dongle Driver
In order to read the dongle hostid, the correct driver must be
installed. These drivers are available at www.globetrotter.com
or from your software vendor.</dl><a name="Appendix F"></a><hr><h1>Appendix F  <a name="14869: apphead: Appendix A"></a>
The <a name="_IX_184"></a>Debug Log File</h1>
<p>
The 
<a name="_IX_185"></a>daemons all generate debug log files in the following format.<p>
<pre>hh:mm (<I>DAEMON NAME</I>) message</pre>
</ol></ul><p>
<p>
<dl><dt>hh:mm<dd>Time that the message was logged.<dt><I>DAEMON NAME</I><dd>Either `<a name="_IX_186"></a>lmgrd' or the 
<a name="_IX_187"></a>vendor daemon name. In the case 
where a single copy of the daemon cannot handle all of the 
requested licenses, an optional `_' followed by a number 
indicates that this message comes from a forked daemon.<dt>message<dd>The text of the message.</dl><p>
The debug log files can be used to:<p>
<ul><li>Diagnose configuration problems.<li>Diagnose daemon software errors.</ul><p>
The debug log file should not be used for usage reporting.<p>
<a name="F.1"></a><h2>F.1  Informational Messages</h2>
<p>
Connected to node<p>
<p>
This daemon is connected to its peer on node `node.'<p>
<p>
CONNECTED, master is name<p>
<p>
The license daemons log this message when a quorum is up and everyone has 
selected a master.<p>
<p>
DENIED: N feature to user<p>
<p>
`user' was denied access to `N' licenses of `feature'.   
<p>
<p>
EXITING DUE TO SIGNAL nnn<p>
<p>
EXITING with code nnn<p>
<p>
All daemons list the reason that the daemon has exited.<p>
<p>
EXPIRED: feature<p>
<p>
`feature' has passed its expiration date.<p>
<p>
IN: feature by user (N licenses)<p>
<p>
`user' has checked back in `N' licenses of `feature'.<p>
<p>
License Manager server started<p>
<p>
The license daemon was started.<p>
<p>
Lost connection to host<p>
<p>
A daemon can no longer communicate with its peer on node `host', which can 
cause the clients to have to reconnect, or cause the number of daemons to go 
below the minimum number, in which case clients may start exiting. If the license 
daemons lose the connection to the master, they will kill all the vendor daemons; 
vendor daemons will shut themselves down.<p>
<p>
Lost quorum<p>
<p>
The daemon lost quorum, so will process only connection requests from other 
deamons.<p>
<p>
MULTIPLE xxx servers running.<p>
<p>
Please kill, and restart license daemon<p>
<p>
The license daemon has detected that multiple licenses for vendor daemon `xxx' 
are running. The user should kill all `xxx' daemon processes and re-start the 
license daemon.<p>
<p>
OUT: feature by user (N licenses)<p>
<p>
`user' has checked out `N' licenses of `feature'.<p>
<p>
RESERVE feature for HOST name<p>
<p>
RESERVE feature for USER name<p>
<p>
A license of `feature' is reserved for either user `name' or host `name'.<p>
<p>
REStarted xxx (internet port nnn)<p>
<p>
Vendor daemon `xxx' was restarted at internet port `nnn'.<p>
<p>
Retrying socket bind (address in use)<p>
<p>
The license servers try to bind their sockets for approximately 6 minutes if they 
detect `address in use' errors.<p>
<p>
Selected (EXISTING) master node.<p>
<p>
This license daemon has selected an existing master (node) as the master.<p>
<p>
SERVER shutdown requested.<p>
<p>
A daemon was requested to shut down via a user-generated kill command.<p>
<p>
[NEW] Server started for: feature-list<p>
<p>
A new server was started for the features listed.<p>
<p>
Shutting down xxx<p>
<p>
The license daemon is shutting down the vendor daemon xxx.<p>
<p>
SIGCHLD received. Killing child servers.<p>
<p>
A vendor daemon logs this message when a shutdown was requested by the 
license daemon.<p>
<p>
Started name	<p>
<p>
The license daemon logs this message whenever it starts a new vendor daemon.<p>
<p>
Trying connection to node	<p>
<p>
The daemon is attempting a connection to `node'.<p>
<a name="F.2"></a><h2>F.2  Configuration Problem Messages</h2>
<p>
<I>hostname</I>: Not a valid server host, exiting<p>
<p>
This daemon was run on an invalid hostname.<p>
<p>
<I>hostname</I>: Wrong hostid, exiting<p>
<p>
The hostid is wrong for `hostname.'<p>
<p>
BAD CODE for 
<I>feature-name</I><p>
<p>
The specified feature name has a bad license key. It was probably typed in wrong, 
or modified by the end-user.<p>
<p>
CANNOT OPEN options file 
<I>`file'</I><p>
<p>
The options file specified in the license file could not be opened.<p>
<p>
license daemon: lost all connections<p>
<p>
This message is logged when all the connections to a server are lost, which often 
indicates a network problem.<p>
<p>
lost lock, exiting<p>
<p>
Error closing lock file<p>
<p>
Unable to re-open lock file<p>
<p>
The vendor daemon has a problem with its lock file, usually because of an attempt 
to run more than one copy of the daemon on a single node. Locate the other 
daemon that is running via a 
<TT>ps</TT> command, and kill it with 
<TT>kill -9</TT>.<p>
<p>
NO DAEMON line for 
<I>daemon</I><p>
<p>
The license file does not contain a `DAEMON' line for `<I>daemon</I>.'<p>
<p>
No `license' service found<p>
<p>
The TCP `license' service did not exist in 
<TT>/etc/services</TT>.<p>
<p>
No features to serve!<p>
<p>
A vendor daemon found no features to serve. This could be caused by a corrupted 
or incorrectly entered license file.<p>
<p>
UNSUPPORTED FEATURE request: feature by user<p>
<p>
The `user' has requested a feature that this vendor daemon does not support. This 
can happen for a number of reasons: the license file is bad, the feature has 
expired, or the daemon is accessing the wrong license file.<p>
<p>
Unknown host: hostname<p>
<p>
The hostname specified on a `SERVER' line in the license file does not exist in 
the network database.<p>
<p>
NO DAEMON lines, exiting<p>
<p>
The license daemon logs this message if there are no DAEMON lines in the 
license file. Since there are no vendor daemons to start, there is nothing to do.<p>
<p>
NO DAEMON line for name<p>
<p>
A vendor daemon logs this error if it cannot find its own DAEMON name in the 
license file.<p>
<a name="F.3"></a><h2>F.3  Daemon Software Error Messages</h2>
<p>
No internet port number specified<p>
<p>
A vendor daemon was started without an internet port.<p>
<p>
read: error message<p>
<p>
An error in a `read' system call was detected.<p>
<p>
select: message<p>
<p>
An error in a select system call was detected. This is usually a sign of a system 
networking failure.<p>
<p>
Server exiting<p>
<p>
The server is exiting. This is normally due to an error.<p>
<a name="Appendix G"></a><hr><h1>Appendix G  <a name="23857: AppTitle: Appendix G FLEXlm Versions"></a>
<a name="_IX_188"></a>FLEX<I>lm</I> Versions</h1>
<a name="26060: 1HeadApp: G.1 Version compatibility and components"></a><a name="G.1"></a><h2>G.1  Version compatibility and components</h2>
<p>
In general, always use the latest 
<a name="_IX_189"></a>lmgrd and lmutil/lmtools.exe, which are available 
from www.globetrotter.com, and you'll automatically enjoy many of the enhancements 
available in the most recent versions. However, some enhancements require upgraded 
vendor daemons, and yet others require upgraded client applications. Given the 
following components:<p>
<ul><li>lmgrd<li>lmutil (includes lmstat, lmdown, etc., and lmtools on windows)<li>vendor daemon<li>license file</ul><p>
the rules about compatibility can be summarized as follows:<p>
<pre>version of lmutil must be &gt;=</pre>
<pre>version of lmgrd, which must be &gt;=</pre>
<pre>version of vendor daemon, which must be &gt;=</pre>
<pre>version of client application, which must be &gt;=</pre>
<pre>version of license file format</pre>
</ol></ul><p>
Except for the license file, you can use 
<I>lmver</I> to discover the version of all these 
components. For the vendor daemon, lmgrd, lmutil, you can also you -v argument to 
print the version. 
<p>
<h3>G.1.1	 How to tell the license file version</h3>
<p>
The following rules apply to individual FEATURE, INCREMENT or UPGRADE 
lines. It's possible to have a mix of versions in a single file. Only the features that a 
particular application checkout determine the version of the license for that feature.<p>
<dl><dt>Version 2<dd>blank quotes or a quoted string at the end of the FEATURE 
line<dt>&gt;= Version 3<dd>INCREMENT or UPGRADE lines<dt>&gt;= Version 4<dd>OVERDRAFT, DUP_GROUP, INTERNET, or PACKAGE 
appear<dt>&gt;= Version 5<dd>SUPERSEDE, ISSUED, USER_BASED, HOST_BASED, 
or SN appear<dt>&gt;= Version 6<dd>START appears</dl>V1.0 - 1988<p>
First 
FLEXlm<I></I> Release, containing all the basic 
FLEXlm<I></I> features.<p>
V1.5 - February 1990<p>
First widely-used version including DEMO.<p>
V2.1 - March 1991<ul><li>Improved TIMEOUT support<li>Improved ethernet hostid support</ul>V2.21 - November 1991<ul><li>Added support for many platforms, and some platform- specific improvements, 
such as hostid.<li>Hostid ANY added</ul>V2.26 - March 1992 (Used only by Sun)<ul><li>Added license lingering</ul>V2.4 - December 1992<ul><li>Added `use-all-feature-lines' capability for incremental license distribution.<li>Enhanced vendor customization routines.<li>Enhanced End-User Options file.<li>Added new hostid types: USER, HOSTNAME and DISPLAY<li>Added `port@host' to locate license file 
 - down-loads license file from server. 
</ul>V2.61 - March 1993 (Used only by Sun)<ul><li>Added INCREMENT and UPGRADE lines to license file</ul>V3.0 - May 1994 
<ul><li>INCREMENT and UPGRADE behavior changed and improved<li>Added UDP protocol support.<li>Added 'uname -i' hostid for hp.<li>Added 'multiple jobs,' for enhanced support of LM_LICENSE_FILE as a license 
file list.<li>New, optional license file format, with `name=value' syntax for optional new 
features, including: asset_info, ISSUER, and NOTICE, '\' license file 
continuation character, 2048 character limit per feature</ul>V4.0 - December 1994<ul><li>Removed use of floating point, for enhanced reliability<li>FEATURE line additions: ck (for use with lmcksum), OVERDRAFT, 
DUP_GROUP, INTERNET hostid<li>PACKAGE line<li>License Finder<li>lmdiag and FLEXLM_DIAGNOSTICS for end-user diagnostics</ul>V4.1 - May 1995<ul><li>Performance improvements and new platform support.</ul>V4.1 - Patch Release 6, October 1995<ul><li>PC patch release for Windows 95 with various performance improvements.</ul>V5.0 - March 1996<ul><li>Improved port@host behavior - client application doesn't read license file.<li>Automatic port@host via USE_SERVER line in license file.<li>Hostid lists - lock a feature to several hostids.<li>New FEATURE attributes: SN (serial number), USER_BASED, 
HOST_BASED, MINIMUM, SUPERSEDE, ISSUED (issued date), CAPACITY 
(charging based on system capacity).<li>Optional avoidance of NIS and DNS via IP address instead of hostname.<li>Improved REPORTLOG format<li>Server, upon startup, notifies of licenses that will expire within 2 weeks.<li>Improved end-user options file functionality.<li>New FEATURE attributes: SUPERSEDE, ISSUED, USER_BASED, 
HOST_BASED, SN.</ul>V5.11 - February, 1997<ul><li>SUPERSEDE lists, PLATFORMS= license attribute,<li>new end-user options: MAX, TIMEOUTALL, CPU_USAGE_INTERVAL, 
CPU_USAGE_DELTA<li>Windows control panel added. 
<li>Windows license generator GENLIC added.</ul>V5.12 - April, 1997<ul><li>Performance improvements and new platform support.</ul>V6.0 - September, 1997<ul><li>lmgrd can read multiple license files<li>FLEXlm<I></I> license directory support: *.lic automatically used.<li>License files require no editing for use at the end-user site. 
<li>Optional path on DAEMON/VENDOR line; $PATH used.<li>Decimal license format, with lminstall utility for typing in licenses.<li>Feature lines are shorter, easier to understand and type in.<li>PACKAGE lines can be shipped in separate files that never require user editing.<li>Default port numbers make SERVER line port number optional.<li>Default end-user options file path<li>`this_host' hostname supported on SERVER line.<li><I>VENDOR</I>_LICENSE_FILE supported (e.g., `GSI_LICENSE_FILE').<li>@host supported where default port numbers are used.<li>Windows only: user prompted for license file or license server name.<li>License files are optionally case-insensitive.<li>lmdown and lmreread accept -vendor 
<I>name</I> argument.<li>lminstall utility.<li>START=<I>dd-mmm-yyyy 
</I>optional license attribute</ul>v6.1 - June, 1998<ul><li>Performance Improvements.</ul>v7.0 - April, 1999<ul><li>License Certificate Manager support for automatic license fulfillment<li>Support for `try-before-you-buy' licensing<li>lmreread rereads the end-user options file (v7 vendor daemon)<li>license file handles inserted newlines from emailers<li>license lines automatically optimally sorted<li>Improved lmtools.exe interface for Windows<li>lmgrd, when run as command line on Windows, runs in background by default<li>Improved 3-server redundancy reliability (v7 vendor daemon and lmgrd)<li>lmreread and lmdown take -all argument to shutdown or reread all lmgrds<li>Support Registry (Windows) and ~/.flexlmrc for FLEXlm environment variables<li>Automatically install license path in registry (~/.flexlmrc) after successful 
checkout</ul><p><hr><a name="_IX"></a><h1>Index</h1><p>
<li><a href="#_IX_49">asset_info=</a>
<li><a href="#_IX_169">ATM</a>
<li><a href="#_IX_50">ck=</a>
<li><a href="#_IX_86">configuring FLEXlm:number of server nodes</a>
<li><a href="#_IX_142">Control Panel</a>
<li><a href="#_IX_145">Control Panel</a>
<li><a href="#_IX_26">DAEMON;license file:DAEMON line</a>
<li><a href="#_IX_185">debug log file:description of content</a>
<li><a href="#_IX_79">debug log file:rotating to save space</a>
<li><a href="#_IX_184">Debug Log File</a>
<li><a href="#_IX_128">Decimal format licenses:lminstall</a>
<li><a href="#_IX_95">DISPLAY:End-user options file</a>
<li><a href="#_IX_51">dist_info=</a>
<li><a href="#_IX_175">DNS</a>
<li><a href="#_IX_172">domains</a>
<li><a href="#_IX_36">DUP_GROUP=</a>
<li><a href="#_IX_183">Error Code Descriptions</a>
<li><a href="#_IX_113">EXCLUDE:Example</a>
<li><a href="#_IX_92">EXCLUDE</a>
<li><a href="#_IX_97">EXCLUDEALL</a>
<li><a href="#_IX_32">FEATURE:in depth;license file:FEATURE line</a>
<li><a href="#_IX_136">FEATURE:listing users of</a>
<li><a href="#_IX_3">FEATURE:overview</a>
<li><a href="#_IX_161">firewalls</a>
<li><a href="#_IX_182">FLEXlm Error Codes</a>
<li><a href="#_IX_159">FLEXlm Versions:compatibility with different FLEXlm versions</a>
<li><a href="#_IX_188">FLEXlm Versions:description of all previous versions</a>
<li><a href="#_IX_151">FLEXLM_DIAGNOSTICS;troubleshooting:FLEXLM_DIAGNOSTICS</a>
<li><a href="#_IX_94">HOST:End-user options file</a>
<li><a href="#_IX_147">hostid:determining without lmhostid</i></a>
<li><a href="#_IX_37">HOSTID=</a>
<li><a href="#_IX_38">HOST_BASED</a>
<li><a href="#_IX_114">INCLUDE:Example</a>
<li><a href="#_IX_98">INCLUDE</a>
<li><a href="#_IX_99">INCLUDEALL</a>
<li><a href="#_IX_33">INCREMENT:in depth;license file:INCREMENT line</a>
<li><a href="#_IX_7">Installing</a>
<li><a href="#_IX_160">internet:and FLEXlm</a>
<li><a href="#_IX_96">INTERNET:End-user options file</a>
<li><a href="#_IX_170">ISDN</a>
<li><a href="#_IX_40">ISSUED=</a>
<li><a href="#_IX_41">ISSUER=</a>
<li><a href="#_IX_68">license file list</a>
<li><a href="#_IX_69">license file list</a>
<li><a href="#_IX_64">license file:compatibility between different versions</a>
<li><a href="#_IX_4">license file:default location</a>
<li><a href="#_IX_156">license file:frequently asked questions</a>
<li><a href="#_IX_62">license file:how to combine</a>
<li><a href="#_IX_71">license file:list, for redundancy and multiple vendors</a>
<li><a href="#_IX_59">license file:node locking</a>
<li><a href="#_IX_1">license file:overview</a>
<li><a href="#_IX_2">license file:overview</a>
<li><a href="#_IX_131">license file:rereading after an update</a>
<li><a href="#_IX_65">license file:SERVER lines;SERVER lines:combining license files</a>
<li><a href="#_IX_25">license file:SERVER lines</a>
<li><a href="#_IX_13">license file:with multiple servers</a>
<li><a href="#_IX_17">license file:with multiple servers</a>
<li><a href="#_IX_6">license request process:overview of</a>
<li><a href="#_IX_72">license server:how to choose</a>
<li><a href="#_IX_100">LINGER</a>
<li><a href="#_IX_115">lmcksum</a>
<li><a href="#_IX_116">lmcksum</a>
<li><a href="#_IX_117">lmcksum</a>
<li><a href="#_IX_153">lmdiag:debugging connectivity problems</a>
<li><a href="#_IX_150">lmdiag:troubleshooting with</a>
<li><a href="#_IX_119">lmdiag:troubleshooting:lmdiag</a>
<li><a href="#_IX_154">lmdiag;troubleshooting:lmdiag</a>
<li><a href="#_IX_118">lmdiag</a>
<li><a href="#_IX_120">lmdown</a>
<li><a href="#_IX_16">lmgrd:and redundant servers</a>
<li><a href="#_IX_157">lmgrd:combining license files</a>
<li><a href="#_IX_67">lmgrd:compatability between versions</a>
<li><a href="#_IX_186">lmgrd:debug log file</a>
<li><a href="#_IX_80">lmgrd:debug log file</a>
<li><a href="#_IX_111">lmgrd:end-user options file</a>
<li><a href="#_IX_162">lmgrd:firewall support</a>
<li><a href="#_IX_173">lmgrd:hostnames</a>
<li><a href="#_IX_61">lmgrd:license-file list support</a>
<li><a href="#_IX_122">lmgrd:lmdown</a>
<li><a href="#_IX_133">lmgrd:lmreread</a>
<li><a href="#_IX_63">lmgrd:multiple or single lmgrd processes</a>
<li><a href="#_IX_21">lmgrd:NT service</a>
<li><a href="#_IX_10">lmgrd:overview</a>
<li><a href="#_IX_30">lmgrd:PORT=</a>
<li><a href="#_IX_164">lmgrd:root perms on Unix</a>
<li><a href="#_IX_165">lmgrd:running as root</a>
<li><a href="#_IX_121">lmgrd:shutting down with lmdown</a>
<li><a href="#_IX_8">lmgrd:starting automatically at boot time</a>
<li><a href="#_IX_124">lmgrd:syntax</a>
<li><a href="#_IX_163">lmgrd:tcp ports</a>
<li><a href="#_IX_19">lmgrd:Unix startup script</a>
<li><a href="#_IX_125">lmgrd:usage</a>
<li><a href="#_IX_14">lmgrd:v6 supports license path</a>
<li><a href="#_IX_27">lmgrd:VENDOR (DAEMON) line usage</a>
<li><a href="#_IX_189">lmgrd:version compatibility</a>
<li><a href="#_IX_181">lmgrd:Windows 95</a>
<li><a href="#_IX_22">lmgrd:Windows 95</a>
<li><a href="#_IX_143">lmgrd:Windows Control Panel</a>
<li><a href="#_IX_11">lmgrd</a>
<li><a href="#_IX_126">lmhostid</a>
<li><a href="#_IX_35">lmhostid</a>
<li><a href="#_IX_127">lminstall</a>
<li><a href="#_IX_129">lmremove</a>
<li><a href="#_IX_130">lmreread</a>
<li><a href="#_IX_149">lmstat -a:troubleshooting flexlm with</a>
<li><a href="#_IX_135">lmstat</a>
<li><a href="#_IX_137">lmswitchr</a>
<li><a href="#_IX_141">LMTOOLS</a>
<li><a href="#_IX_139">lmver</a>
<li><a href="#_IX_70">LM_LICENSE_FILE:License file list</a>
<li><a href="#_IX_23">LM_LICENSE_FILE:syntax</a>
<li><a href="#_IX_5">LM_LICENSE_FILE:used to reference multiple files</a>
<li><a href="#_IX_88">LM_LICENSE_FILE</a>
<li><a href="#_IX_105">LM_PROJECT</a>
<li><a href="#_IX_78">log file:managing</a>
<li><a href="#_IX_101">MAX</a>
<li><a href="#_IX_102">MAX_OVERDRAFT</a>
<li><a href="#_IX_60">Multiple License Files</a>
<li><a href="#_IX_82">network bandwidth, and FLEXlm</a>
<li><a href="#_IX_167">network:FLEXlm load</a>
<li><a href="#_IX_168">NFS</a>
<li><a href="#_IX_174">NIS</a>
<li><a href="#_IX_58">node locking:mixed with floating</a>
<li><a href="#_IX_103">NOLOG</a>
<li><a href="#_IX_42">NOTICE=</a>
<li><a href="#_IX_144">NT: Control Panel</a>
<li><a href="#_IX_9">Options file: overview</a>
<li><a href="#_IX_134">options file:and lmreread</a>
<li><a href="#_IX_112">Options File:Example</a>
<li><a href="#_IX_39">options file:required for HOST_BASED and USER_BASED</a>
<li><a href="#_IX_29">options file:specifying on DAEMON line</a>
<li><a href="#_IX_90">options file:syntax and description</a>
<li><a href="#_IX_110">options file:usage examples</a>
<li><a href="#_IX_55">OPTIONS=SUITE</a>
<li><a href="#_IX_43">OVERDRAFT=</a>
<li><a href="#_IX_54">PACKAGE:syntax;license file:PACKAGE line</a>
<li><a href="#_IX_24">redundant servers:and SERVER line</a>
<li><a href="#_IX_15">redundant servers:keep separate license file copies</a>
<li><a href="#_IX_84">Redundant Servers:Overview</a>
<li><a href="#_IX_87">redundant servers:selecting server nodes</a>
<li><a href="#_IX_83">remote disks:guidelines for using</a>
<li><a href="#_IX_104">REPORTLOG</a>
<li><a href="#_IX_77">REPORTLOG</a>
<li><a href="#_IX_106">RESERVE</a>
<li><a href="#_IX_85">server nodes:deciding number of</a>
<li><a href="#_IX_76">servers:disk space used</a>
<li><a href="#_IX_44">SN=</a>
<li><a href="#_IX_75">sockets:differences under SCO</a>
<li><a href="#_IX_74">sockets:number used by license server;servers:sockets used</a>
<li><a href="#_IX_45">START=</a>
<li><a href="#_IX_171">subnets</a>
<li><a href="#_IX_56">SUITE</a>
<li><a href="#_IX_46">SUPERSEDE</a>
<li><a href="#_IX_107">TIMEOUT</a>
<li><a href="#_IX_109">TIMEOUTALL</a>
<li><a href="#_IX_148">Troubleshooting:guide</a>
<li><a href="#_IX_152">Troubleshooting</a>
<li><a href="#_IX_166">Unix:and lmgrd</a>
<li><a href="#_IX_57">UPGRADE</a>
<li><a href="#_IX_93">USER:End-user options file</a>
<li><a href="#_IX_47">USER_BASED</a>
<li><a href="#_IX_52">user_info=</a>
<li><a href="#_IX_31">USE_SERVER;license file:USE_SERVER</a>
<li><a href="#_IX_18">vendor daemon:and redundant servers</a>
<li><a href="#_IX_28">vendor daemon:DAEMON (or VENDOR) license line</a>
<li><a href="#_IX_187">vendor daemon:debug log file</a>
<li><a href="#_IX_34">vendor daemon:FEATURE line </a>
<li><a href="#_IX_132">vendor daemon:lmreread</a>
<li><a href="#_IX_138">vendor daemon:lmswitchr</a>
<li><a href="#_IX_81">vendor daemon:memory usage</a>
<li><a href="#_IX_12">vendor daemon:netware support</a>
<li><a href="#_IX_91">vendor daemon:options file</a>
<li><a href="#_IX_123">vendor daemon:restarting</a>
<li><a href="#_IX_73">vendor daemon:sockets</a>
<li><a href="#_IX_108">vendor daemon:TIMEOUT</a>
<li><a href="#_IX_89">vendor daemon:uncounted licenses</a>
<li><a href="#_IX_155">vendor daemon:VENDOR_LICENSE_FILE</a>
<li><a href="#_IX_66">vendor daemon:version compatibility</a>
<li><a href="#_IX_20">VENDOR</a>
<li><a href="#_IX_53">vendor_info=</a>
<li><a href="#_IX_48">VENDOR_STRING=</a>
<li><a href="#_IX_177">wide-area network:performance</a>
<li><a href="#_IX_180">Windows 95:and license server</a>
<li><a href="#_IX_146">Windows 95:Control Panel</a>
<li><a href="#_IX_178">Windows Questions</a>
<li><a href="#_IX_140">Windows:license administration tools</a>
<li><a href="#_IX_179">WINSOCKX.DLL</a>
<li><a href="#_IX_176">X-Display</a>
<li><a href="#_IX_158">year 2000</a>
</body></html>
